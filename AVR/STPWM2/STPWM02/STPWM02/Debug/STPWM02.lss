
STPWM02.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000214  00800100  0000251c  000025d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000251c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000156  00800314  00800314  000027e4  2**0
                  ALLOC
  3 .eeprom       00000012  00810000  00810000  000027e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  000027f6  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002854  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000000d8  00000000  00000000  00002894  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001736  00000000  00000000  0000296c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000926  00000000  00000000  000040a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001ea1  00000000  00000000  000049c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000036c  00000000  00000000  0000686c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000137b7  00000000  00000000  00006bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000eef  00000000  00000000  0001a38f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000138  00000000  00000000  0001b27e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_macro  000045f1  00000000  00000000  0001b3b6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	1d c1       	rjmp	.+570    	; 0x23c <__ctors_end>
       2:	00 00       	nop
       4:	37 c1       	rjmp	.+622    	; 0x274 <__bad_interrupt>
       6:	00 00       	nop
       8:	35 c1       	rjmp	.+618    	; 0x274 <__bad_interrupt>
       a:	00 00       	nop
       c:	33 c1       	rjmp	.+614    	; 0x274 <__bad_interrupt>
       e:	00 00       	nop
      10:	31 c1       	rjmp	.+610    	; 0x274 <__bad_interrupt>
      12:	00 00       	nop
      14:	2f c1       	rjmp	.+606    	; 0x274 <__bad_interrupt>
      16:	00 00       	nop
      18:	2d c1       	rjmp	.+602    	; 0x274 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	2b c1       	rjmp	.+598    	; 0x274 <__bad_interrupt>
      1e:	00 00       	nop
      20:	29 c1       	rjmp	.+594    	; 0x274 <__bad_interrupt>
      22:	00 00       	nop
      24:	27 c1       	rjmp	.+590    	; 0x274 <__bad_interrupt>
      26:	00 00       	nop
      28:	25 c1       	rjmp	.+586    	; 0x274 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	23 c1       	rjmp	.+582    	; 0x274 <__bad_interrupt>
      2e:	00 00       	nop
      30:	21 c1       	rjmp	.+578    	; 0x274 <__bad_interrupt>
      32:	00 00       	nop
      34:	1f c1       	rjmp	.+574    	; 0x274 <__bad_interrupt>
      36:	00 00       	nop
      38:	1d c1       	rjmp	.+570    	; 0x274 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	1b c1       	rjmp	.+566    	; 0x274 <__bad_interrupt>
      3e:	00 00       	nop
      40:	19 c1       	rjmp	.+562    	; 0x274 <__bad_interrupt>
      42:	00 00       	nop
      44:	17 c1       	rjmp	.+558    	; 0x274 <__bad_interrupt>
      46:	00 00       	nop
      48:	df c5       	rjmp	.+3006   	; 0xc08 <__vector_18>
      4a:	00 00       	nop
      4c:	13 c1       	rjmp	.+550    	; 0x274 <__bad_interrupt>
      4e:	00 00       	nop
      50:	11 c6       	rjmp	.+3106   	; 0xc74 <__vector_20>
      52:	00 00       	nop
      54:	0f c1       	rjmp	.+542    	; 0x274 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c6       	rjmp	.+3272   	; 0xd22 <__vector_22>
      5a:	00 00       	nop
      5c:	0b c1       	rjmp	.+534    	; 0x274 <__bad_interrupt>
      5e:	00 00       	nop
      60:	e1 c4       	rjmp	.+2498   	; 0xa24 <__vector_24>
      62:	00 00       	nop
      64:	07 c1       	rjmp	.+526    	; 0x274 <__bad_interrupt>
      66:	00 00       	nop
      68:	05 c1       	rjmp	.+522    	; 0x274 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	03 c1       	rjmp	.+518    	; 0x274 <__bad_interrupt>
      6e:	00 00       	nop
      70:	01 c1       	rjmp	.+514    	; 0x274 <__bad_interrupt>
      72:	00 00       	nop
      74:	ff c0       	rjmp	.+510    	; 0x274 <__bad_interrupt>
      76:	00 00       	nop
      78:	fd c0       	rjmp	.+506    	; 0x274 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	07 63       	ori	r16, 0x37	; 55
      7e:	42 36       	cpi	r20, 0x62	; 98
      80:	b7 9b       	sbis	0x16, 7	; 22
      82:	d8 a7       	std	Y+40, r29	; 0x28
      84:	1a 39       	cpi	r17, 0x9A	; 154
      86:	68 56       	subi	r22, 0x68	; 104
      88:	18 ae       	std	Y+56, r1	; 0x38
      8a:	ba ab       	std	Y+50, r27	; 0x32
      8c:	55 8c       	ldd	r5, Z+29	; 0x1d
      8e:	1d 3c       	cpi	r17, 0xCD	; 205
      90:	b7 cc       	rjmp	.-1682   	; 0xfffffa00 <__eeprom_end+0xff7ef9ee>
      92:	57 63       	ori	r21, 0x37	; 55
      94:	bd 6d       	ori	r27, 0xDD	; 221
      96:	ed fd       	.word	0xfded	; ????
      98:	75 3e       	cpi	r23, 0xE5	; 229
      9a:	f6 17       	cp	r31, r22
      9c:	72 31       	cpi	r23, 0x12	; 18
      9e:	bf 00       	.word	0x00bf	; ????
      a0:	00 00       	nop
      a2:	80 3f       	cpi	r24, 0xF0	; 240
      a4:	08 00       	.word	0x0008	; ????
      a6:	00 00       	nop
      a8:	be 92       	st	-X, r11
      aa:	24 49       	sbci	r18, 0x94	; 148
      ac:	12 3e       	cpi	r17, 0xE2	; 226
      ae:	ab aa       	std	Y+51, r10	; 0x33
      b0:	aa 2a       	or	r10, r26
      b2:	be cd       	rjmp	.-1156   	; 0xfffffc30 <__eeprom_end+0xff7efc1e>
      b4:	cc cc       	rjmp	.-1640   	; 0xfffffa4e <__eeprom_end+0xff7efa3c>
      b6:	4c 3e       	cpi	r20, 0xEC	; 236
      b8:	00 00       	nop
      ba:	00 80       	ld	r0, Z
      bc:	be ab       	std	Y+54, r27	; 0x36
      be:	aa aa       	std	Y+50, r10	; 0x32
      c0:	aa 3e       	cpi	r26, 0xEA	; 234
      c2:	00 00       	nop
      c4:	00 00       	nop
      c6:	bf 00       	.word	0x00bf	; ????
      c8:	00 00       	nop
      ca:	80 3f       	cpi	r24, 0xF0	; 240
      cc:	00 00       	nop
      ce:	00 00       	nop
      d0:	00 08       	sbc	r0, r0
      d2:	41 78       	andi	r20, 0x81	; 129
      d4:	d3 bb       	out	0x13, r29	; 19
      d6:	43 87       	std	Z+11, r20	; 0x0b
      d8:	d1 13       	cpse	r29, r17
      da:	3d 19       	sub	r19, r13
      dc:	0e 3c       	cpi	r16, 0xCE	; 206
      de:	c3 bd       	out	0x23, r28	; 35
      e0:	42 82       	std	Z+2, r4	; 0x02
      e2:	ad 2b       	or	r26, r29
      e4:	3e 68       	ori	r19, 0x8E	; 142
      e6:	ec 82       	std	Y+4, r14	; 0x04
      e8:	76 be       	out	0x36, r7	; 54
      ea:	d9 8f       	std	Y+25, r29	; 0x19
      ec:	e1 a9       	ldd	r30, Z+49	; 0x31
      ee:	3e 4c       	sbci	r19, 0xCE	; 206
      f0:	80 ef       	ldi	r24, 0xF0	; 240
      f2:	ff be       	out	0x3f, r15	; 63
      f4:	01 c4       	rjmp	.+2050   	; 0x8f8 <rx_parse+0x380>
      f6:	ff 7f       	andi	r31, 0xFF	; 255
      f8:	3f 00       	.word	0x003f	; ????
      fa:	00 00       	nop
	...

000000fe <__trampolines_end>:
      fe:	6e 61       	ori	r22, 0x1E	; 30
     100:	6e 00       	.word	0x006e	; ????

00000102 <__c.2177>:
     102:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     112:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     122:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     132:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     142:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     152:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     162:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     172:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     182:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     192:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1a2:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1b2:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1c2:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1d2:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1e2:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1f2:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000200 <pstr_nan>:
     200:	4e 41 4e                                            NAN

00000203 <pstr_inity>:
     203:	49 4e 49 54 59                                      INITY

00000208 <pstr_inf>:
     208:	49 4e 46                                            INF

0000020b <pwr_m10>:
     20b:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     21b:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000223 <pwr_p10>:
     223:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     233:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

0000023c <__ctors_end>:
     23c:	11 24       	eor	r1, r1
     23e:	1f be       	out	0x3f, r1	; 63
     240:	cf ef       	ldi	r28, 0xFF	; 255
     242:	d4 e0       	ldi	r29, 0x04	; 4
     244:	de bf       	out	0x3e, r29	; 62
     246:	cd bf       	out	0x3d, r28	; 61

00000248 <__do_copy_data>:
     248:	13 e0       	ldi	r17, 0x03	; 3
     24a:	a0 e0       	ldi	r26, 0x00	; 0
     24c:	b1 e0       	ldi	r27, 0x01	; 1
     24e:	ec e1       	ldi	r30, 0x1C	; 28
     250:	f5 e2       	ldi	r31, 0x25	; 37
     252:	02 c0       	rjmp	.+4      	; 0x258 <__do_copy_data+0x10>
     254:	05 90       	lpm	r0, Z+
     256:	0d 92       	st	X+, r0
     258:	a4 31       	cpi	r26, 0x14	; 20
     25a:	b1 07       	cpc	r27, r17
     25c:	d9 f7       	brne	.-10     	; 0x254 <__do_copy_data+0xc>

0000025e <__do_clear_bss>:
     25e:	24 e0       	ldi	r18, 0x04	; 4
     260:	a4 e1       	ldi	r26, 0x14	; 20
     262:	b3 e0       	ldi	r27, 0x03	; 3
     264:	01 c0       	rjmp	.+2      	; 0x268 <.do_clear_bss_start>

00000266 <.do_clear_bss_loop>:
     266:	1d 92       	st	X+, r1

00000268 <.do_clear_bss_start>:
     268:	aa 36       	cpi	r26, 0x6A	; 106
     26a:	b2 07       	cpc	r27, r18
     26c:	e1 f7       	brne	.-8      	; 0x266 <.do_clear_bss_loop>
     26e:	ba d5       	rcall	.+2932   	; 0xde4 <main>
     270:	0c 94 8c 12 	jmp	0x2518	; 0x2518 <_exit>

00000274 <__bad_interrupt>:
     274:	c5 ce       	rjmp	.-630    	; 0x0 <__vectors>

00000276 <write_params_to_eeprom>:
}


void write_params_to_eeprom( uint8_t mode )			//Calculate crc and write params with crc to eeprom
{
	cli();
     276:	f8 94       	cli

	if(mode == GDU)
     278:	8b 30       	cpi	r24, 0x0B	; 11
     27a:	41 f5       	brne	.+80     	; 0x2cc <write_params_to_eeprom+0x56>
	{
		kA = 348.49;
     27c:	ef e0       	ldi	r30, 0x0F	; 15
     27e:	f4 e0       	ldi	r31, 0x04	; 4
     280:	88 eb       	ldi	r24, 0xB8	; 184
     282:	9e e3       	ldi	r25, 0x3E	; 62
     284:	ae ea       	ldi	r26, 0xAE	; 174
     286:	b3 e4       	ldi	r27, 0x43	; 67
     288:	80 83       	st	Z, r24
     28a:	91 83       	std	Z+1, r25	; 0x01
     28c:	a2 83       	std	Z+2, r26	; 0x02
     28e:	b3 83       	std	Z+3, r27	; 0x03
		kB = -2168.1;
     290:	8a e9       	ldi	r24, 0x9A	; 154
     292:	91 e8       	ldi	r25, 0x81	; 129
     294:	a7 e0       	ldi	r26, 0x07	; 7
     296:	b5 ec       	ldi	r27, 0xC5	; 197
     298:	84 83       	std	Z+4, r24	; 0x04
     29a:	95 83       	std	Z+5, r25	; 0x05
     29c:	a6 83       	std	Z+6, r26	; 0x06
     29e:	b7 83       	std	Z+7, r27	; 0x07
		kC = 4625.9;
     2a0:	83 e3       	ldi	r24, 0x33	; 51
     2a2:	9f e8       	ldi	r25, 0x8F	; 143
     2a4:	a0 e9       	ldi	r26, 0x90	; 144
     2a6:	b5 e4       	ldi	r27, 0x45	; 69
     2a8:	80 87       	std	Z+8, r24	; 0x08
     2aa:	91 87       	std	Z+9, r25	; 0x09
     2ac:	a2 87       	std	Z+10, r26	; 0x0a
     2ae:	b3 87       	std	Z+11, r27	; 0x0b
		kD = -3154.9;
     2b0:	86 e6       	ldi	r24, 0x66	; 102
     2b2:	9e e2       	ldi	r25, 0x2E	; 46
     2b4:	a5 e4       	ldi	r26, 0x45	; 69
     2b6:	b5 ec       	ldi	r27, 0xC5	; 197
     2b8:	84 87       	std	Z+12, r24	; 0x0c
     2ba:	95 87       	std	Z+13, r25	; 0x0d
     2bc:	a6 87       	std	Z+14, r26	; 0x0e
     2be:	b7 87       	std	Z+15, r27	; 0x0f
		
		
		DEBUG_PRINT("\n\rGDU def coef is set\n\r");
     2c0:	67 e1       	ldi	r22, 0x17	; 23
     2c2:	70 e0       	ldi	r23, 0x00	; 0
     2c4:	81 e0       	ldi	r24, 0x01	; 1
     2c6:	91 e0       	ldi	r25, 0x01	; 1
     2c8:	ec d0       	rcall	.+472    	; 0x4a2 <debug_print_str>
     2ca:	2d c0       	rjmp	.+90     	; 0x326 <write_params_to_eeprom+0xb0>
	}
	if(mode == SIP)
     2cc:	86 31       	cpi	r24, 0x16	; 22
     2ce:	21 f5       	brne	.+72     	; 0x318 <write_params_to_eeprom+0xa2>
	{
		kA = 0;
     2d0:	ef e0       	ldi	r30, 0x0F	; 15
     2d2:	f4 e0       	ldi	r31, 0x04	; 4
     2d4:	10 82       	st	Z, r1
     2d6:	11 82       	std	Z+1, r1	; 0x01
     2d8:	12 82       	std	Z+2, r1	; 0x02
     2da:	13 82       	std	Z+3, r1	; 0x03
		kB = 476.43;
     2dc:	8a e0       	ldi	r24, 0x0A	; 10
     2de:	97 e3       	ldi	r25, 0x37	; 55
     2e0:	ae ee       	ldi	r26, 0xEE	; 238
     2e2:	b3 e4       	ldi	r27, 0x43	; 67
     2e4:	84 83       	std	Z+4, r24	; 0x04
     2e6:	95 83       	std	Z+5, r25	; 0x05
     2e8:	a6 83       	std	Z+6, r26	; 0x06
     2ea:	b7 83       	std	Z+7, r27	; 0x07
		kC = -668.44;
     2ec:	89 e2       	ldi	r24, 0x29	; 41
     2ee:	9c e1       	ldi	r25, 0x1C	; 28
     2f0:	a7 e2       	ldi	r26, 0x27	; 39
     2f2:	b4 ec       	ldi	r27, 0xC4	; 196
     2f4:	80 87       	std	Z+8, r24	; 0x08
     2f6:	91 87       	std	Z+9, r25	; 0x09
     2f8:	a2 87       	std	Z+10, r26	; 0x0a
     2fa:	b3 87       	std	Z+11, r27	; 0x0b
		kD = 236.04;
     2fc:	8d e3       	ldi	r24, 0x3D	; 61
     2fe:	9a e0       	ldi	r25, 0x0A	; 10
     300:	ac e6       	ldi	r26, 0x6C	; 108
     302:	b3 e4       	ldi	r27, 0x43	; 67
     304:	84 87       	std	Z+12, r24	; 0x0c
     306:	95 87       	std	Z+13, r25	; 0x0d
     308:	a6 87       	std	Z+14, r26	; 0x0e
     30a:	b7 87       	std	Z+15, r27	; 0x0f
		DEBUG_PRINT("\n\rSIP def coef is set\n\r");
     30c:	67 e1       	ldi	r22, 0x17	; 23
     30e:	70 e0       	ldi	r23, 0x00	; 0
     310:	89 e1       	ldi	r24, 0x19	; 25
     312:	91 e0       	ldi	r25, 0x01	; 1
     314:	c6 d0       	rcall	.+396    	; 0x4a2 <debug_print_str>
     316:	07 c0       	rjmp	.+14     	; 0x326 <write_params_to_eeprom+0xb0>
	}
	
	if(mode == SET_VAL)
     318:	81 11       	cpse	r24, r1
     31a:	05 c0       	rjmp	.+10     	; 0x326 <write_params_to_eeprom+0xb0>
	{
		DEBUG_PRINT("\n\rcoef is set\n\r");
     31c:	6f e0       	ldi	r22, 0x0F	; 15
     31e:	70 e0       	ldi	r23, 0x00	; 0
     320:	81 e3       	ldi	r24, 0x31	; 49
     322:	91 e0       	ldi	r25, 0x01	; 1
     324:	be d0       	rcall	.+380    	; 0x4a2 <debug_print_str>
	}

	
	uint8_t *ptr8 = ( uint8_t * )Coef;
	eeprom_busy_wait();
     326:	f9 99       	sbic	0x1f, 1	; 31
     328:	fe cf       	rjmp	.-4      	; 0x326 <write_params_to_eeprom+0xb0>
	eeprom_update_block ((const uint8_t *)Coef, (void *)(databufer_eeprom+EEPROM_ADDR_SHIFT), EEPROM_DATABUF_SIZE - 2);
     32a:	40 e1       	ldi	r20, 0x10	; 16
     32c:	50 e0       	ldi	r21, 0x00	; 0
     32e:	60 e2       	ldi	r22, 0x20	; 32
     330:	70 e0       	ldi	r23, 0x00	; 0
     332:	8f e0       	ldi	r24, 0x0F	; 15
     334:	94 e0       	ldi	r25, 0x04	; 4
     336:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <eeprom_update_block>
     33a:	ef e0       	ldi	r30, 0x0F	; 15
     33c:	f4 e0       	ldi	r31, 0x04	; 4
     33e:	2f e1       	ldi	r18, 0x1F	; 31
     340:	34 e0       	ldi	r19, 0x04	; 4
	
	uint16_t crc = 0;
     342:	60 e0       	ldi	r22, 0x00	; 0
     344:	70 e0       	ldi	r23, 0x00	; 0
	for(int i =0; i < EEPROM_DATABUF_SIZE - 2; i++)
	{
		crc = _crc16_update( crc, *ptr8++);
     346:	81 91       	ld	r24, Z+
_crc16_update(uint16_t __crc, uint8_t __data)
{
	uint8_t __tmp;
	uint16_t __ret;

	__asm__ __volatile__ (
     348:	68 27       	eor	r22, r24
     34a:	86 2f       	mov	r24, r22
     34c:	82 95       	swap	r24
     34e:	86 27       	eor	r24, r22
     350:	08 2e       	mov	r0, r24
     352:	86 95       	lsr	r24
     354:	86 95       	lsr	r24
     356:	80 25       	eor	r24, r0
     358:	08 2e       	mov	r0, r24
     35a:	86 95       	lsr	r24
     35c:	80 25       	eor	r24, r0
     35e:	87 70       	andi	r24, 0x07	; 7
     360:	06 2e       	mov	r0, r22
     362:	67 2f       	mov	r22, r23
     364:	86 95       	lsr	r24
     366:	07 94       	ror	r0
     368:	87 95       	ror	r24
     36a:	70 2d       	mov	r23, r0
     36c:	68 27       	eor	r22, r24
     36e:	06 94       	lsr	r0
     370:	87 95       	ror	r24
     372:	70 25       	eor	r23, r0
     374:	68 27       	eor	r22, r24
	uint8_t *ptr8 = ( uint8_t * )Coef;
	eeprom_busy_wait();
	eeprom_update_block ((const uint8_t *)Coef, (void *)(databufer_eeprom+EEPROM_ADDR_SHIFT), EEPROM_DATABUF_SIZE - 2);
	
	uint16_t crc = 0;
	for(int i =0; i < EEPROM_DATABUF_SIZE - 2; i++)
     376:	e2 17       	cp	r30, r18
     378:	f3 07       	cpc	r31, r19
     37a:	29 f7       	brne	.-54     	; 0x346 <write_params_to_eeprom+0xd0>
	{
		crc = _crc16_update( crc, *ptr8++);
	}
	eeprom_busy_wait();
     37c:	f9 99       	sbic	0x1f, 1	; 31
     37e:	fe cf       	rjmp	.-4      	; 0x37c <write_params_to_eeprom+0x106>
	eeprom_write_word( (uint16_t *)(databufer_eeprom+16+EEPROM_ADDR_SHIFT), crc);
     380:	80 e3       	ldi	r24, 0x30	; 48
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <eeprom_write_word>
	sei();
     388:	78 94       	sei
     38a:	08 95       	ret

0000038c <read_eeprom>:
uint8_t EEMEM databufer_eeprom[EEPROM_DATABUF_SIZE];



bool read_eeprom( void )
{
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	66 97       	sbiw	r28, 0x16	; 22
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	f8 94       	cli
     39a:	de bf       	out	0x3e, r29	; 62
     39c:	0f be       	out	0x3f, r0	; 63
     39e:	cd bf       	out	0x3d, r28	; 61
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	90 e0       	ldi	r25, 0x00	; 0
 * @{
 */
__always_optimize
static inline void __portable_avr_delay_cycles(unsigned long n)
{
	do { barrier(); } while (--n);
     3a4:	01 96       	adiw	r24, 0x01	; 1
     3a6:	85 33       	cpi	r24, 0x35	; 53
     3a8:	22 e8       	ldi	r18, 0x82	; 130
     3aa:	92 07       	cpc	r25, r18
     3ac:	d9 f7       	brne	.-10     	; 0x3a4 <read_eeprom+0x18>
	delay_ms(200);
	cli();
     3ae:	f8 94       	cli
	uint8_t tmpbuf[EEPROM_DATABUF_SIZE];
	eeprom_busy_wait();
     3b0:	f9 99       	sbic	0x1f, 1	; 31
     3b2:	fe cf       	rjmp	.-4      	; 0x3b0 <read_eeprom+0x24>
	eeprom_read_block((void *)tmpbuf, (const void *)(databufer_eeprom + EEPROM_ADDR_SHIFT), EEPROM_DATABUF_SIZE);		//Read 18 bits from *databuf + EEPROM_ADDR_SHIFT eeprom address
     3b4:	42 e1       	ldi	r20, 0x12	; 18
     3b6:	50 e0       	ldi	r21, 0x00	; 0
     3b8:	60 e2       	ldi	r22, 0x20	; 32
     3ba:	70 e0       	ldi	r23, 0x00	; 0
     3bc:	ce 01       	movw	r24, r28
     3be:	01 96       	adiw	r24, 0x01	; 1
     3c0:	0e 94 4a 12 	call	0x2494	; 0x2494 <eeprom_read_block>
	eeprom_busy_wait();
     3c4:	f9 99       	sbic	0x1f, 1	; 31
     3c6:	fe cf       	rjmp	.-4      	; 0x3c4 <read_eeprom+0x38>
     3c8:	fe 01       	movw	r30, r28
     3ca:	31 96       	adiw	r30, 0x01	; 1
     3cc:	ae 01       	movw	r20, r28
     3ce:	4f 5e       	subi	r20, 0xEF	; 239
     3d0:	5f 4f       	sbci	r21, 0xFF	; 255
     3d2:	df 01       	movw	r26, r30
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
	uint16_t crc = 0;
	for(int i =0; i < EEPROM_DATABUF_SIZE - 2; i++)						//Crc calculation
	{
		crc = _crc16_update( crc, tmpbuf[i]);
     3d8:	8d 91       	ld	r24, X+
     3da:	28 27       	eor	r18, r24
     3dc:	82 2f       	mov	r24, r18
     3de:	82 95       	swap	r24
     3e0:	82 27       	eor	r24, r18
     3e2:	08 2e       	mov	r0, r24
     3e4:	86 95       	lsr	r24
     3e6:	86 95       	lsr	r24
     3e8:	80 25       	eor	r24, r0
     3ea:	08 2e       	mov	r0, r24
     3ec:	86 95       	lsr	r24
     3ee:	80 25       	eor	r24, r0
     3f0:	87 70       	andi	r24, 0x07	; 7
     3f2:	02 2e       	mov	r0, r18
     3f4:	23 2f       	mov	r18, r19
     3f6:	86 95       	lsr	r24
     3f8:	07 94       	ror	r0
     3fa:	87 95       	ror	r24
     3fc:	30 2d       	mov	r19, r0
     3fe:	28 27       	eor	r18, r24
     400:	06 94       	lsr	r0
     402:	87 95       	ror	r24
     404:	30 25       	eor	r19, r0
     406:	28 27       	eor	r18, r24
	uint8_t tmpbuf[EEPROM_DATABUF_SIZE];
	eeprom_busy_wait();
	eeprom_read_block((void *)tmpbuf, (const void *)(databufer_eeprom + EEPROM_ADDR_SHIFT), EEPROM_DATABUF_SIZE);		//Read 18 bits from *databuf + EEPROM_ADDR_SHIFT eeprom address
	eeprom_busy_wait();
	uint16_t crc = 0;
	for(int i =0; i < EEPROM_DATABUF_SIZE - 2; i++)						//Crc calculation
     408:	a4 17       	cp	r26, r20
     40a:	b5 07       	cpc	r27, r21
     40c:	29 f7       	brne	.-54     	; 0x3d8 <read_eeprom+0x4c>
     40e:	3d c0       	rjmp	.+122    	; 0x48a <read_eeprom+0xfe>
	uint8_t bufss[4];
	for(int j = 0; j < EEPROM_DATABUF_SIZE - 2; j += 4)				// Get float val from eeprom
	{
		for( int i = 0 ; i < 4; i++)
		{
			bufss[i] = tmpbuf[i+j];
     410:	81 91       	ld	r24, Z+
     412:	8d 93       	st	X+, r24
	}

	uint8_t bufss[4];
	for(int j = 0; j < EEPROM_DATABUF_SIZE - 2; j += 4)				// Get float val from eeprom
	{
		for( int i = 0 ; i < 4; i++)
     414:	4e 17       	cp	r20, r30
     416:	5f 07       	cpc	r21, r31
     418:	d9 f7       	brne	.-10     	; 0x410 <read_eeprom+0x84>
		{
			bufss[i] = tmpbuf[i+j];
		}
		float *ptrf = (float *)bufss;
		Coef[(int)j/4] = *ptrf;
     41a:	cb 01       	movw	r24, r22
     41c:	77 23       	and	r23, r23
     41e:	0c f4       	brge	.+2      	; 0x422 <read_eeprom+0x96>
     420:	03 96       	adiw	r24, 0x03	; 3
     422:	8c 7f       	andi	r24, 0xFC	; 252
     424:	fc 01       	movw	r30, r24
     426:	e1 5f       	subi	r30, 0xF1	; 241
     428:	fb 4f       	sbci	r31, 0xFB	; 251
     42a:	8b 89       	ldd	r24, Y+19	; 0x13
     42c:	9c 89       	ldd	r25, Y+20	; 0x14
     42e:	ad 89       	ldd	r26, Y+21	; 0x15
     430:	be 89       	ldd	r27, Y+22	; 0x16
     432:	80 83       	st	Z, r24
     434:	91 83       	std	Z+1, r25	; 0x01
     436:	a2 83       	std	Z+2, r26	; 0x02
     438:	b3 83       	std	Z+3, r27	; 0x03
	{
		crc = _crc16_update( crc, tmpbuf[i]);
	}

	uint8_t bufss[4];
	for(int j = 0; j < EEPROM_DATABUF_SIZE - 2; j += 4)				// Get float val from eeprom
     43a:	6c 5f       	subi	r22, 0xFC	; 252
     43c:	7f 4f       	sbci	r23, 0xFF	; 255
     43e:	fa 01       	movw	r30, r20
     440:	60 31       	cpi	r22, 0x10	; 16
     442:	71 05       	cpc	r23, r1
     444:	31 f0       	breq	.+12     	; 0x452 <read_eeprom+0xc6>
     446:	de 01       	movw	r26, r28
     448:	53 96       	adiw	r26, 0x13	; 19
     44a:	af 01       	movw	r20, r30
     44c:	4c 5f       	subi	r20, 0xFC	; 252
     44e:	5f 4f       	sbci	r21, 0xFF	; 255
     450:	df cf       	rjmp	.-66     	; 0x410 <read_eeprom+0x84>
		float *ptrf = (float *)bufss;
		Coef[(int)j/4] = *ptrf;
	}
	//
	
	if( crc == (((uint16_t)tmpbuf[EEPROM_DATABUF_SIZE-1] << 8) + (uint16_t)tmpbuf[EEPROM_DATABUF_SIZE-2]) )		//Check read data and read crc
     452:	8a 89       	ldd	r24, Y+18	; 0x12
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	98 2f       	mov	r25, r24
     458:	88 27       	eor	r24, r24
     45a:	49 89       	ldd	r20, Y+17	; 0x11
     45c:	84 0f       	add	r24, r20
     45e:	91 1d       	adc	r25, r1
     460:	82 17       	cp	r24, r18
     462:	93 07       	cpc	r25, r19
     464:	41 f4       	brne	.+16     	; 0x476 <read_eeprom+0xea>
	{
		DEBUG_PRINT("\ncrc ok\n");
     466:	68 e0       	ldi	r22, 0x08	; 8
     468:	70 e0       	ldi	r23, 0x00	; 0
     46a:	81 e4       	ldi	r24, 0x41	; 65
     46c:	91 e0       	ldi	r25, 0x01	; 1
     46e:	19 d0       	rcall	.+50     	; 0x4a2 <debug_print_str>
		sei();
     470:	78 94       	sei
		return true;
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	0d c0       	rjmp	.+26     	; 0x490 <read_eeprom+0x104>
	}
	else														// Read data is incorrect
	{
		DEBUG_PRINT("\n\rwrite params\n\r");
     476:	60 e1       	ldi	r22, 0x10	; 16
     478:	70 e0       	ldi	r23, 0x00	; 0
     47a:	8a e4       	ldi	r24, 0x4A	; 74
     47c:	91 e0       	ldi	r25, 0x01	; 1
     47e:	11 d0       	rcall	.+34     	; 0x4a2 <debug_print_str>
		write_params_to_eeprom(GDU);
     480:	8b e0       	ldi	r24, 0x0B	; 11
     482:	f9 de       	rcall	.-526    	; 0x276 <write_params_to_eeprom>
		
		
		
	}
	sei();
     484:	78 94       	sei
	return false;
     486:	80 e0       	ldi	r24, 0x00	; 0
     488:	03 c0       	rjmp	.+6      	; 0x490 <read_eeprom+0x104>
	uint8_t tmpbuf[EEPROM_DATABUF_SIZE];
	eeprom_busy_wait();
	eeprom_read_block((void *)tmpbuf, (const void *)(databufer_eeprom + EEPROM_ADDR_SHIFT), EEPROM_DATABUF_SIZE);		//Read 18 bits from *databuf + EEPROM_ADDR_SHIFT eeprom address
	eeprom_busy_wait();
	uint16_t crc = 0;
	for(int i =0; i < EEPROM_DATABUF_SIZE - 2; i++)						//Crc calculation
     48a:	60 e0       	ldi	r22, 0x00	; 0
     48c:	70 e0       	ldi	r23, 0x00	; 0
     48e:	db cf       	rjmp	.-74     	; 0x446 <read_eeprom+0xba>
		
		
	}
	sei();
	return false;
}
     490:	66 96       	adiw	r28, 0x16	; 22
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	f8 94       	cli
     496:	de bf       	out	0x3e, r29	; 62
     498:	0f be       	out	0x3f, r0	; 63
     49a:	cd bf       	out	0x3d, r28	; 61
     49c:	df 91       	pop	r29
     49e:	cf 91       	pop	r28
     4a0:	08 95       	ret

000004a2 <debug_print_str>:
	if( ( index + 2 ) < TMP_SIZE ) {
		buf[index++] = '\r';
		buf[index++] = '\n';
	}
	debug_print_str( (const char*)buf, index );
}
     4a2:	0f 93       	push	r16
     4a4:	1f 93       	push	r17
     4a6:	cf 93       	push	r28
     4a8:	df 93       	push	r29
     4aa:	f8 94       	cli
     4ac:	16 16       	cp	r1, r22
     4ae:	17 06       	cpc	r1, r23
     4b0:	d4 f5       	brge	.+116    	; 0x526 <__stack+0x27>
     4b2:	4f b7       	in	r20, 0x3f	; 63
     4b4:	f8 94       	cli
     4b6:	20 91 4d 04 	lds	r18, 0x044D
     4ba:	30 91 4e 04 	lds	r19, 0x044E
     4be:	4f bf       	out	0x3f, r20	; 63
     4c0:	20 3a       	cpi	r18, 0xA0	; 160
     4c2:	31 05       	cpc	r19, r1
     4c4:	80 f5       	brcc	.+96     	; 0x526 <__stack+0x27>
     4c6:	dc 01       	movw	r26, r24
     4c8:	68 0f       	add	r22, r24
     4ca:	79 1f       	adc	r23, r25
     4cc:	03 e4       	ldi	r16, 0x43	; 67
     4ce:	14 e0       	ldi	r17, 0x04	; 4
     4d0:	09 c0       	rjmp	.+18     	; 0x4e4 <debug_print_str+0x42>
     4d2:	2f b7       	in	r18, 0x3f	; 63
     4d4:	f8 94       	cli
     4d6:	e8 01       	movw	r28, r16
     4d8:	8a 85       	ldd	r24, Y+10	; 0x0a
     4da:	9b 85       	ldd	r25, Y+11	; 0x0b
     4dc:	2f bf       	out	0x3f, r18	; 63
     4de:	80 3a       	cpi	r24, 0xA0	; 160
     4e0:	91 05       	cpc	r25, r1
     4e2:	08 f5       	brcc	.+66     	; 0x526 <__stack+0x27>
     4e4:	2d 91       	ld	r18, X+
     4e6:	f8 01       	movw	r30, r16
     4e8:	80 81       	ld	r24, Z
     4ea:	91 81       	ldd	r25, Z+1	; 0x01
     4ec:	ec 01       	movw	r28, r24
     4ee:	28 83       	st	Y, r18
     4f0:	20 81       	ld	r18, Z
     4f2:	31 81       	ldd	r19, Z+1	; 0x01
     4f4:	2f 5f       	subi	r18, 0xFF	; 255
     4f6:	3f 4f       	sbci	r19, 0xFF	; 255
     4f8:	31 83       	std	Z+1, r19	; 0x01
     4fa:	20 83       	st	Z, r18
     4fc:	46 81       	ldd	r20, Z+6	; 0x06
     4fe:	57 81       	ldd	r21, Z+7	; 0x07
     500:	24 17       	cp	r18, r20
     502:	35 07       	cpc	r19, r21
     504:	21 f4       	brne	.+8      	; 0x50e <__stack+0xf>
     506:	84 81       	ldd	r24, Z+4	; 0x04
     508:	95 81       	ldd	r25, Z+5	; 0x05
     50a:	91 83       	std	Z+1, r25	; 0x01
     50c:	80 83       	st	Z, r24
     50e:	9f b7       	in	r25, 0x3f	; 63
     510:	f8 94       	cli
     512:	22 85       	ldd	r18, Z+10	; 0x0a
     514:	33 85       	ldd	r19, Z+11	; 0x0b
     516:	2f 5f       	subi	r18, 0xFF	; 255
     518:	3f 4f       	sbci	r19, 0xFF	; 255
     51a:	33 87       	std	Z+11, r19	; 0x0b
     51c:	22 87       	std	Z+10, r18	; 0x0a
     51e:	9f bf       	out	0x3f, r25	; 63
     520:	a6 17       	cp	r26, r22
     522:	b7 07       	cpc	r27, r23
     524:	b1 f6       	brne	.-84     	; 0x4d2 <debug_print_str+0x30>
     526:	80 91 c1 00 	lds	r24, 0x00C1
     52a:	86 fd       	sbrc	r24, 6
     52c:	1f c0       	rjmp	.+62     	; 0x56c <__stack+0x6d>
     52e:	e1 ec       	ldi	r30, 0xC1	; 193
     530:	f0 e0       	ldi	r31, 0x00	; 0
     532:	80 81       	ld	r24, Z
     534:	80 64       	ori	r24, 0x40	; 64
     536:	80 83       	st	Z, r24
     538:	e3 e4       	ldi	r30, 0x43	; 67
     53a:	f4 e0       	ldi	r31, 0x04	; 4
     53c:	a2 81       	ldd	r26, Z+2	; 0x02
     53e:	b3 81       	ldd	r27, Z+3	; 0x03
     540:	2d 91       	ld	r18, X+
     542:	b3 83       	std	Z+3, r27	; 0x03
     544:	a2 83       	std	Z+2, r26	; 0x02
     546:	86 81       	ldd	r24, Z+6	; 0x06
     548:	97 81       	ldd	r25, Z+7	; 0x07
     54a:	a8 17       	cp	r26, r24
     54c:	b9 07       	cpc	r27, r25
     54e:	21 f4       	brne	.+8      	; 0x558 <__stack+0x59>
     550:	84 81       	ldd	r24, Z+4	; 0x04
     552:	95 81       	ldd	r25, Z+5	; 0x05
     554:	93 83       	std	Z+3, r25	; 0x03
     556:	82 83       	std	Z+2, r24	; 0x02
     558:	3f b7       	in	r19, 0x3f	; 63
     55a:	f8 94       	cli
     55c:	82 85       	ldd	r24, Z+10	; 0x0a
     55e:	93 85       	ldd	r25, Z+11	; 0x0b
     560:	01 97       	sbiw	r24, 0x01	; 1
     562:	93 87       	std	Z+11, r25	; 0x0b
     564:	82 87       	std	Z+10, r24	; 0x0a
     566:	3f bf       	out	0x3f, r19	; 63
     568:	20 93 c6 00 	sts	0x00C6, r18
     56c:	78 94       	sei
     56e:	df 91       	pop	r29
     570:	cf 91       	pop	r28
     572:	1f 91       	pop	r17
     574:	0f 91       	pop	r16
     576:	08 95       	ret

00000578 <rx_parse>:



void rx_parse( void )			//Parse message from terminal
{
     578:	ff 92       	push	r15
     57a:	0f 93       	push	r16
     57c:	1f 93       	push	r17
     57e:	cf 93       	push	r28
     580:	df 93       	push	r29
	uint8_t j = 0;
	uint8_t k = 0;
	uint8_t space_flag = 0;
	bool waitSplitter = false;
	for( int i = 0; i < rx_num; i++)
     582:	60 91 0e 04 	lds	r22, 0x040E
     586:	70 e0       	ldi	r23, 0x00	; 0
     588:	16 16       	cp	r1, r22
     58a:	17 06       	cpc	r1, r23
     58c:	0c f0       	brlt	.+2      	; 0x590 <rx_parse+0x18>
     58e:	0a c1       	rjmp	.+532    	; 0x7a4 <rx_parse+0x22c>
     590:	af e1       	ldi	r26, 0x1F	; 31
     592:	b4 e0       	ldi	r27, 0x04	; 4
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	50 e0       	ldi	r21, 0x00	; 0
     59a:	40 e0       	ldi	r20, 0x00	; 0
     59c:	30 e0       	ldi	r19, 0x00	; 0
     59e:	c0 e0       	ldi	r28, 0x00	; 0
			else
			continue;
		}
		
		data_str[j][k] = '\0';
		j++;
     5a0:	d0 e0       	ldi	r29, 0x00	; 0
     5a2:	11 e0       	ldi	r17, 0x01	; 1
		}
		
		if( ( waitSplitter ) ) {
			if ( rx_data_buf[i] == ' ' ) {
				waitSplitter = false;
				k = MAX_PARAMS_STR_LEN - 1;
     5a4:	0f 2e       	mov	r0, r31
     5a6:	ff e0       	ldi	r31, 0x0F	; 15
     5a8:	ff 2e       	mov	r15, r31
     5aa:	f0 2d       	mov	r31, r0
     5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <rx_parse+0x3a>
	uint8_t k = 0;
	uint8_t space_flag = 0;
	bool waitSplitter = false;
	for( int i = 0; i < rx_num; i++)
	{
		if(j >= MAX_PARAMS)
     5ae:	c3 30       	cpi	r28, 0x03	; 3
     5b0:	78 f5       	brcc	.+94     	; 0x610 <rx_parse+0x98>
		break;
		if( (rx_data_buf[i] != ' ') && ( !waitSplitter ) ) {
     5b2:	2d 91       	ld	r18, X+
     5b4:	20 32       	cpi	r18, 0x20	; 32
     5b6:	71 f0       	breq	.+28     	; 0x5d4 <rx_parse+0x5c>
     5b8:	51 11       	cpse	r21, r1
     5ba:	0c c0       	rjmp	.+24     	; 0x5d4 <rx_parse+0x5c>
			data_str[j][k++] = rx_data_buf[i];
     5bc:	00 e1       	ldi	r16, 0x10	; 16
     5be:	c0 9f       	mul	r28, r16
     5c0:	f0 01       	movw	r30, r0
     5c2:	11 24       	eor	r1, r1
     5c4:	e3 0f       	add	r30, r19
     5c6:	f1 1d       	adc	r31, r1
     5c8:	ec 5c       	subi	r30, 0xCC	; 204
     5ca:	fc 4f       	sbci	r31, 0xFC	; 252
     5cc:	20 83       	st	Z, r18
			space_flag++;
     5ce:	4f 5f       	subi	r20, 0xFF	; 255
	for( int i = 0; i < rx_num; i++)
	{
		if(j >= MAX_PARAMS)
		break;
		if( (rx_data_buf[i] != ' ') && ( !waitSplitter ) ) {
			data_str[j][k++] = rx_data_buf[i];
     5d0:	3f 5f       	subi	r19, 0xFF	; 255
			space_flag++;
			continue;
     5d2:	18 c0       	rjmp	.+48     	; 0x604 <rx_parse+0x8c>
		}
		
		if( space_flag == 0 )
     5d4:	44 23       	and	r20, r20
     5d6:	b1 f0       	breq	.+44     	; 0x604 <rx_parse+0x8c>
		continue;
		
		if( k >= MAX_PARAMS_STR_LEN ) {
     5d8:	30 31       	cpi	r19, 0x10	; 16
     5da:	10 f4       	brcc	.+4      	; 0x5e0 <rx_parse+0x68>
			waitSplitter = true;
		}
		
		if( ( waitSplitter ) ) {
     5dc:	55 23       	and	r21, r21
     5de:	19 f0       	breq	.+6      	; 0x5e6 <rx_parse+0x6e>
			if ( rx_data_buf[i] == ' ' ) {
     5e0:	20 32       	cpi	r18, 0x20	; 32
     5e2:	79 f4       	brne	.+30     	; 0x602 <rx_parse+0x8a>
				waitSplitter = false;
				k = MAX_PARAMS_STR_LEN - 1;
     5e4:	3f 2d       	mov	r19, r15
			}
			else
			continue;
		}
		
		data_str[j][k] = '\0';
     5e6:	20 e1       	ldi	r18, 0x10	; 16
     5e8:	c2 9f       	mul	r28, r18
     5ea:	f0 01       	movw	r30, r0
     5ec:	11 24       	eor	r1, r1
     5ee:	e3 0f       	add	r30, r19
     5f0:	f1 1d       	adc	r31, r1
     5f2:	ec 5c       	subi	r30, 0xCC	; 204
     5f4:	fc 4f       	sbci	r31, 0xFC	; 252
     5f6:	10 82       	st	Z, r1
		j++;
     5f8:	cf 5f       	subi	r28, 0xFF	; 255
     5fa:	5d 2f       	mov	r21, r29
		k=0;
		space_flag = 0;
     5fc:	4d 2f       	mov	r20, r29
			continue;
		}
		
		data_str[j][k] = '\0';
		j++;
		k=0;
     5fe:	3d 2f       	mov	r19, r29
     600:	01 c0       	rjmp	.+2      	; 0x604 <rx_parse+0x8c>
     602:	51 2f       	mov	r21, r17
{
	uint8_t j = 0;
	uint8_t k = 0;
	uint8_t space_flag = 0;
	bool waitSplitter = false;
	for( int i = 0; i < rx_num; i++)
     604:	01 96       	adiw	r24, 0x01	; 1
     606:	86 17       	cp	r24, r22
     608:	97 07       	cpc	r25, r23
     60a:	8c f2       	brlt	.-94     	; 0x5ae <rx_parse+0x36>
     60c:	8c 2f       	mov	r24, r28
     60e:	01 c0       	rjmp	.+2      	; 0x612 <rx_parse+0x9a>
     610:	8c 2f       	mov	r24, r28
		j++;
		k=0;
		space_flag = 0;
	}

	if( k != 0 ) {
     612:	33 23       	and	r19, r19
     614:	59 f0       	breq	.+22     	; 0x62c <rx_parse+0xb4>
		data_str[j][k] = '\0';
     616:	90 e1       	ldi	r25, 0x10	; 16
     618:	89 9f       	mul	r24, r25
     61a:	f0 01       	movw	r30, r0
     61c:	11 24       	eor	r1, r1
     61e:	e3 0f       	add	r30, r19
     620:	f1 1d       	adc	r31, r1
     622:	ec 5c       	subi	r30, 0xCC	; 204
     624:	fc 4f       	sbci	r31, 0xFC	; 252
     626:	10 82       	st	Z, r1
		j++;
     628:	c1 e0       	ldi	r28, 0x01	; 1
     62a:	c8 0f       	add	r28, r24
	}

	
	if( strcmp(data_str[0], "set") == 0 && j == 3)
     62c:	65 e6       	ldi	r22, 0x65	; 101
     62e:	71 e0       	ldi	r23, 0x01	; 1
     630:	84 e3       	ldi	r24, 0x34	; 52
     632:	93 e0       	ldi	r25, 0x03	; 3
     634:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     638:	89 2b       	or	r24, r25
     63a:	09 f0       	breq	.+2      	; 0x63e <rx_parse+0xc6>
     63c:	b4 c0       	rjmp	.+360    	; 0x7a6 <rx_parse+0x22e>
     63e:	c3 30       	cpi	r28, 0x03	; 3
     640:	09 f0       	breq	.+2      	; 0x644 <rx_parse+0xcc>
     642:	b1 c0       	rjmp	.+354    	; 0x7a6 <rx_parse+0x22e>
	{
		
		if( strcmp(data_str[1],"A") == 0)
     644:	69 e6       	ldi	r22, 0x69	; 105
     646:	71 e0       	ldi	r23, 0x01	; 1
     648:	84 e4       	ldi	r24, 0x44	; 68
     64a:	93 e0       	ldi	r25, 0x03	; 3
     64c:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     650:	89 2b       	or	r24, r25
     652:	b9 f4       	brne	.+46     	; 0x682 <rx_parse+0x10a>
		{
			kA  = (float)atof(data_str[2]);
     654:	84 e5       	ldi	r24, 0x54	; 84
     656:	93 e0       	ldi	r25, 0x03	; 3
     658:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <atof>
     65c:	60 93 0f 04 	sts	0x040F, r22
     660:	70 93 10 04 	sts	0x0410, r23
     664:	80 93 11 04 	sts	0x0411, r24
     668:	90 93 12 04 	sts	0x0412, r25
			DEBUG_PRINT("\n is A\n\r");
     66c:	68 e0       	ldi	r22, 0x08	; 8
     66e:	70 e0       	ldi	r23, 0x00	; 0
     670:	8b e6       	ldi	r24, 0x6B	; 107
     672:	91 e0       	ldi	r25, 0x01	; 1
     674:	16 df       	rcall	.-468    	; 0x4a2 <debug_print_str>
			DEBUG_PRINT("\n\r");
     676:	62 e0       	ldi	r22, 0x02	; 2
     678:	70 e0       	ldi	r23, 0x00	; 0
     67a:	8e ed       	ldi	r24, 0xDE	; 222
     67c:	91 e0       	ldi	r25, 0x01	; 1
     67e:	11 df       	rcall	.-478    	; 0x4a2 <debug_print_str>
     680:	c4 c1       	rjmp	.+904    	; 0xa0a <rx_parse+0x492>
		}
		else if( strcmp(data_str[1],"B") == 0)
     682:	64 e7       	ldi	r22, 0x74	; 116
     684:	71 e0       	ldi	r23, 0x01	; 1
     686:	84 e4       	ldi	r24, 0x44	; 68
     688:	93 e0       	ldi	r25, 0x03	; 3
     68a:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     68e:	89 2b       	or	r24, r25
     690:	b9 f4       	brne	.+46     	; 0x6c0 <rx_parse+0x148>

		{
			kB  = (float)atof(data_str[2]);
     692:	84 e5       	ldi	r24, 0x54	; 84
     694:	93 e0       	ldi	r25, 0x03	; 3
     696:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <atof>
     69a:	60 93 13 04 	sts	0x0413, r22
     69e:	70 93 14 04 	sts	0x0414, r23
     6a2:	80 93 15 04 	sts	0x0415, r24
     6a6:	90 93 16 04 	sts	0x0416, r25
			DEBUG_PRINT("\n is B\n\r");
     6aa:	68 e0       	ldi	r22, 0x08	; 8
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	86 e7       	ldi	r24, 0x76	; 118
     6b0:	91 e0       	ldi	r25, 0x01	; 1
     6b2:	f7 de       	rcall	.-530    	; 0x4a2 <debug_print_str>
			DEBUG_PRINT("\n\r");
     6b4:	62 e0       	ldi	r22, 0x02	; 2
     6b6:	70 e0       	ldi	r23, 0x00	; 0
     6b8:	8e ed       	ldi	r24, 0xDE	; 222
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	f2 de       	rcall	.-540    	; 0x4a2 <debug_print_str>
     6be:	a5 c1       	rjmp	.+842    	; 0xa0a <rx_parse+0x492>
		}
		else if( strcmp(data_str[1],"C") == 0)
     6c0:	6f e7       	ldi	r22, 0x7F	; 127
     6c2:	71 e0       	ldi	r23, 0x01	; 1
     6c4:	84 e4       	ldi	r24, 0x44	; 68
     6c6:	93 e0       	ldi	r25, 0x03	; 3
     6c8:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     6cc:	89 2b       	or	r24, r25
     6ce:	b9 f4       	brne	.+46     	; 0x6fe <rx_parse+0x186>
		{
			kC  = (float)atof(data_str[2]);
     6d0:	84 e5       	ldi	r24, 0x54	; 84
     6d2:	93 e0       	ldi	r25, 0x03	; 3
     6d4:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <atof>
     6d8:	60 93 17 04 	sts	0x0417, r22
     6dc:	70 93 18 04 	sts	0x0418, r23
     6e0:	80 93 19 04 	sts	0x0419, r24
     6e4:	90 93 1a 04 	sts	0x041A, r25
			DEBUG_PRINT("\n is C\n\r");
     6e8:	68 e0       	ldi	r22, 0x08	; 8
     6ea:	70 e0       	ldi	r23, 0x00	; 0
     6ec:	81 e8       	ldi	r24, 0x81	; 129
     6ee:	91 e0       	ldi	r25, 0x01	; 1
     6f0:	d8 de       	rcall	.-592    	; 0x4a2 <debug_print_str>
			DEBUG_PRINT("\n\r");
     6f2:	62 e0       	ldi	r22, 0x02	; 2
     6f4:	70 e0       	ldi	r23, 0x00	; 0
     6f6:	8e ed       	ldi	r24, 0xDE	; 222
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	d3 de       	rcall	.-602    	; 0x4a2 <debug_print_str>
     6fc:	86 c1       	rjmp	.+780    	; 0xa0a <rx_parse+0x492>
		}
		else if( strcmp(data_str[1],"D") == 0)
     6fe:	60 ea       	ldi	r22, 0xA0	; 160
     700:	72 e0       	ldi	r23, 0x02	; 2
     702:	84 e4       	ldi	r24, 0x44	; 68
     704:	93 e0       	ldi	r25, 0x03	; 3
     706:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     70a:	89 2b       	or	r24, r25
     70c:	b9 f4       	brne	.+46     	; 0x73c <rx_parse+0x1c4>
		{
			kD  = (float)atof(data_str[2]);
     70e:	84 e5       	ldi	r24, 0x54	; 84
     710:	93 e0       	ldi	r25, 0x03	; 3
     712:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <atof>
     716:	60 93 1b 04 	sts	0x041B, r22
     71a:	70 93 1c 04 	sts	0x041C, r23
     71e:	80 93 1d 04 	sts	0x041D, r24
     722:	90 93 1e 04 	sts	0x041E, r25
			DEBUG_PRINT("\n is D\n\r");
     726:	68 e0       	ldi	r22, 0x08	; 8
     728:	70 e0       	ldi	r23, 0x00	; 0
     72a:	8a e8       	ldi	r24, 0x8A	; 138
     72c:	91 e0       	ldi	r25, 0x01	; 1
     72e:	b9 de       	rcall	.-654    	; 0x4a2 <debug_print_str>
			DEBUG_PRINT("\n\r");
     730:	62 e0       	ldi	r22, 0x02	; 2
     732:	70 e0       	ldi	r23, 0x00	; 0
     734:	8e ed       	ldi	r24, 0xDE	; 222
     736:	91 e0       	ldi	r25, 0x01	; 1
     738:	b4 de       	rcall	.-664    	; 0x4a2 <debug_print_str>
     73a:	67 c1       	rjmp	.+718    	; 0xa0a <rx_parse+0x492>
		}
		else if( strcmp(data_str[1], "default") == 0)
     73c:	63 e9       	ldi	r22, 0x93	; 147
     73e:	71 e0       	ldi	r23, 0x01	; 1
     740:	84 e4       	ldi	r24, 0x44	; 68
     742:	93 e0       	ldi	r25, 0x03	; 3
     744:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     748:	89 2b       	or	r24, r25
     74a:	31 f5       	brne	.+76     	; 0x798 <rx_parse+0x220>
		{
			if( strcmp(data_str[2], "gdu") == 0)
     74c:	6b e9       	ldi	r22, 0x9B	; 155
     74e:	71 e0       	ldi	r23, 0x01	; 1
     750:	84 e5       	ldi	r24, 0x54	; 84
     752:	93 e0       	ldi	r25, 0x03	; 3
     754:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     758:	89 2b       	or	r24, r25
     75a:	41 f4       	brne	.+16     	; 0x76c <rx_parse+0x1f4>
			{				
				write_params_to_eeprom(GDU);
     75c:	8b e0       	ldi	r24, 0x0B	; 11
     75e:	8b dd       	rcall	.-1258   	; 0x276 <write_params_to_eeprom>
				DEBUG_PRINT("\n\r is default gdu\n\r");
     760:	63 e1       	ldi	r22, 0x13	; 19
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	8f e9       	ldi	r24, 0x9F	; 159
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	9c de       	rcall	.-712    	; 0x4a2 <debug_print_str>
     76a:	4f c1       	rjmp	.+670    	; 0xa0a <rx_parse+0x492>
			}
			else if( strcmp(data_str[2], "sip") == 0)
     76c:	63 eb       	ldi	r22, 0xB3	; 179
     76e:	71 e0       	ldi	r23, 0x01	; 1
     770:	84 e5       	ldi	r24, 0x54	; 84
     772:	93 e0       	ldi	r25, 0x03	; 3
     774:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     778:	89 2b       	or	r24, r25
     77a:	41 f4       	brne	.+16     	; 0x78c <rx_parse+0x214>
			{
				write_params_to_eeprom(SIP);
     77c:	86 e1       	ldi	r24, 0x16	; 22
     77e:	7b dd       	rcall	.-1290   	; 0x276 <write_params_to_eeprom>
				DEBUG_PRINT("\n\r is default sip\n\r");
     780:	63 e1       	ldi	r22, 0x13	; 19
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	87 eb       	ldi	r24, 0xB7	; 183
     786:	91 e0       	ldi	r25, 0x01	; 1
     788:	8c de       	rcall	.-744    	; 0x4a2 <debug_print_str>
     78a:	3f c1       	rjmp	.+638    	; 0xa0a <rx_parse+0x492>
			}
			else
			{
				DEBUG_PRINT("\n\r unknown default \n\r");
     78c:	65 e1       	ldi	r22, 0x15	; 21
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	8b ec       	ldi	r24, 0xCB	; 203
     792:	91 e0       	ldi	r25, 0x01	; 1
     794:	86 de       	rcall	.-756    	; 0x4a2 <debug_print_str>
     796:	39 c1       	rjmp	.+626    	; 0xa0a <rx_parse+0x492>

		}
		
		else
		{
			DEBUG_PRINT("\n\r unknown parameter\n\r");
     798:	66 e1       	ldi	r22, 0x16	; 22
     79a:	70 e0       	ldi	r23, 0x00	; 0
     79c:	81 ee       	ldi	r24, 0xE1	; 225
     79e:	91 e0       	ldi	r25, 0x01	; 1
     7a0:	80 de       	rcall	.-768    	; 0x4a2 <debug_print_str>
     7a2:	33 c1       	rjmp	.+614    	; 0xa0a <rx_parse+0x492>



void rx_parse( void )			//Parse message from terminal
{
	uint8_t j = 0;
     7a4:	c0 e0       	ldi	r28, 0x00	; 0
		else
		{
			DEBUG_PRINT("\n\r unknown parameter\n\r");
		}
	}
	else if(strcmp(data_str[0], "read") == 0 && j == 2)
     7a6:	68 ef       	ldi	r22, 0xF8	; 248
     7a8:	71 e0       	ldi	r23, 0x01	; 1
     7aa:	84 e3       	ldi	r24, 0x34	; 52
     7ac:	93 e0       	ldi	r25, 0x03	; 3
     7ae:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     7b2:	89 2b       	or	r24, r25
     7b4:	09 f0       	breq	.+2      	; 0x7b8 <rx_parse+0x240>
     7b6:	de c0       	rjmp	.+444    	; 0x974 <rx_parse+0x3fc>
     7b8:	c2 30       	cpi	r28, 0x02	; 2
     7ba:	09 f0       	breq	.+2      	; 0x7be <rx_parse+0x246>
     7bc:	db c0       	rjmp	.+438    	; 0x974 <rx_parse+0x3fc>
	{
		DEBUG_PRINT("\nis read\n");
     7be:	69 e0       	ldi	r22, 0x09	; 9
     7c0:	70 e0       	ldi	r23, 0x00	; 0
     7c2:	8d ef       	ldi	r24, 0xFD	; 253
     7c4:	91 e0       	ldi	r25, 0x01	; 1
     7c6:	6d de       	rcall	.-806    	; 0x4a2 <debug_print_str>
		if(strcmp(data_str[1], "A") == 0)
     7c8:	69 e6       	ldi	r22, 0x69	; 105
     7ca:	71 e0       	ldi	r23, 0x01	; 1
     7cc:	84 e4       	ldi	r24, 0x44	; 68
     7ce:	93 e0       	ldi	r25, 0x03	; 3
     7d0:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     7d4:	89 2b       	or	r24, r25
     7d6:	61 f5       	brne	.+88     	; 0x830 <rx_parse+0x2b8>
		{
			int leng = sprintf(trt, "%.5F", kA);
     7d8:	ef e0       	ldi	r30, 0x0F	; 15
     7da:	f4 e0       	ldi	r31, 0x04	; 4
     7dc:	83 81       	ldd	r24, Z+3	; 0x03
     7de:	8f 93       	push	r24
     7e0:	82 81       	ldd	r24, Z+2	; 0x02
     7e2:	8f 93       	push	r24
     7e4:	81 81       	ldd	r24, Z+1	; 0x01
     7e6:	8f 93       	push	r24
     7e8:	80 81       	ld	r24, Z
     7ea:	8f 93       	push	r24
     7ec:	87 e0       	ldi	r24, 0x07	; 7
     7ee:	92 e0       	ldi	r25, 0x02	; 2
     7f0:	9f 93       	push	r25
     7f2:	8f 93       	push	r24
     7f4:	84 e1       	ldi	r24, 0x14	; 20
     7f6:	93 e0       	ldi	r25, 0x03	; 3
     7f8:	9f 93       	push	r25
     7fa:	8f 93       	push	r24
     7fc:	0e 94 56 10 	call	0x20ac	; 0x20ac <sprintf>
     800:	ec 01       	movw	r28, r24
			
			DEBUG_PRINT("\n\rA= ");
     802:	65 e0       	ldi	r22, 0x05	; 5
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	8c e0       	ldi	r24, 0x0C	; 12
     808:	92 e0       	ldi	r25, 0x02	; 2
     80a:	4b de       	rcall	.-874    	; 0x4a2 <debug_print_str>
			debug_print_str(trt, leng);
     80c:	be 01       	movw	r22, r28
     80e:	84 e1       	ldi	r24, 0x14	; 20
     810:	93 e0       	ldi	r25, 0x03	; 3
     812:	47 de       	rcall	.-882    	; 0x4a2 <debug_print_str>
			DEBUG_PRINT("\n\r");
     814:	62 e0       	ldi	r22, 0x02	; 2
     816:	70 e0       	ldi	r23, 0x00	; 0
     818:	8e ed       	ldi	r24, 0xDE	; 222
     81a:	91 e0       	ldi	r25, 0x01	; 1
     81c:	42 de       	rcall	.-892    	; 0x4a2 <debug_print_str>
     81e:	8d b7       	in	r24, 0x3d	; 61
     820:	9e b7       	in	r25, 0x3e	; 62
     822:	08 96       	adiw	r24, 0x08	; 8
     824:	0f b6       	in	r0, 0x3f	; 63
     826:	f8 94       	cli
     828:	9e bf       	out	0x3e, r25	; 62
     82a:	0f be       	out	0x3f, r0	; 63
     82c:	8d bf       	out	0x3d, r24	; 61
     82e:	ed c0       	rjmp	.+474    	; 0xa0a <rx_parse+0x492>
		}
		else if(strcmp(data_str[1], "B") == 0)
     830:	64 e7       	ldi	r22, 0x74	; 116
     832:	71 e0       	ldi	r23, 0x01	; 1
     834:	84 e4       	ldi	r24, 0x44	; 68
     836:	93 e0       	ldi	r25, 0x03	; 3
     838:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     83c:	89 2b       	or	r24, r25
     83e:	61 f5       	brne	.+88     	; 0x898 <rx_parse+0x320>
		{
			int leng = sprintf(trt, "%.5F", kB);
     840:	ef e0       	ldi	r30, 0x0F	; 15
     842:	f4 e0       	ldi	r31, 0x04	; 4
     844:	87 81       	ldd	r24, Z+7	; 0x07
     846:	8f 93       	push	r24
     848:	86 81       	ldd	r24, Z+6	; 0x06
     84a:	8f 93       	push	r24
     84c:	85 81       	ldd	r24, Z+5	; 0x05
     84e:	8f 93       	push	r24
     850:	84 81       	ldd	r24, Z+4	; 0x04
     852:	8f 93       	push	r24
     854:	87 e0       	ldi	r24, 0x07	; 7
     856:	92 e0       	ldi	r25, 0x02	; 2
     858:	9f 93       	push	r25
     85a:	8f 93       	push	r24
     85c:	84 e1       	ldi	r24, 0x14	; 20
     85e:	93 e0       	ldi	r25, 0x03	; 3
     860:	9f 93       	push	r25
     862:	8f 93       	push	r24
     864:	0e 94 56 10 	call	0x20ac	; 0x20ac <sprintf>
     868:	ec 01       	movw	r28, r24
			
			DEBUG_PRINT("\n\rB= ");
     86a:	65 e0       	ldi	r22, 0x05	; 5
     86c:	70 e0       	ldi	r23, 0x00	; 0
     86e:	82 e1       	ldi	r24, 0x12	; 18
     870:	92 e0       	ldi	r25, 0x02	; 2
     872:	17 de       	rcall	.-978    	; 0x4a2 <debug_print_str>
			debug_print_str(trt, leng);
     874:	be 01       	movw	r22, r28
     876:	84 e1       	ldi	r24, 0x14	; 20
     878:	93 e0       	ldi	r25, 0x03	; 3
     87a:	13 de       	rcall	.-986    	; 0x4a2 <debug_print_str>
			DEBUG_PRINT("\n\r");
     87c:	62 e0       	ldi	r22, 0x02	; 2
     87e:	70 e0       	ldi	r23, 0x00	; 0
     880:	8e ed       	ldi	r24, 0xDE	; 222
     882:	91 e0       	ldi	r25, 0x01	; 1
     884:	0e de       	rcall	.-996    	; 0x4a2 <debug_print_str>
     886:	8d b7       	in	r24, 0x3d	; 61
     888:	9e b7       	in	r25, 0x3e	; 62
     88a:	08 96       	adiw	r24, 0x08	; 8
     88c:	0f b6       	in	r0, 0x3f	; 63
     88e:	f8 94       	cli
     890:	9e bf       	out	0x3e, r25	; 62
     892:	0f be       	out	0x3f, r0	; 63
     894:	8d bf       	out	0x3d, r24	; 61
     896:	b9 c0       	rjmp	.+370    	; 0xa0a <rx_parse+0x492>
		}
		else if(strcmp(data_str[1], "C") == 0)
     898:	6f e7       	ldi	r22, 0x7F	; 127
     89a:	71 e0       	ldi	r23, 0x01	; 1
     89c:	84 e4       	ldi	r24, 0x44	; 68
     89e:	93 e0       	ldi	r25, 0x03	; 3
     8a0:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     8a4:	89 2b       	or	r24, r25
     8a6:	61 f5       	brne	.+88     	; 0x900 <rx_parse+0x388>
		{
			int leng = sprintf(trt, "%.5F", kC);
     8a8:	ef e0       	ldi	r30, 0x0F	; 15
     8aa:	f4 e0       	ldi	r31, 0x04	; 4
     8ac:	83 85       	ldd	r24, Z+11	; 0x0b
     8ae:	8f 93       	push	r24
     8b0:	82 85       	ldd	r24, Z+10	; 0x0a
     8b2:	8f 93       	push	r24
     8b4:	81 85       	ldd	r24, Z+9	; 0x09
     8b6:	8f 93       	push	r24
     8b8:	80 85       	ldd	r24, Z+8	; 0x08
     8ba:	8f 93       	push	r24
     8bc:	87 e0       	ldi	r24, 0x07	; 7
     8be:	92 e0       	ldi	r25, 0x02	; 2
     8c0:	9f 93       	push	r25
     8c2:	8f 93       	push	r24
     8c4:	84 e1       	ldi	r24, 0x14	; 20
     8c6:	93 e0       	ldi	r25, 0x03	; 3
     8c8:	9f 93       	push	r25
     8ca:	8f 93       	push	r24
     8cc:	0e 94 56 10 	call	0x20ac	; 0x20ac <sprintf>
     8d0:	ec 01       	movw	r28, r24
			
			DEBUG_PRINT("\n\rC= ");
     8d2:	65 e0       	ldi	r22, 0x05	; 5
     8d4:	70 e0       	ldi	r23, 0x00	; 0
     8d6:	88 e1       	ldi	r24, 0x18	; 24
     8d8:	92 e0       	ldi	r25, 0x02	; 2
     8da:	e3 dd       	rcall	.-1082   	; 0x4a2 <debug_print_str>
			debug_print_str(trt, leng);
     8dc:	be 01       	movw	r22, r28
     8de:	84 e1       	ldi	r24, 0x14	; 20
     8e0:	93 e0       	ldi	r25, 0x03	; 3
     8e2:	df dd       	rcall	.-1090   	; 0x4a2 <debug_print_str>
			DEBUG_PRINT("\n\r");
     8e4:	62 e0       	ldi	r22, 0x02	; 2
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	8e ed       	ldi	r24, 0xDE	; 222
     8ea:	91 e0       	ldi	r25, 0x01	; 1
     8ec:	da dd       	rcall	.-1100   	; 0x4a2 <debug_print_str>
     8ee:	8d b7       	in	r24, 0x3d	; 61
     8f0:	9e b7       	in	r25, 0x3e	; 62
     8f2:	08 96       	adiw	r24, 0x08	; 8
     8f4:	0f b6       	in	r0, 0x3f	; 63
     8f6:	f8 94       	cli
     8f8:	9e bf       	out	0x3e, r25	; 62
     8fa:	0f be       	out	0x3f, r0	; 63
     8fc:	8d bf       	out	0x3d, r24	; 61
     8fe:	85 c0       	rjmp	.+266    	; 0xa0a <rx_parse+0x492>
		}
		else if(strcmp(data_str[1], "D") == 0)
     900:	60 ea       	ldi	r22, 0xA0	; 160
     902:	72 e0       	ldi	r23, 0x02	; 2
     904:	84 e4       	ldi	r24, 0x44	; 68
     906:	93 e0       	ldi	r25, 0x03	; 3
     908:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     90c:	89 2b       	or	r24, r25
     90e:	61 f5       	brne	.+88     	; 0x968 <rx_parse+0x3f0>
		{
			int leng = sprintf(trt, "%.5F", kD);
     910:	ef e0       	ldi	r30, 0x0F	; 15
     912:	f4 e0       	ldi	r31, 0x04	; 4
     914:	87 85       	ldd	r24, Z+15	; 0x0f
     916:	8f 93       	push	r24
     918:	86 85       	ldd	r24, Z+14	; 0x0e
     91a:	8f 93       	push	r24
     91c:	85 85       	ldd	r24, Z+13	; 0x0d
     91e:	8f 93       	push	r24
     920:	84 85       	ldd	r24, Z+12	; 0x0c
     922:	8f 93       	push	r24
     924:	87 e0       	ldi	r24, 0x07	; 7
     926:	92 e0       	ldi	r25, 0x02	; 2
     928:	9f 93       	push	r25
     92a:	8f 93       	push	r24
     92c:	84 e1       	ldi	r24, 0x14	; 20
     92e:	93 e0       	ldi	r25, 0x03	; 3
     930:	9f 93       	push	r25
     932:	8f 93       	push	r24
     934:	0e 94 56 10 	call	0x20ac	; 0x20ac <sprintf>
     938:	ec 01       	movw	r28, r24
			
			DEBUG_PRINT("\n\rD= ");
     93a:	65 e0       	ldi	r22, 0x05	; 5
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	8e e1       	ldi	r24, 0x1E	; 30
     940:	92 e0       	ldi	r25, 0x02	; 2
     942:	af dd       	rcall	.-1186   	; 0x4a2 <debug_print_str>
			debug_print_str(trt, leng);
     944:	be 01       	movw	r22, r28
     946:	84 e1       	ldi	r24, 0x14	; 20
     948:	93 e0       	ldi	r25, 0x03	; 3
     94a:	ab dd       	rcall	.-1194   	; 0x4a2 <debug_print_str>
			DEBUG_PRINT("\n\r");
     94c:	62 e0       	ldi	r22, 0x02	; 2
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	8e ed       	ldi	r24, 0xDE	; 222
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	a6 dd       	rcall	.-1204   	; 0x4a2 <debug_print_str>
     956:	8d b7       	in	r24, 0x3d	; 61
     958:	9e b7       	in	r25, 0x3e	; 62
     95a:	08 96       	adiw	r24, 0x08	; 8
     95c:	0f b6       	in	r0, 0x3f	; 63
     95e:	f8 94       	cli
     960:	9e bf       	out	0x3e, r25	; 62
     962:	0f be       	out	0x3f, r0	; 63
     964:	8d bf       	out	0x3d, r24	; 61
     966:	51 c0       	rjmp	.+162    	; 0xa0a <rx_parse+0x492>
		}
		else
		{
			DEBUG_PRINT("\n\runknown parameter\n\r");
     968:	65 e1       	ldi	r22, 0x15	; 21
     96a:	70 e0       	ldi	r23, 0x00	; 0
     96c:	84 e2       	ldi	r24, 0x24	; 36
     96e:	92 e0       	ldi	r25, 0x02	; 2
     970:	98 dd       	rcall	.-1232   	; 0x4a2 <debug_print_str>
     972:	4b c0       	rjmp	.+150    	; 0xa0a <rx_parse+0x492>
		}
	}
	else if(strcmp(data_str[0], "save") == 0 && j == 1)
     974:	6a e3       	ldi	r22, 0x3A	; 58
     976:	72 e0       	ldi	r23, 0x02	; 2
     978:	84 e3       	ldi	r24, 0x34	; 52
     97a:	93 e0       	ldi	r25, 0x03	; 3
     97c:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     980:	89 2b       	or	r24, r25
     982:	59 f4       	brne	.+22     	; 0x99a <rx_parse+0x422>
     984:	c1 30       	cpi	r28, 0x01	; 1
     986:	09 f0       	breq	.+2      	; 0x98a <rx_parse+0x412>
     988:	3b c0       	rjmp	.+118    	; 0xa00 <rx_parse+0x488>
	{
		
		write_params_to_eeprom(SET_VAL);
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	74 dc       	rcall	.-1816   	; 0x276 <write_params_to_eeprom>
		DEBUG_PRINT("\nsaved\n");
     98e:	67 e0       	ldi	r22, 0x07	; 7
     990:	70 e0       	ldi	r23, 0x00	; 0
     992:	8f e3       	ldi	r24, 0x3F	; 63
     994:	92 e0       	ldi	r25, 0x02	; 2
     996:	85 dd       	rcall	.-1270   	; 0x4a2 <debug_print_str>
     998:	38 c0       	rjmp	.+112    	; 0xa0a <rx_parse+0x492>
	}
	else if(strcmp(data_str[0], "help") == 0 && j == 1)
     99a:	67 e4       	ldi	r22, 0x47	; 71
     99c:	72 e0       	ldi	r23, 0x02	; 2
     99e:	84 e3       	ldi	r24, 0x34	; 52
     9a0:	93 e0       	ldi	r25, 0x03	; 3
     9a2:	0e 94 0a 10 	call	0x2014	; 0x2014 <strcmp>
     9a6:	89 2b       	or	r24, r25
     9a8:	59 f5       	brne	.+86     	; 0xa00 <rx_parse+0x488>
     9aa:	c1 30       	cpi	r28, 0x01	; 1
     9ac:	49 f5       	brne	.+82     	; 0xa00 <rx_parse+0x488>
	{
		DEBUG_PRINT("\n\r__________\r");
     9ae:	6d e0       	ldi	r22, 0x0D	; 13
     9b0:	70 e0       	ldi	r23, 0x00	; 0
     9b2:	8c e4       	ldi	r24, 0x4C	; 76
     9b4:	92 e0       	ldi	r25, 0x02	; 2
     9b6:	75 dd       	rcall	.-1302   	; 0x4a2 <debug_print_str>
		DEBUG_PRINT("\n\r COMMANDS \r");
     9b8:	6d e0       	ldi	r22, 0x0D	; 13
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	8a e5       	ldi	r24, 0x5A	; 90
     9be:	92 e0       	ldi	r25, 0x02	; 2
     9c0:	70 dd       	rcall	.-1312   	; 0x4a2 <debug_print_str>
		DEBUG_PRINT("\n\r set	\n\rread	\n\rsave\n\r");
     9c2:	66 e1       	ldi	r22, 0x16	; 22
     9c4:	70 e0       	ldi	r23, 0x00	; 0
     9c6:	88 e6       	ldi	r24, 0x68	; 104
     9c8:	92 e0       	ldi	r25, 0x02	; 2
     9ca:	6b dd       	rcall	.-1322   	; 0x4a2 <debug_print_str>
		
// 		DEBUG_PRINT("\n\r__________\r");
 		DEBUG_PRINT("\n\r PARAMETERS \r");
     9cc:	6f e0       	ldi	r22, 0x0F	; 15
     9ce:	70 e0       	ldi	r23, 0x00	; 0
     9d0:	8f e7       	ldi	r24, 0x7F	; 127
     9d2:	92 e0       	ldi	r25, 0x02	; 2
     9d4:	66 dd       	rcall	.-1332   	; 0x4a2 <debug_print_str>
 		DEBUG_PRINT("\n\r A\n\r B \n\r C \n\r D");
     9d6:	62 e1       	ldi	r22, 0x12	; 18
     9d8:	70 e0       	ldi	r23, 0x00	; 0
     9da:	8f e8       	ldi	r24, 0x8F	; 143
     9dc:	92 e0       	ldi	r25, 0x02	; 2
     9de:	61 dd       	rcall	.-1342   	; 0x4a2 <debug_print_str>
//		DEBUG_PRINT("\n\r__________\r");
		DEBUG_PRINT("\n\r To set default settings, type:\r");
     9e0:	62 e2       	ldi	r22, 0x22	; 34
     9e2:	70 e0       	ldi	r23, 0x00	; 0
     9e4:	82 ea       	ldi	r24, 0xA2	; 162
     9e6:	92 e0       	ldi	r25, 0x02	; 2
     9e8:	5c dd       	rcall	.-1352   	; 0x4a2 <debug_print_str>
		DEBUG_PRINT("\n\r set default gdu \n\r or \n\r set default sip\r");
     9ea:	6c e2       	ldi	r22, 0x2C	; 44
     9ec:	70 e0       	ldi	r23, 0x00	; 0
     9ee:	85 ec       	ldi	r24, 0xC5	; 197
     9f0:	92 e0       	ldi	r25, 0x02	; 2
     9f2:	57 dd       	rcall	.-1362   	; 0x4a2 <debug_print_str>
		DEBUG_PRINT("\n\r_________\r\n");
     9f4:	6d e0       	ldi	r22, 0x0D	; 13
     9f6:	70 e0       	ldi	r23, 0x00	; 0
     9f8:	82 ef       	ldi	r24, 0xF2	; 242
     9fa:	92 e0       	ldi	r25, 0x02	; 2
     9fc:	52 dd       	rcall	.-1372   	; 0x4a2 <debug_print_str>
     9fe:	05 c0       	rjmp	.+10     	; 0xa0a <rx_parse+0x492>
	}
	else
	{
		DEBUG_PRINT("\n\runknown command\n\r");
     a00:	63 e1       	ldi	r22, 0x13	; 19
     a02:	70 e0       	ldi	r23, 0x00	; 0
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	93 e0       	ldi	r25, 0x03	; 3
     a08:	4c dd       	rcall	.-1384   	; 0x4a2 <debug_print_str>
	}
}
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	1f 91       	pop	r17
     a10:	0f 91       	pop	r16
     a12:	ff 90       	pop	r15
     a14:	08 95       	ret

00000a16 <adc_init>:
};


void adc_init( uint8_t channel )
{
	ADMUX = channel;	
     a16:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = 0xCF;		//Enable, Start conversion, interrupt enable, xtal/128
     a1a:	8f ec       	ldi	r24, 0xCF	; 207
     a1c:	80 93 7a 00 	sts	0x007A, r24
	sei();
     a20:	78 94       	sei
     a22:	08 95       	ret

00000a24 <__vector_24>:




ISR(ADC_vect, ISR_NOBLOCK)
{
     a24:	78 94       	sei
     a26:	1f 92       	push	r1
     a28:	0f 92       	push	r0
     a2a:	0f b6       	in	r0, 0x3f	; 63
     a2c:	0f 92       	push	r0
     a2e:	11 24       	eor	r1, r1
     a30:	cf 92       	push	r12
     a32:	df 92       	push	r13
     a34:	ef 92       	push	r14
     a36:	ff 92       	push	r15
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	2f 93       	push	r18
     a3e:	3f 93       	push	r19
     a40:	4f 93       	push	r20
     a42:	5f 93       	push	r21
     a44:	6f 93       	push	r22
     a46:	8f 93       	push	r24
     a48:	9f 93       	push	r25
     a4a:	af 93       	push	r26
     a4c:	bf 93       	push	r27
cli();
     a4e:	f8 94       	cli


	ADMUX = 0x06;		// FLOW channel
     a50:	86 e0       	ldi	r24, 0x06	; 6
     a52:	80 93 7c 00 	sts	0x007C, r24
	uint16_t buf1 = ADCL;
     a56:	80 91 78 00 	lds	r24, 0x0078
     a5a:	28 2f       	mov	r18, r24
     a5c:	30 e0       	ldi	r19, 0x00	; 0
	uint16_t buf2 = ADCH & 0x03;
     a5e:	80 91 79 00 	lds	r24, 0x0079
     a62:	83 70       	andi	r24, 0x03	; 3
     a64:	90 e0       	ldi	r25, 0x00	; 0
	counter > 0xFFFD? counter = 0: counter++;	 // Global counter
     a66:	40 91 6c 03 	lds	r20, 0x036C
     a6a:	50 91 6d 03 	lds	r21, 0x036D
     a6e:	4e 3f       	cpi	r20, 0xFE	; 254
     a70:	5f 4f       	sbci	r21, 0xFF	; 255
     a72:	28 f0       	brcs	.+10     	; 0xa7e <__vector_24+0x5a>
     a74:	10 92 6d 03 	sts	0x036D, r1
     a78:	10 92 6c 03 	sts	0x036C, r1
     a7c:	0a c0       	rjmp	.+20     	; 0xa92 <__vector_24+0x6e>
     a7e:	40 91 6c 03 	lds	r20, 0x036C
     a82:	50 91 6d 03 	lds	r21, 0x036D
     a86:	4f 5f       	subi	r20, 0xFF	; 255
     a88:	5f 4f       	sbci	r21, 0xFF	; 255
     a8a:	50 93 6d 03 	sts	0x036D, r21
     a8e:	40 93 6c 03 	sts	0x036C, r20
	
		step++;				//Resempling counter
     a92:	40 91 5c 04 	lds	r20, 0x045C
     a96:	50 91 5d 04 	lds	r21, 0x045D
     a9a:	4f 5f       	subi	r20, 0xFF	; 255
     a9c:	5f 4f       	sbci	r21, 0xFF	; 255
     a9e:	50 93 5d 04 	sts	0x045D, r21
     aa2:	40 93 5c 04 	sts	0x045C, r20
		adc_data = (buf2 << 8) + buf1;
     aa6:	98 2f       	mov	r25, r24
     aa8:	88 27       	eor	r24, r24
     aaa:	82 0f       	add	r24, r18
     aac:	93 1f       	adc	r25, r19
     aae:	90 93 5b 04 	sts	0x045B, r25
     ab2:	80 93 5a 04 	sts	0x045A, r24
		resempling += adc_data;
     ab6:	00 91 4f 04 	lds	r16, 0x044F
     aba:	10 91 50 04 	lds	r17, 0x0450
     abe:	20 91 51 04 	lds	r18, 0x0451
     ac2:	30 91 52 04 	lds	r19, 0x0452
     ac6:	68 01       	movw	r12, r16
     ac8:	79 01       	movw	r14, r18
     aca:	c8 0e       	add	r12, r24
     acc:	d9 1e       	adc	r13, r25
     ace:	e1 1c       	adc	r14, r1
     ad0:	f1 1c       	adc	r15, r1
     ad2:	c0 92 4f 04 	sts	0x044F, r12
     ad6:	d0 92 50 04 	sts	0x0450, r13
     ada:	e0 92 51 04 	sts	0x0451, r14
     ade:	f0 92 52 04 	sts	0x0452, r15
		if(step == 1023)
     ae2:	4f 3f       	cpi	r20, 0xFF	; 255
     ae4:	53 40       	sbci	r21, 0x03	; 3
     ae6:	19 f4       	brne	.+6      	; 0xaee <__vector_24+0xca>
		{
			resempling_flag = 1;
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	80 93 59 04 	sts	0x0459, r24
		}
		
sei();
     aee:	78 94       	sei
}
     af0:	bf 91       	pop	r27
     af2:	af 91       	pop	r26
     af4:	9f 91       	pop	r25
     af6:	8f 91       	pop	r24
     af8:	6f 91       	pop	r22
     afa:	5f 91       	pop	r21
     afc:	4f 91       	pop	r20
     afe:	3f 91       	pop	r19
     b00:	2f 91       	pop	r18
     b02:	1f 91       	pop	r17
     b04:	0f 91       	pop	r16
     b06:	ff 90       	pop	r15
     b08:	ef 90       	pop	r14
     b0a:	df 90       	pop	r13
     b0c:	cf 90       	pop	r12
     b0e:	0f 90       	pop	r0
     b10:	0f be       	out	0x3f, r0	; 63
     b12:	0f 90       	pop	r0
     b14:	1f 90       	pop	r1
     b16:	18 95       	reti

00000b18 <overload>:



void overload( void )		//FLOW >= 1000 CM3/MIN
{
	SREG &= 0x7F;			//==cli();
     b18:	8f b7       	in	r24, 0x3f	; 63
     b1a:	8f 77       	andi	r24, 0x7F	; 127
     b1c:	8f bf       	out	0x3f, r24	; 63
	for(int i = 0; i < 1; i++)
	{
		PORTC = 0x60; // blue + buzzer on
     b1e:	80 e6       	ldi	r24, 0x60	; 96
     b20:	88 b9       	out	0x08, r24	; 8
     b22:	80 e0       	ldi	r24, 0x00	; 0
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	01 96       	adiw	r24, 0x01	; 1
     b28:	85 33       	cpi	r24, 0x35	; 53
     b2a:	22 e8       	ldi	r18, 0x82	; 130
     b2c:	92 07       	cpc	r25, r18
     b2e:	d9 f7       	brne	.-10     	; 0xb26 <overload+0xe>
		delay_ms(200);
		PORTC = 0xC0; // red on
     b30:	80 ec       	ldi	r24, 0xC0	; 192
     b32:	88 b9       	out	0x08, r24	; 8
     b34:	80 e0       	ldi	r24, 0x00	; 0
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	01 96       	adiw	r24, 0x01	; 1
     b3a:	85 33       	cpi	r24, 0x35	; 53
     b3c:	22 e8       	ldi	r18, 0x82	; 130
     b3e:	92 07       	cpc	r25, r18
     b40:	d9 f7       	brne	.-10     	; 0xb38 <overload+0x20>
		delay_ms(200);
	};
	sei();
     b42:	78 94       	sei
     b44:	08 95       	ret

00000b46 <set_level>:
		}
	};
}

void set_level( double val)
{
     b46:	cf 92       	push	r12
     b48:	df 92       	push	r13
     b4a:	ef 92       	push	r14
     b4c:	ff 92       	push	r15
     b4e:	6b 01       	movw	r12, r22
     b50:	7c 01       	movw	r14, r24

	if( val > 1000 )			// Check borders
     b52:	20 e0       	ldi	r18, 0x00	; 0
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	4a e7       	ldi	r20, 0x7A	; 122
     b58:	54 e4       	ldi	r21, 0x44	; 68
     b5a:	5a d7       	rcall	.+3764   	; 0x1a10 <__gesf2>
     b5c:	18 16       	cp	r1, r24
     b5e:	0c f4       	brge	.+2      	; 0xb62 <set_level+0x1c>
	{
		overload();
     b60:	db df       	rcall	.-74     	; 0xb18 <overload>
	};

	if ( val < 50 )
     b62:	20 e0       	ldi	r18, 0x00	; 0
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	48 e4       	ldi	r20, 0x48	; 72
     b68:	52 e4       	ldi	r21, 0x42	; 66
     b6a:	c7 01       	movw	r24, r14
     b6c:	b6 01       	movw	r22, r12
     b6e:	01 d6       	rcall	.+3074   	; 0x1772 <__cmpsf2>
     b70:	88 23       	and	r24, r24
     b72:	44 f4       	brge	.+16     	; 0xb84 <set_level+0x3e>
	{
		val = 50;
     b74:	0f 2e       	mov	r0, r31
     b76:	c1 2c       	mov	r12, r1
     b78:	d1 2c       	mov	r13, r1
     b7a:	f8 e4       	ldi	r31, 0x48	; 72
     b7c:	ef 2e       	mov	r14, r31
     b7e:	f2 e4       	ldi	r31, 0x42	; 66
     b80:	ff 2e       	mov	r15, r31
     b82:	f0 2d       	mov	r31, r0
	};

	int num = (int)((val+25)/50)-1;
     b84:	20 e0       	ldi	r18, 0x00	; 0
     b86:	30 e0       	ldi	r19, 0x00	; 0
     b88:	48 ec       	ldi	r20, 0xC8	; 200
     b8a:	51 e4       	ldi	r21, 0x41	; 65
     b8c:	c7 01       	movw	r24, r14
     b8e:	b6 01       	movw	r22, r12
     b90:	8c d5       	rcall	.+2840   	; 0x16aa <__addsf3>
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	48 e4       	ldi	r20, 0x48	; 72
     b98:	52 e4       	ldi	r21, 0x42	; 66
     b9a:	ef d5       	rcall	.+3038   	; 0x177a <__divsf3>
     b9c:	56 d6       	rcall	.+3244   	; 0x184a <__fixsfsi>
	PORTC = 0xE0 + num;			//Set val on port C
     b9e:	61 52       	subi	r22, 0x21	; 33
     ba0:	68 b9       	out	0x08, r22	; 8
};
     ba2:	ff 90       	pop	r15
     ba4:	ef 90       	pop	r14
     ba6:	df 90       	pop	r13
     ba8:	cf 90       	pop	r12
     baa:	08 95       	ret

00000bac <pwm_init>:



void pwm_init( uint8_t tim1_val  )
{
	DDRD |= (1 << 7)|(1 << 4)|(1 << 3)|(1 << 5); //set PD7 as output
     bac:	9a b1       	in	r25, 0x0a	; 10
     bae:	98 6b       	ori	r25, 0xB8	; 184
     bb0:	9a b9       	out	0x0a, r25	; 10
	PORTD |= (1 << 3); //enable DD2 driver
     bb2:	5b 9a       	sbi	0x0b, 3	; 11
	TCCR1A |= (1<<WGM20)|(1<<WGM21); //select Fast PWM mode
     bb4:	e0 e8       	ldi	r30, 0x80	; 128
     bb6:	f0 e0       	ldi	r31, 0x00	; 0
     bb8:	90 81       	ld	r25, Z
     bba:	93 60       	ori	r25, 0x03	; 3
     bbc:	90 83       	st	Z, r25
	TCCR1A |= (1 << COM1A1)|(1 << COM1B1); //clear OC2 on compare match
     bbe:	90 81       	ld	r25, Z
     bc0:	90 6a       	ori	r25, 0xA0	; 160
     bc2:	90 83       	st	Z, r25
	TCCR1B =  (1<<CS10); //Clock Prescaler is 1024
     bc4:	91 e0       	ldi	r25, 0x01	; 1
     bc6:	90 93 81 00 	sts	0x0081, r25
	OCR1AH = tim1_val;
     bca:	80 93 89 00 	sts	0x0089, r24
	OCR1AL = tim1_val;	
     bce:	80 93 88 00 	sts	0x0088, r24
	OCR1BH = tim1_val;
     bd2:	80 93 8b 00 	sts	0x008B, r24
	OCR1BL = tim1_val;
     bd6:	80 93 8a 00 	sts	0x008A, r24
	TCCR2A |= (1<<WGM20)|(1<<WGM21); //select Fast PWM mode XS5
     bda:	e0 eb       	ldi	r30, 0xB0	; 176
     bdc:	f0 e0       	ldi	r31, 0x00	; 0
     bde:	90 81       	ld	r25, Z
     be0:	93 60       	ori	r25, 0x03	; 3
     be2:	90 83       	st	Z, r25
	TCCR2A |= (1 << COM2A1); //clear OC2 on compare match XS5
     be4:	90 81       	ld	r25, Z
     be6:	90 68       	ori	r25, 0x80	; 128
     be8:	90 83       	st	Z, r25
	TCCR2B |=(1<<CS20); //Clock Prescaler is 1 XS5
     bea:	e1 eb       	ldi	r30, 0xB1	; 177
     bec:	f0 e0       	ldi	r31, 0x00	; 0
     bee:	90 81       	ld	r25, Z
     bf0:	91 60       	ori	r25, 0x01	; 1
     bf2:	90 83       	st	Z, r25
	OCR2A = tim1_val; // Set Dutycycle XS5
     bf4:	80 93 b3 00 	sts	0x00B3, r24
     bf8:	08 95       	ret

00000bfa <timer1_init>:


void timer1_init( void )
{

	TIMSK0=(1<<TOIE0);
     bfa:	81 e0       	ldi	r24, 0x01	; 1
     bfc:	80 93 6e 00 	sts	0x006E, r24
	// set timer0 counter initial value to 0
	TCNT0=0x00;
     c00:	16 bc       	out	0x26, r1	; 38
	// start timer0 with /64 prescaler
	TCCR0B = (1 << CS01)|(1 << CS00);
     c02:	83 e0       	ldi	r24, 0x03	; 3
     c04:	85 bd       	out	0x25, r24	; 37
     c06:	08 95       	ret

00000c08 <__vector_18>:
}


ISR(TIMER0_OVF_vect) {
     c08:	1f 92       	push	r1
     c0a:	0f 92       	push	r0
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	0f 92       	push	r0
     c10:	11 24       	eor	r1, r1
     c12:	8f 93       	push	r24
     c14:	9f 93       	push	r25
     c16:	ef 93       	push	r30
     c18:	ff 93       	push	r31
	timer_counter++;
     c1a:	80 91 69 03 	lds	r24, 0x0369
     c1e:	8f 5f       	subi	r24, 0xFF	; 255
     c20:	80 93 69 03 	sts	0x0369, r24
	ADCSRA |= (1 << ADSC);
     c24:	ea e7       	ldi	r30, 0x7A	; 122
     c26:	f0 e0       	ldi	r31, 0x00	; 0
     c28:	80 81       	ld	r24, Z
     c2a:	80 64       	ori	r24, 0x40	; 64
     c2c:	80 83       	st	Z, r24

	if(!(PIND & 4))  //Button
     c2e:	4a 99       	sbic	0x09, 2	; 9
     c30:	09 c0       	rjmp	.+18     	; 0xc44 <__vector_18+0x3c>
	{
		flag++;
     c32:	80 91 6a 03 	lds	r24, 0x036A
     c36:	90 91 6b 03 	lds	r25, 0x036B
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	90 93 6b 03 	sts	0x036B, r25
     c40:	80 93 6a 03 	sts	0x036A, r24

	}
}
     c44:	ff 91       	pop	r31
     c46:	ef 91       	pop	r30
     c48:	9f 91       	pop	r25
     c4a:	8f 91       	pop	r24
     c4c:	0f 90       	pop	r0
     c4e:	0f be       	out	0x3f, r0	; 63
     c50:	0f 90       	pop	r0
     c52:	1f 90       	pop	r1
     c54:	18 95       	reti

00000c56 <uart_init>:

void uart_init( void )
{
	UCSR0A = 0x02;
     c56:	82 e0       	ldi	r24, 0x02	; 2
     c58:	80 93 c0 00 	sts	0x00C0, r24
	UCSR0B = 0x98;   //Rx interrupt enable
     c5c:	88 e9       	ldi	r24, 0x98	; 152
     c5e:	80 93 c1 00 	sts	0x00C1, r24
	UCSR0C = 0x06;
     c62:	86 e0       	ldi	r24, 0x06	; 6
     c64:	80 93 c2 00 	sts	0x00C2, r24
	UBRR0L = 0x15;
     c68:	85 e1       	ldi	r24, 0x15	; 21
     c6a:	80 93 c4 00 	sts	0x00C4, r24
	UBRR0H = 0x00;
     c6e:	10 92 c5 00 	sts	0x00C5, r1
     c72:	08 95       	ret

00000c74 <__vector_20>:
};



ISR(USART0_RX_vect)
{
     c74:	1f 92       	push	r1
     c76:	0f 92       	push	r0
     c78:	0f b6       	in	r0, 0x3f	; 63
     c7a:	0f 92       	push	r0
     c7c:	11 24       	eor	r1, r1
     c7e:	2f 93       	push	r18
     c80:	3f 93       	push	r19
     c82:	4f 93       	push	r20
     c84:	5f 93       	push	r21
     c86:	6f 93       	push	r22
     c88:	7f 93       	push	r23
     c8a:	8f 93       	push	r24
     c8c:	9f 93       	push	r25
     c8e:	af 93       	push	r26
     c90:	bf 93       	push	r27
     c92:	ef 93       	push	r30
     c94:	ff 93       	push	r31
	
	int rx_data_byte;
	
	if(UCSR0A & (1 << 7))		// USART Receive Complete
     c96:	80 91 c0 00 	lds	r24, 0x00C0
     c9a:	88 23       	and	r24, r24
     c9c:	8c f5       	brge	.+98     	; 0xd00 <__vector_20+0x8c>
	{
		rx_data_byte = UDR0;
     c9e:	20 91 c6 00 	lds	r18, 0x00C6
     ca2:	42 2f       	mov	r20, r18
     ca4:	50 e0       	ldi	r21, 0x00	; 0
     ca6:	80 e0       	ldi	r24, 0x00	; 0
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	01 96       	adiw	r24, 0x01	; 1
     cac:	81 34       	cpi	r24, 0x41	; 65
     cae:	33 e0       	ldi	r19, 0x03	; 3
     cb0:	93 07       	cpc	r25, r19
     cb2:	d9 f7       	brne	.-10     	; 0xcaa <__vector_20+0x36>
		delay_ms(5);
		UDR0 = rx_data_byte;		// Send back to terminal
     cb4:	20 93 c6 00 	sts	0x00C6, r18
			
		if( rx_data_byte == 13)		// Carriage return
     cb8:	4d 30       	cpi	r20, 0x0D	; 13
     cba:	51 05       	cpc	r21, r1
     cbc:	61 f4       	brne	.+24     	; 0xcd6 <__vector_20+0x62>
		{
			rx_data_buf[rx_num] = '\0';
     cbe:	e0 91 0e 04 	lds	r30, 0x040E
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	e1 5e       	subi	r30, 0xE1	; 225
     cc6:	fb 4f       	sbci	r31, 0xFB	; 251
     cc8:	10 82       	st	Z, r1
			rx_parse();
     cca:	56 dc       	rcall	.-1876   	; 0x578 <rx_parse>
			rx_data_buf[0] = '\0';
     ccc:	10 92 1f 04 	sts	0x041F, r1
			rx_num = 0;	
     cd0:	10 92 0e 04 	sts	0x040E, r1
     cd4:	15 c0       	rjmp	.+42     	; 0xd00 <__vector_20+0x8c>
		}
		else if(rx_data_byte == 127)	// Del (backspace)
     cd6:	4f 37       	cpi	r20, 0x7F	; 127
     cd8:	51 05       	cpc	r21, r1
     cda:	31 f4       	brne	.+12     	; 0xce8 <__vector_20+0x74>
		{
			rx_num--;
     cdc:	80 91 0e 04 	lds	r24, 0x040E
     ce0:	81 50       	subi	r24, 0x01	; 1
     ce2:	80 93 0e 04 	sts	0x040E, r24
     ce6:	0c c0       	rjmp	.+24     	; 0xd00 <__vector_20+0x8c>
		}
		else
		{
			rx_data_buf[rx_num] = rx_data_byte;	
     ce8:	80 91 0e 04 	lds	r24, 0x040E
     cec:	e8 2f       	mov	r30, r24
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	e1 5e       	subi	r30, 0xE1	; 225
     cf2:	fb 4f       	sbci	r31, 0xFB	; 251
     cf4:	20 83       	st	Z, r18
		
			if( rx_num < RX_BUF_SIZE )
     cf6:	84 32       	cpi	r24, 0x24	; 36
     cf8:	18 f4       	brcc	.+6      	; 0xd00 <__vector_20+0x8c>
				rx_num++;
     cfa:	8f 5f       	subi	r24, 0xFF	; 255
     cfc:	80 93 0e 04 	sts	0x040E, r24
		
		}
	};
}
     d00:	ff 91       	pop	r31
     d02:	ef 91       	pop	r30
     d04:	bf 91       	pop	r27
     d06:	af 91       	pop	r26
     d08:	9f 91       	pop	r25
     d0a:	8f 91       	pop	r24
     d0c:	7f 91       	pop	r23
     d0e:	6f 91       	pop	r22
     d10:	5f 91       	pop	r21
     d12:	4f 91       	pop	r20
     d14:	3f 91       	pop	r19
     d16:	2f 91       	pop	r18
     d18:	0f 90       	pop	r0
     d1a:	0f be       	out	0x3f, r0	; 63
     d1c:	0f 90       	pop	r0
     d1e:	1f 90       	pop	r1
     d20:	18 95       	reti

00000d22 <__vector_22>:



ISR(USART0_TX_vect)
{
     d22:	1f 92       	push	r1
     d24:	0f 92       	push	r0
     d26:	0f b6       	in	r0, 0x3f	; 63
     d28:	0f 92       	push	r0
     d2a:	11 24       	eor	r1, r1
     d2c:	2f 93       	push	r18
     d2e:	3f 93       	push	r19
     d30:	8f 93       	push	r24
     d32:	9f 93       	push	r25
     d34:	af 93       	push	r26
     d36:	bf 93       	push	r27
     d38:	ef 93       	push	r30
     d3a:	ff 93       	push	r31
			static inline uint_reg_t GetGlobalInterruptMask(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				return SREG;
     d3c:	2f b7       	in	r18, 0x3f	; 63
			static inline void GlobalInterruptDisable(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				cli();
     d3e:	f8 94       	cli
			uint16_t Count;

			uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
			GlobalInterruptDisable();

			Count = Buffer->Count;
     d40:	80 91 4d 04 	lds	r24, 0x044D
     d44:	90 91 4e 04 	lds	r25, 0x044E
			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				SREG = GlobalIntState;
     d48:	2f bf       	out	0x3f, r18	; 63

	uint16_t BufferCount = RingBuffer_GetCount(&Buffer);
	if(BufferCount == 0)
     d4a:	89 2b       	or	r24, r25
     d4c:	41 f4       	brne	.+16     	; 0xd5e <__vector_22+0x3c>
	{
		UDR0 = 0x00;
     d4e:	10 92 c6 00 	sts	0x00C6, r1
		UCSR0B &= ~(1 << 6);		//TX Complete Interrupt Disable
     d52:	e1 ec       	ldi	r30, 0xC1	; 193
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	80 81       	ld	r24, Z
     d58:	8f 7b       	andi	r24, 0xBF	; 191
     d5a:	80 83       	st	Z, r24
     d5c:	1a c0       	rjmp	.+52     	; 0xd92 <__vector_22+0x70>
		 *  \return Next data element stored in the buffer.
		 */
		static inline uint8_t RingBuffer_Remove(RingBuffer_t* Buffer) ATTR_NON_NULL_PTR_ARG(1);
		static inline uint8_t RingBuffer_Remove(RingBuffer_t* Buffer)
		{
			GCC_FORCE_POINTER_ACCESS(Buffer);
     d5e:	e3 e4       	ldi	r30, 0x43	; 67
     d60:	f4 e0       	ldi	r31, 0x04	; 4

			uint8_t Data = *Buffer->Out;
     d62:	a2 81       	ldd	r26, Z+2	; 0x02
     d64:	b3 81       	ldd	r27, Z+3	; 0x03
     d66:	2d 91       	ld	r18, X+

			if (++Buffer->Out == Buffer->End)
     d68:	b3 83       	std	Z+3, r27	; 0x03
     d6a:	a2 83       	std	Z+2, r26	; 0x02
     d6c:	86 81       	ldd	r24, Z+6	; 0x06
     d6e:	97 81       	ldd	r25, Z+7	; 0x07
     d70:	a8 17       	cp	r26, r24
     d72:	b9 07       	cpc	r27, r25
     d74:	21 f4       	brne	.+8      	; 0xd7e <__vector_22+0x5c>
			  Buffer->Out = Buffer->Start;
     d76:	84 81       	ldd	r24, Z+4	; 0x04
     d78:	95 81       	ldd	r25, Z+5	; 0x05
     d7a:	93 83       	std	Z+3, r25	; 0x03
     d7c:	82 83       	std	Z+2, r24	; 0x02
			static inline uint_reg_t GetGlobalInterruptMask(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				return SREG;
     d7e:	3f b7       	in	r19, 0x3f	; 63
			static inline void GlobalInterruptDisable(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				cli();
     d80:	f8 94       	cli

			uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
			GlobalInterruptDisable();

			Buffer->Count--;
     d82:	82 85       	ldd	r24, Z+10	; 0x0a
     d84:	93 85       	ldd	r25, Z+11	; 0x0b
     d86:	01 97       	sbiw	r24, 0x01	; 1
     d88:	93 87       	std	Z+11, r25	; 0x0b
     d8a:	82 87       	std	Z+10, r24	; 0x0a
			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				SREG = GlobalIntState;
     d8c:	3f bf       	out	0x3f, r19	; 63
	}
	else
	{
		UDR0 = RingBuffer_Remove( &Buffer );
     d8e:	20 93 c6 00 	sts	0x00C6, r18
	}
};
     d92:	ff 91       	pop	r31
     d94:	ef 91       	pop	r30
     d96:	bf 91       	pop	r27
     d98:	af 91       	pop	r26
     d9a:	9f 91       	pop	r25
     d9c:	8f 91       	pop	r24
     d9e:	3f 91       	pop	r19
     da0:	2f 91       	pop	r18
     da2:	0f 90       	pop	r0
     da4:	0f be       	out	0x3f, r0	; 63
     da6:	0f 90       	pop	r0
     da8:	1f 90       	pop	r1
     daa:	18 95       	reti

00000dac <set_dac_uf>:


void set_dac_uf(uint16_t val)		// Reduce flow sensor voltage supply
{
	
	PORTB &= ~(1 << 0);
     dac:	28 98       	cbi	0x05, 0	; 5
	
	for(int i =0; i < 16; i++)
     dae:	20 e0       	ldi	r18, 0x00	; 0
     db0:	30 e0       	ldi	r19, 0x00	; 0
	{
		PORTB |= (1 << 1);
		if(val & (0x8000 >> i)){
     db2:	60 e0       	ldi	r22, 0x00	; 0
     db4:	70 e8       	ldi	r23, 0x80	; 128
	
	PORTB &= ~(1 << 0);
	
	for(int i =0; i < 16; i++)
	{
		PORTB |= (1 << 1);
     db6:	29 9a       	sbi	0x05, 1	; 5
		if(val & (0x8000 >> i)){
     db8:	ab 01       	movw	r20, r22
     dba:	02 2e       	mov	r0, r18
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <set_dac_uf+0x16>
     dbe:	56 95       	lsr	r21
     dc0:	47 95       	ror	r20
     dc2:	0a 94       	dec	r0
     dc4:	e2 f7       	brpl	.-8      	; 0xdbe <set_dac_uf+0x12>
     dc6:	48 23       	and	r20, r24
     dc8:	59 23       	and	r21, r25
     dca:	45 2b       	or	r20, r21
     dcc:	11 f0       	breq	.+4      	; 0xdd2 <set_dac_uf+0x26>
			PORTB |= (1 << 3);}
     dce:	2b 9a       	sbi	0x05, 3	; 5
     dd0:	01 c0       	rjmp	.+2      	; 0xdd4 <set_dac_uf+0x28>
		else{
			PORTB &= ~(1 << 3);}
     dd2:	2b 98       	cbi	0x05, 3	; 5
		PORTB &= ~(1 << 1);
     dd4:	29 98       	cbi	0x05, 1	; 5
void set_dac_uf(uint16_t val)		// Reduce flow sensor voltage supply
{
	
	PORTB &= ~(1 << 0);
	
	for(int i =0; i < 16; i++)
     dd6:	2f 5f       	subi	r18, 0xFF	; 255
     dd8:	3f 4f       	sbci	r19, 0xFF	; 255
     dda:	20 31       	cpi	r18, 0x10	; 16
     ddc:	31 05       	cpc	r19, r1
     dde:	59 f7       	brne	.-42     	; 0xdb6 <set_dac_uf+0xa>
			PORTB &= ~(1 << 3);}
		PORTB &= ~(1 << 1);
		
	}
	
	PORTB |= (1 << 0);
     de0:	28 9a       	sbi	0x05, 0	; 5
     de2:	08 95       	ret

00000de4 <main>:
		                                         const uint16_t Size) ATTR_NON_NULL_PTR_ARG(1) ATTR_NON_NULL_PTR_ARG(2);
		static inline void RingBuffer_InitBuffer(RingBuffer_t* Buffer,
		                                         uint8_t* const DataPtr,
		                                         const uint16_t Size)
		{
			GCC_FORCE_POINTER_ACCESS(Buffer);
     de4:	e3 e4       	ldi	r30, 0x43	; 67
     de6:	f4 e0       	ldi	r31, 0x04	; 4
			static inline uint_reg_t GetGlobalInterruptMask(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				return SREG;
     de8:	2f b7       	in	r18, 0x3f	; 63
			static inline void GlobalInterruptDisable(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				cli();
     dea:	f8 94       	cli

			uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
			GlobalInterruptDisable();

			Buffer->In     = DataPtr;
     dec:	8e e6       	ldi	r24, 0x6E	; 110
     dee:	93 e0       	ldi	r25, 0x03	; 3
     df0:	91 83       	std	Z+1, r25	; 0x01
     df2:	80 83       	st	Z, r24
			Buffer->Out    = DataPtr;
     df4:	93 83       	std	Z+3, r25	; 0x03
     df6:	82 83       	std	Z+2, r24	; 0x02
			Buffer->Start  = &DataPtr[0];
     df8:	95 83       	std	Z+5, r25	; 0x05
     dfa:	84 83       	std	Z+4, r24	; 0x04
			Buffer->End    = &DataPtr[Size];
     dfc:	8e e0       	ldi	r24, 0x0E	; 14
     dfe:	94 e0       	ldi	r25, 0x04	; 4
     e00:	97 83       	std	Z+7, r25	; 0x07
     e02:	86 83       	std	Z+6, r24	; 0x06
			Buffer->Size   = Size;
     e04:	80 ea       	ldi	r24, 0xA0	; 160
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	91 87       	std	Z+9, r25	; 0x09
     e0a:	80 87       	std	Z+8, r24	; 0x08
			Buffer->Count  = 0;
     e0c:	13 86       	std	Z+11, r1	; 0x0b
     e0e:	12 86       	std	Z+10, r1	; 0x0a
			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				SREG = GlobalIntState;
     e10:	2f bf       	out	0x3f, r18	; 63
int main (void)
{
		
	
 	RingBuffer_InitBuffer(&Buffer, BufferData, sizeof(BufferData));
 	uart_init();
     e12:	21 df       	rcall	.-446    	; 0xc56 <uart_init>
	
	while(!read_eeprom()){};
     e14:	bb da       	rcall	.-2698   	; 0x38c <read_eeprom>
     e16:	88 23       	and	r24, r24
     e18:	e9 f3       	breq	.-6      	; 0xe14 <main+0x30>
	



	cli();
     e1a:	f8 94       	cli
	
	DDRA |= (1 << 3);
     e1c:	0b 9a       	sbi	0x01, 3	; 1

	PORTD = 0;//(1 << 6) ;
     e1e:	1b b8       	out	0x0b, r1	; 11
	PORTD |= (1 << 2);
     e20:	5a 9a       	sbi	0x0b, 2	; 11
	
	DDRC |= 0xFF;
     e22:	87 b1       	in	r24, 0x07	; 7
     e24:	8f ef       	ldi	r24, 0xFF	; 255
     e26:	87 b9       	out	0x07, r24	; 7
	DDRB |= (1 << 1)|(1 << 3)|(1 << 0);
     e28:	84 b1       	in	r24, 0x04	; 4
     e2a:	8b 60       	ori	r24, 0x0B	; 11
     e2c:	84 b9       	out	0x04, r24	; 4
	
	DDRD |= (1 << 6)|(1 << 1);
     e2e:	8a b1       	in	r24, 0x0a	; 10
     e30:	82 64       	ori	r24, 0x42	; 66
     e32:	8a b9       	out	0x0a, r24	; 10
	PORTC = 0xE7;
     e34:	87 ee       	ldi	r24, 0xE7	; 231
     e36:	88 b9       	out	0x08, r24	; 8
	set_dac_uf(0xFFF);				// Reduce flow sensor voltage supply
     e38:	8f ef       	ldi	r24, 0xFF	; 255
     e3a:	9f e0       	ldi	r25, 0x0F	; 15
     e3c:	b7 df       	rcall	.-146    	; 0xdac <set_dac_uf>
	adc_init(0x05);	
     e3e:	85 e0       	ldi	r24, 0x05	; 5
     e40:	ea dd       	rcall	.-1068   	; 0xa16 <adc_init>
	
	ADCSRA |= (1 << ADSC);					//Get value of  reduced flow sensor voltage supply
     e42:	ea e7       	ldi	r30, 0x7A	; 122
     e44:	f0 e0       	ldi	r31, 0x00	; 0
     e46:	80 81       	ld	r24, Z
     e48:	80 64       	ori	r24, 0x40	; 64
     e4a:	80 83       	st	Z, r24
     e4c:	80 e0       	ldi	r24, 0x00	; 0
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	01 96       	adiw	r24, 0x01	; 1
     e52:	8a 31       	cpi	r24, 0x1A	; 26
     e54:	21 e4       	ldi	r18, 0x41	; 65
     e56:	92 07       	cpc	r25, r18
     e58:	d9 f7       	brne	.-10     	; 0xe50 <main+0x6c>
	delay_ms(100);
	uint16_t b1 = ADCL;
     e5a:	20 91 78 00 	lds	r18, 0x0078
	uint16_t b2 = ADCH & 0x03;	
     e5e:	80 91 79 00 	lds	r24, 0x0079
     e62:	83 70       	andi	r24, 0x03	; 3
     e64:	90 e0       	ldi	r25, 0x00	; 0
	ref_divider = (b2 << 8) + b1;
     e66:	98 2f       	mov	r25, r24
     e68:	88 27       	eor	r24, r24
     e6a:	82 0f       	add	r24, r18
     e6c:	91 1d       	adc	r25, r1
     e6e:	90 93 54 04 	sts	0x0454, r25
     e72:	80 93 53 04 	sts	0x0453, r24

	adc_init(0x06);
     e76:	86 e0       	ldi	r24, 0x06	; 6
     e78:	ce dd       	rcall	.-1124   	; 0xa16 <adc_init>

	
	
	sei();
     e7a:	78 94       	sei

	pwm_init(pwm);
     e7c:	80 91 00 01 	lds	r24, 0x0100
     e80:	95 de       	rcall	.-726    	; 0xbac <pwm_init>
	timer1_init();
     e82:	bb de       	rcall	.-650    	; 0xbfa <timer1_init>


	isInit = true;
     e84:	81 e0       	ldi	r24, 0x01	; 1
     e86:	80 93 64 03 	sts	0x0364, r24
			
			PORTC |= (1 << 6);
			
			if(pwm >= pwm_max)
			{
				pwm = pwm_min;
     e8a:	68 94       	set
     e8c:	dd 24       	eor	r13, r13
     e8e:	d1 f8       	bld	r13, 1
				PORTC |= (1 << 5);
     e90:	0f 2e       	mov	r0, r31
     e92:	fa e0       	ldi	r31, 0x0A	; 10
     e94:	ef 2e       	mov	r14, r31
     e96:	f0 2d       	mov	r31, r0
     e98:	0f 2e       	mov	r0, r31
     e9a:	fb e8       	ldi	r31, 0x8B	; 139
     e9c:	ff 2e       	mov	r15, r31
     e9e:	f0 2d       	mov	r31, r0
     ea0:	02 e0       	ldi	r16, 0x02	; 2
     ea2:	10 e0       	ldi	r17, 0x00	; 0
			resempling_val = (resempling >> resempling_degree)>>5;
			resempling = 0;
			resempling_flag = 0;
			step = 0;
			value1 = resempling_val*4.1/1024;
			value = kA * pow(value1,3) + kB * pow(value1,2) + kC * value1 + kD;
     ea4:	cf e0       	ldi	r28, 0x0F	; 15
     ea6:	d4 e0       	ldi	r29, 0x04	; 4
	isInit = true;

	while(1)
	{

		if(flag > 400)						//Button PWM control
     ea8:	80 91 6a 03 	lds	r24, 0x036A
     eac:	90 91 6b 03 	lds	r25, 0x036B
     eb0:	81 39       	cpi	r24, 0x91	; 145
     eb2:	91 40       	sbci	r25, 0x01	; 1
     eb4:	04 f1       	brlt	.+64     	; 0xef6 <main+0x112>
		{
			cli();
     eb6:	f8 94       	cli
			
			PORTC |= (1 << 6);
     eb8:	46 9a       	sbi	0x08, 6	; 8
			
			if(pwm >= pwm_max)
     eba:	80 91 00 01 	lds	r24, 0x0100
     ebe:	8a 3f       	cpi	r24, 0xFA	; 250
     ec0:	60 f0       	brcs	.+24     	; 0xeda <main+0xf6>
			{
				pwm = pwm_min;
     ec2:	d0 92 00 01 	sts	0x0100, r13
				PORTC |= (1 << 5);
     ec6:	45 9a       	sbi	0x08, 5	; 8
     ec8:	8e 2d       	mov	r24, r14
     eca:	9f 2d       	mov	r25, r15
     ecc:	a0 2f       	mov	r26, r16
     ece:	b1 2f       	mov	r27, r17
     ed0:	01 97       	sbiw	r24, 0x01	; 1
     ed2:	a1 09       	sbc	r26, r1
     ed4:	b1 09       	sbc	r27, r1
     ed6:	e1 f7       	brne	.-8      	; 0xed0 <main+0xec>
				delay_s(1);
				PORTC &= ~(1 << 5);
     ed8:	45 98       	cbi	0x08, 5	; 8
			};
			pwm_init( pwm );
     eda:	80 91 00 01 	lds	r24, 0x0100
     ede:	66 de       	rcall	.-820    	; 0xbac <pwm_init>
			PORTC &= ~(1 << 6);
     ee0:	46 98       	cbi	0x08, 6	; 8
			pwm += pwm_step;
     ee2:	80 91 00 01 	lds	r24, 0x0100
     ee6:	87 5e       	subi	r24, 0xE7	; 231
     ee8:	80 93 00 01 	sts	0x0100, r24
			flag=0;
     eec:	10 92 6b 03 	sts	0x036B, r1
     ef0:	10 92 6a 03 	sts	0x036A, r1
			sei();
     ef4:	78 94       	sei
		}
		if(resempling_flag)							// Data is collected, processing,  output 
     ef6:	80 91 59 04 	lds	r24, 0x0459
     efa:	88 23       	and	r24, r24
     efc:	a9 f2       	breq	.-86     	; 0xea8 <main+0xc4>
		{
			cli();
     efe:	f8 94       	cli
			resempling_val = (resempling >> resempling_degree)>>5;
     f00:	80 91 4f 04 	lds	r24, 0x044F
     f04:	90 91 50 04 	lds	r25, 0x0450
     f08:	a0 91 51 04 	lds	r26, 0x0451
     f0c:	b0 91 52 04 	lds	r27, 0x0452
     f10:	bc 01       	movw	r22, r24
     f12:	cd 01       	movw	r24, r26
     f14:	05 2e       	mov	r0, r21
     f16:	5a e0       	ldi	r21, 0x0A	; 10
     f18:	96 95       	lsr	r25
     f1a:	87 95       	ror	r24
     f1c:	77 95       	ror	r23
     f1e:	67 95       	ror	r22
     f20:	5a 95       	dec	r21
     f22:	d1 f7       	brne	.-12     	; 0xf18 <main+0x134>
     f24:	50 2d       	mov	r21, r0
     f26:	60 93 60 04 	sts	0x0460, r22
     f2a:	70 93 61 04 	sts	0x0461, r23
     f2e:	80 93 62 04 	sts	0x0462, r24
     f32:	90 93 63 04 	sts	0x0463, r25
			resempling = 0;
     f36:	10 92 4f 04 	sts	0x044F, r1
     f3a:	10 92 50 04 	sts	0x0450, r1
     f3e:	10 92 51 04 	sts	0x0451, r1
     f42:	10 92 52 04 	sts	0x0452, r1
			resempling_flag = 0;
     f46:	10 92 59 04 	sts	0x0459, r1
			step = 0;
     f4a:	10 92 5d 04 	sts	0x045D, r1
     f4e:	10 92 5c 04 	sts	0x045C, r1
			value1 = resempling_val*4.1/1024;
     f52:	ac d4       	rcall	.+2392   	; 0x18ac <__floatunsisf>
     f54:	23 e3       	ldi	r18, 0x33	; 51
     f56:	33 e3       	ldi	r19, 0x33	; 51
     f58:	43 e8       	ldi	r20, 0x83	; 131
     f5a:	50 e4       	ldi	r21, 0x40	; 64
     f5c:	5d d5       	rcall	.+2746   	; 0x1a18 <__mulsf3>
     f5e:	20 e0       	ldi	r18, 0x00	; 0
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	40 e8       	ldi	r20, 0x80	; 128
     f64:	5a e3       	ldi	r21, 0x3A	; 58
     f66:	58 d5       	rcall	.+2736   	; 0x1a18 <__mulsf3>
     f68:	2b 01       	movw	r4, r22
     f6a:	3c 01       	movw	r6, r24
     f6c:	60 93 65 03 	sts	0x0365, r22
     f70:	70 93 66 03 	sts	0x0366, r23
     f74:	80 93 67 03 	sts	0x0367, r24
     f78:	90 93 68 03 	sts	0x0368, r25
			value = kA * pow(value1,3) + kB * pow(value1,2) + kC * value1 + kD;
     f7c:	20 e0       	ldi	r18, 0x00	; 0
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	40 e4       	ldi	r20, 0x40	; 64
     f82:	50 e4       	ldi	r21, 0x40	; 64
     f84:	ac d5       	rcall	.+2904   	; 0x1ade <pow>
     f86:	28 81       	ld	r18, Y
     f88:	39 81       	ldd	r19, Y+1	; 0x01
     f8a:	4a 81       	ldd	r20, Y+2	; 0x02
     f8c:	5b 81       	ldd	r21, Y+3	; 0x03
     f8e:	44 d5       	rcall	.+2696   	; 0x1a18 <__mulsf3>
     f90:	4b 01       	movw	r8, r22
     f92:	5c 01       	movw	r10, r24
     f94:	a3 01       	movw	r20, r6
     f96:	92 01       	movw	r18, r4
     f98:	c3 01       	movw	r24, r6
     f9a:	b2 01       	movw	r22, r4
     f9c:	3d d5       	rcall	.+2682   	; 0x1a18 <__mulsf3>
     f9e:	2c 81       	ldd	r18, Y+4	; 0x04
     fa0:	3d 81       	ldd	r19, Y+5	; 0x05
     fa2:	4e 81       	ldd	r20, Y+6	; 0x06
     fa4:	5f 81       	ldd	r21, Y+7	; 0x07
     fa6:	38 d5       	rcall	.+2672   	; 0x1a18 <__mulsf3>
     fa8:	9b 01       	movw	r18, r22
     faa:	ac 01       	movw	r20, r24
     fac:	c5 01       	movw	r24, r10
     fae:	b4 01       	movw	r22, r8
     fb0:	7c d3       	rcall	.+1784   	; 0x16aa <__addsf3>
     fb2:	4b 01       	movw	r8, r22
     fb4:	5c 01       	movw	r10, r24
     fb6:	28 85       	ldd	r18, Y+8	; 0x08
     fb8:	39 85       	ldd	r19, Y+9	; 0x09
     fba:	4a 85       	ldd	r20, Y+10	; 0x0a
     fbc:	5b 85       	ldd	r21, Y+11	; 0x0b
     fbe:	c3 01       	movw	r24, r6
     fc0:	b2 01       	movw	r22, r4
     fc2:	2a d5       	rcall	.+2644   	; 0x1a18 <__mulsf3>
     fc4:	9b 01       	movw	r18, r22
     fc6:	ac 01       	movw	r20, r24
     fc8:	c5 01       	movw	r24, r10
     fca:	b4 01       	movw	r22, r8
     fcc:	6e d3       	rcall	.+1756   	; 0x16aa <__addsf3>
     fce:	2c 85       	ldd	r18, Y+12	; 0x0c
     fd0:	3d 85       	ldd	r19, Y+13	; 0x0d
     fd2:	4e 85       	ldd	r20, Y+14	; 0x0e
     fd4:	5f 85       	ldd	r21, Y+15	; 0x0f
     fd6:	69 d3       	rcall	.+1746   	; 0x16aa <__addsf3>
     fd8:	60 93 64 04 	sts	0x0464, r22
     fdc:	70 93 65 04 	sts	0x0465, r23
     fe0:	80 93 66 04 	sts	0x0466, r24
     fe4:	90 93 67 04 	sts	0x0467, r25
			set_level(value);
     fe8:	ae dd       	rcall	.-1188   	; 0xb46 <set_level>
			sei();
     fea:	78 94       	sei
     fec:	5d cf       	rjmp	.-326    	; 0xea8 <main+0xc4>

00000fee <vfprintf>:
     fee:	a3 e1       	ldi	r26, 0x13	; 19
     ff0:	b0 e0       	ldi	r27, 0x00	; 0
     ff2:	ec ef       	ldi	r30, 0xFC	; 252
     ff4:	f7 e0       	ldi	r31, 0x07	; 7
     ff6:	f1 c6       	rjmp	.+3554   	; 0x1dda <__prologue_saves__>
     ff8:	6c 01       	movw	r12, r24
     ffa:	4b 01       	movw	r8, r22
     ffc:	2a 01       	movw	r4, r20
     ffe:	fc 01       	movw	r30, r24
    1000:	17 82       	std	Z+7, r1	; 0x07
    1002:	16 82       	std	Z+6, r1	; 0x06
    1004:	83 81       	ldd	r24, Z+3	; 0x03
    1006:	81 ff       	sbrs	r24, 1
    1008:	29 c3       	rjmp	.+1618   	; 0x165c <vfprintf+0x66e>
    100a:	ae 01       	movw	r20, r28
    100c:	4f 5f       	subi	r20, 0xFF	; 255
    100e:	5f 4f       	sbci	r21, 0xFF	; 255
    1010:	3a 01       	movw	r6, r20
    1012:	f6 01       	movw	r30, r12
    1014:	93 81       	ldd	r25, Z+3	; 0x03
    1016:	f4 01       	movw	r30, r8
    1018:	93 fd       	sbrc	r25, 3
    101a:	85 91       	lpm	r24, Z+
    101c:	93 ff       	sbrs	r25, 3
    101e:	81 91       	ld	r24, Z+
    1020:	4f 01       	movw	r8, r30
    1022:	88 23       	and	r24, r24
    1024:	09 f4       	brne	.+2      	; 0x1028 <vfprintf+0x3a>
    1026:	16 c3       	rjmp	.+1580   	; 0x1654 <vfprintf+0x666>
    1028:	85 32       	cpi	r24, 0x25	; 37
    102a:	39 f4       	brne	.+14     	; 0x103a <vfprintf+0x4c>
    102c:	93 fd       	sbrc	r25, 3
    102e:	85 91       	lpm	r24, Z+
    1030:	93 ff       	sbrs	r25, 3
    1032:	81 91       	ld	r24, Z+
    1034:	4f 01       	movw	r8, r30
    1036:	85 32       	cpi	r24, 0x25	; 37
    1038:	31 f4       	brne	.+12     	; 0x1046 <vfprintf+0x58>
    103a:	b6 01       	movw	r22, r12
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	fe d7       	rcall	.+4092   	; 0x203c <fputc>
    1040:	52 01       	movw	r10, r4
    1042:	25 01       	movw	r4, r10
    1044:	e6 cf       	rjmp	.-52     	; 0x1012 <vfprintf+0x24>
    1046:	10 e0       	ldi	r17, 0x00	; 0
    1048:	f1 2c       	mov	r15, r1
    104a:	20 e0       	ldi	r18, 0x00	; 0
    104c:	20 32       	cpi	r18, 0x20	; 32
    104e:	a0 f4       	brcc	.+40     	; 0x1078 <vfprintf+0x8a>
    1050:	8b 32       	cpi	r24, 0x2B	; 43
    1052:	69 f0       	breq	.+26     	; 0x106e <vfprintf+0x80>
    1054:	30 f4       	brcc	.+12     	; 0x1062 <vfprintf+0x74>
    1056:	80 32       	cpi	r24, 0x20	; 32
    1058:	59 f0       	breq	.+22     	; 0x1070 <vfprintf+0x82>
    105a:	83 32       	cpi	r24, 0x23	; 35
    105c:	69 f4       	brne	.+26     	; 0x1078 <vfprintf+0x8a>
    105e:	20 61       	ori	r18, 0x10	; 16
    1060:	2c c0       	rjmp	.+88     	; 0x10ba <vfprintf+0xcc>
    1062:	8d 32       	cpi	r24, 0x2D	; 45
    1064:	39 f0       	breq	.+14     	; 0x1074 <vfprintf+0x86>
    1066:	80 33       	cpi	r24, 0x30	; 48
    1068:	39 f4       	brne	.+14     	; 0x1078 <vfprintf+0x8a>
    106a:	21 60       	ori	r18, 0x01	; 1
    106c:	26 c0       	rjmp	.+76     	; 0x10ba <vfprintf+0xcc>
    106e:	22 60       	ori	r18, 0x02	; 2
    1070:	24 60       	ori	r18, 0x04	; 4
    1072:	23 c0       	rjmp	.+70     	; 0x10ba <vfprintf+0xcc>
    1074:	28 60       	ori	r18, 0x08	; 8
    1076:	21 c0       	rjmp	.+66     	; 0x10ba <vfprintf+0xcc>
    1078:	27 fd       	sbrc	r18, 7
    107a:	27 c0       	rjmp	.+78     	; 0x10ca <vfprintf+0xdc>
    107c:	30 ed       	ldi	r19, 0xD0	; 208
    107e:	38 0f       	add	r19, r24
    1080:	3a 30       	cpi	r19, 0x0A	; 10
    1082:	78 f4       	brcc	.+30     	; 0x10a2 <vfprintf+0xb4>
    1084:	26 ff       	sbrs	r18, 6
    1086:	06 c0       	rjmp	.+12     	; 0x1094 <vfprintf+0xa6>
    1088:	fa e0       	ldi	r31, 0x0A	; 10
    108a:	1f 9f       	mul	r17, r31
    108c:	30 0d       	add	r19, r0
    108e:	11 24       	eor	r1, r1
    1090:	13 2f       	mov	r17, r19
    1092:	13 c0       	rjmp	.+38     	; 0x10ba <vfprintf+0xcc>
    1094:	4a e0       	ldi	r20, 0x0A	; 10
    1096:	f4 9e       	mul	r15, r20
    1098:	30 0d       	add	r19, r0
    109a:	11 24       	eor	r1, r1
    109c:	f3 2e       	mov	r15, r19
    109e:	20 62       	ori	r18, 0x20	; 32
    10a0:	0c c0       	rjmp	.+24     	; 0x10ba <vfprintf+0xcc>
    10a2:	8e 32       	cpi	r24, 0x2E	; 46
    10a4:	21 f4       	brne	.+8      	; 0x10ae <vfprintf+0xc0>
    10a6:	26 fd       	sbrc	r18, 6
    10a8:	d5 c2       	rjmp	.+1450   	; 0x1654 <vfprintf+0x666>
    10aa:	20 64       	ori	r18, 0x40	; 64
    10ac:	06 c0       	rjmp	.+12     	; 0x10ba <vfprintf+0xcc>
    10ae:	8c 36       	cpi	r24, 0x6C	; 108
    10b0:	11 f4       	brne	.+4      	; 0x10b6 <vfprintf+0xc8>
    10b2:	20 68       	ori	r18, 0x80	; 128
    10b4:	02 c0       	rjmp	.+4      	; 0x10ba <vfprintf+0xcc>
    10b6:	88 36       	cpi	r24, 0x68	; 104
    10b8:	41 f4       	brne	.+16     	; 0x10ca <vfprintf+0xdc>
    10ba:	f4 01       	movw	r30, r8
    10bc:	93 fd       	sbrc	r25, 3
    10be:	85 91       	lpm	r24, Z+
    10c0:	93 ff       	sbrs	r25, 3
    10c2:	81 91       	ld	r24, Z+
    10c4:	4f 01       	movw	r8, r30
    10c6:	81 11       	cpse	r24, r1
    10c8:	c1 cf       	rjmp	.-126    	; 0x104c <vfprintf+0x5e>
    10ca:	9b eb       	ldi	r25, 0xBB	; 187
    10cc:	98 0f       	add	r25, r24
    10ce:	93 30       	cpi	r25, 0x03	; 3
    10d0:	18 f4       	brcc	.+6      	; 0x10d8 <vfprintf+0xea>
    10d2:	20 61       	ori	r18, 0x10	; 16
    10d4:	80 5e       	subi	r24, 0xE0	; 224
    10d6:	06 c0       	rjmp	.+12     	; 0x10e4 <vfprintf+0xf6>
    10d8:	9b e9       	ldi	r25, 0x9B	; 155
    10da:	98 0f       	add	r25, r24
    10dc:	93 30       	cpi	r25, 0x03	; 3
    10de:	08 f0       	brcs	.+2      	; 0x10e2 <vfprintf+0xf4>
    10e0:	64 c1       	rjmp	.+712    	; 0x13aa <vfprintf+0x3bc>
    10e2:	2f 7e       	andi	r18, 0xEF	; 239
    10e4:	26 ff       	sbrs	r18, 6
    10e6:	16 e0       	ldi	r17, 0x06	; 6
    10e8:	2f 73       	andi	r18, 0x3F	; 63
    10ea:	32 2e       	mov	r3, r18
    10ec:	85 36       	cpi	r24, 0x65	; 101
    10ee:	19 f4       	brne	.+6      	; 0x10f6 <vfprintf+0x108>
    10f0:	20 64       	ori	r18, 0x40	; 64
    10f2:	32 2e       	mov	r3, r18
    10f4:	08 c0       	rjmp	.+16     	; 0x1106 <vfprintf+0x118>
    10f6:	86 36       	cpi	r24, 0x66	; 102
    10f8:	21 f4       	brne	.+8      	; 0x1102 <vfprintf+0x114>
    10fa:	f2 2f       	mov	r31, r18
    10fc:	f0 68       	ori	r31, 0x80	; 128
    10fe:	3f 2e       	mov	r3, r31
    1100:	02 c0       	rjmp	.+4      	; 0x1106 <vfprintf+0x118>
    1102:	11 11       	cpse	r17, r1
    1104:	11 50       	subi	r17, 0x01	; 1
    1106:	37 fe       	sbrs	r3, 7
    1108:	07 c0       	rjmp	.+14     	; 0x1118 <vfprintf+0x12a>
    110a:	1c 33       	cpi	r17, 0x3C	; 60
    110c:	50 f4       	brcc	.+20     	; 0x1122 <vfprintf+0x134>
    110e:	ee 24       	eor	r14, r14
    1110:	e3 94       	inc	r14
    1112:	e1 0e       	add	r14, r17
    1114:	27 e0       	ldi	r18, 0x07	; 7
    1116:	0b c0       	rjmp	.+22     	; 0x112e <vfprintf+0x140>
    1118:	18 30       	cpi	r17, 0x08	; 8
    111a:	38 f0       	brcs	.+14     	; 0x112a <vfprintf+0x13c>
    111c:	27 e0       	ldi	r18, 0x07	; 7
    111e:	17 e0       	ldi	r17, 0x07	; 7
    1120:	05 c0       	rjmp	.+10     	; 0x112c <vfprintf+0x13e>
    1122:	27 e0       	ldi	r18, 0x07	; 7
    1124:	4c e3       	ldi	r20, 0x3C	; 60
    1126:	e4 2e       	mov	r14, r20
    1128:	02 c0       	rjmp	.+4      	; 0x112e <vfprintf+0x140>
    112a:	21 2f       	mov	r18, r17
    112c:	e1 2c       	mov	r14, r1
    112e:	52 01       	movw	r10, r4
    1130:	44 e0       	ldi	r20, 0x04	; 4
    1132:	a4 0e       	add	r10, r20
    1134:	b1 1c       	adc	r11, r1
    1136:	f2 01       	movw	r30, r4
    1138:	60 81       	ld	r22, Z
    113a:	71 81       	ldd	r23, Z+1	; 0x01
    113c:	82 81       	ldd	r24, Z+2	; 0x02
    113e:	93 81       	ldd	r25, Z+3	; 0x03
    1140:	0e 2d       	mov	r16, r14
    1142:	a3 01       	movw	r20, r6
    1144:	84 d6       	rcall	.+3336   	; 0x1e4e <__ftoa_engine>
    1146:	2c 01       	movw	r4, r24
    1148:	09 81       	ldd	r16, Y+1	; 0x01
    114a:	00 ff       	sbrs	r16, 0
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <vfprintf+0x164>
    114e:	03 ff       	sbrs	r16, 3
    1150:	07 c0       	rjmp	.+14     	; 0x1160 <vfprintf+0x172>
    1152:	31 fc       	sbrc	r3, 1
    1154:	08 c0       	rjmp	.+16     	; 0x1166 <vfprintf+0x178>
    1156:	32 fe       	sbrs	r3, 2
    1158:	09 c0       	rjmp	.+18     	; 0x116c <vfprintf+0x17e>
    115a:	30 e2       	ldi	r19, 0x20	; 32
    115c:	23 2e       	mov	r2, r19
    115e:	07 c0       	rjmp	.+14     	; 0x116e <vfprintf+0x180>
    1160:	2d e2       	ldi	r18, 0x2D	; 45
    1162:	22 2e       	mov	r2, r18
    1164:	04 c0       	rjmp	.+8      	; 0x116e <vfprintf+0x180>
    1166:	9b e2       	ldi	r25, 0x2B	; 43
    1168:	29 2e       	mov	r2, r25
    116a:	01 c0       	rjmp	.+2      	; 0x116e <vfprintf+0x180>
    116c:	21 2c       	mov	r2, r1
    116e:	80 2f       	mov	r24, r16
    1170:	8c 70       	andi	r24, 0x0C	; 12
    1172:	19 f0       	breq	.+6      	; 0x117a <vfprintf+0x18c>
    1174:	21 10       	cpse	r2, r1
    1176:	51 c2       	rjmp	.+1186   	; 0x161a <vfprintf+0x62c>
    1178:	8d c2       	rjmp	.+1306   	; 0x1694 <vfprintf+0x6a6>
    117a:	37 fe       	sbrs	r3, 7
    117c:	0f c0       	rjmp	.+30     	; 0x119c <vfprintf+0x1ae>
    117e:	e4 0c       	add	r14, r4
    1180:	04 ff       	sbrs	r16, 4
    1182:	04 c0       	rjmp	.+8      	; 0x118c <vfprintf+0x19e>
    1184:	8a 81       	ldd	r24, Y+2	; 0x02
    1186:	81 33       	cpi	r24, 0x31	; 49
    1188:	09 f4       	brne	.+2      	; 0x118c <vfprintf+0x19e>
    118a:	ea 94       	dec	r14
    118c:	1e 14       	cp	r1, r14
    118e:	74 f5       	brge	.+92     	; 0x11ec <vfprintf+0x1fe>
    1190:	f8 e0       	ldi	r31, 0x08	; 8
    1192:	fe 15       	cp	r31, r14
    1194:	78 f5       	brcc	.+94     	; 0x11f4 <vfprintf+0x206>
    1196:	88 e0       	ldi	r24, 0x08	; 8
    1198:	e8 2e       	mov	r14, r24
    119a:	2c c0       	rjmp	.+88     	; 0x11f4 <vfprintf+0x206>
    119c:	36 fc       	sbrc	r3, 6
    119e:	2a c0       	rjmp	.+84     	; 0x11f4 <vfprintf+0x206>
    11a0:	81 2f       	mov	r24, r17
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	84 15       	cp	r24, r4
    11a6:	95 05       	cpc	r25, r5
    11a8:	9c f0       	brlt	.+38     	; 0x11d0 <vfprintf+0x1e2>
    11aa:	2c ef       	ldi	r18, 0xFC	; 252
    11ac:	42 16       	cp	r4, r18
    11ae:	2f ef       	ldi	r18, 0xFF	; 255
    11b0:	52 06       	cpc	r5, r18
    11b2:	74 f0       	brlt	.+28     	; 0x11d0 <vfprintf+0x1e2>
    11b4:	43 2d       	mov	r20, r3
    11b6:	40 68       	ori	r20, 0x80	; 128
    11b8:	34 2e       	mov	r3, r20
    11ba:	0a c0       	rjmp	.+20     	; 0x11d0 <vfprintf+0x1e2>
    11bc:	e2 e0       	ldi	r30, 0x02	; 2
    11be:	f0 e0       	ldi	r31, 0x00	; 0
    11c0:	ec 0f       	add	r30, r28
    11c2:	fd 1f       	adc	r31, r29
    11c4:	e1 0f       	add	r30, r17
    11c6:	f1 1d       	adc	r31, r1
    11c8:	80 81       	ld	r24, Z
    11ca:	80 33       	cpi	r24, 0x30	; 48
    11cc:	19 f4       	brne	.+6      	; 0x11d4 <vfprintf+0x1e6>
    11ce:	11 50       	subi	r17, 0x01	; 1
    11d0:	11 11       	cpse	r17, r1
    11d2:	f4 cf       	rjmp	.-24     	; 0x11bc <vfprintf+0x1ce>
    11d4:	37 fe       	sbrs	r3, 7
    11d6:	0e c0       	rjmp	.+28     	; 0x11f4 <vfprintf+0x206>
    11d8:	ee 24       	eor	r14, r14
    11da:	e3 94       	inc	r14
    11dc:	e1 0e       	add	r14, r17
    11de:	81 2f       	mov	r24, r17
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	48 16       	cp	r4, r24
    11e4:	59 06       	cpc	r5, r25
    11e6:	2c f4       	brge	.+10     	; 0x11f2 <vfprintf+0x204>
    11e8:	14 19       	sub	r17, r4
    11ea:	04 c0       	rjmp	.+8      	; 0x11f4 <vfprintf+0x206>
    11ec:	ee 24       	eor	r14, r14
    11ee:	e3 94       	inc	r14
    11f0:	01 c0       	rjmp	.+2      	; 0x11f4 <vfprintf+0x206>
    11f2:	10 e0       	ldi	r17, 0x00	; 0
    11f4:	37 fe       	sbrs	r3, 7
    11f6:	06 c0       	rjmp	.+12     	; 0x1204 <vfprintf+0x216>
    11f8:	14 14       	cp	r1, r4
    11fa:	15 04       	cpc	r1, r5
    11fc:	34 f4       	brge	.+12     	; 0x120a <vfprintf+0x21c>
    11fe:	c2 01       	movw	r24, r4
    1200:	01 96       	adiw	r24, 0x01	; 1
    1202:	05 c0       	rjmp	.+10     	; 0x120e <vfprintf+0x220>
    1204:	85 e0       	ldi	r24, 0x05	; 5
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	02 c0       	rjmp	.+4      	; 0x120e <vfprintf+0x220>
    120a:	81 e0       	ldi	r24, 0x01	; 1
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	21 10       	cpse	r2, r1
    1210:	01 96       	adiw	r24, 0x01	; 1
    1212:	11 23       	and	r17, r17
    1214:	31 f0       	breq	.+12     	; 0x1222 <vfprintf+0x234>
    1216:	21 2f       	mov	r18, r17
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	2f 5f       	subi	r18, 0xFF	; 255
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	82 0f       	add	r24, r18
    1220:	93 1f       	adc	r25, r19
    1222:	2f 2d       	mov	r18, r15
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	82 17       	cp	r24, r18
    1228:	93 07       	cpc	r25, r19
    122a:	14 f4       	brge	.+4      	; 0x1230 <vfprintf+0x242>
    122c:	f8 1a       	sub	r15, r24
    122e:	01 c0       	rjmp	.+2      	; 0x1232 <vfprintf+0x244>
    1230:	f1 2c       	mov	r15, r1
    1232:	83 2d       	mov	r24, r3
    1234:	89 70       	andi	r24, 0x09	; 9
    1236:	41 f4       	brne	.+16     	; 0x1248 <vfprintf+0x25a>
    1238:	ff 20       	and	r15, r15
    123a:	31 f0       	breq	.+12     	; 0x1248 <vfprintf+0x25a>
    123c:	b6 01       	movw	r22, r12
    123e:	80 e2       	ldi	r24, 0x20	; 32
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	fc d6       	rcall	.+3576   	; 0x203c <fputc>
    1244:	fa 94       	dec	r15
    1246:	f8 cf       	rjmp	.-16     	; 0x1238 <vfprintf+0x24a>
    1248:	22 20       	and	r2, r2
    124a:	21 f0       	breq	.+8      	; 0x1254 <vfprintf+0x266>
    124c:	b6 01       	movw	r22, r12
    124e:	82 2d       	mov	r24, r2
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	f4 d6       	rcall	.+3560   	; 0x203c <fputc>
    1254:	33 fc       	sbrc	r3, 3
    1256:	08 c0       	rjmp	.+16     	; 0x1268 <vfprintf+0x27a>
    1258:	ff 20       	and	r15, r15
    125a:	31 f0       	breq	.+12     	; 0x1268 <vfprintf+0x27a>
    125c:	b6 01       	movw	r22, r12
    125e:	80 e3       	ldi	r24, 0x30	; 48
    1260:	90 e0       	ldi	r25, 0x00	; 0
    1262:	ec d6       	rcall	.+3544   	; 0x203c <fputc>
    1264:	fa 94       	dec	r15
    1266:	f8 cf       	rjmp	.-16     	; 0x1258 <vfprintf+0x26a>
    1268:	37 fe       	sbrs	r3, 7
    126a:	58 c0       	rjmp	.+176    	; 0x131c <vfprintf+0x32e>
    126c:	94 2d       	mov	r25, r4
    126e:	85 2d       	mov	r24, r5
    1270:	57 fe       	sbrs	r5, 7
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <vfprintf+0x28a>
    1274:	90 e0       	ldi	r25, 0x00	; 0
    1276:	80 e0       	ldi	r24, 0x00	; 0
    1278:	29 2e       	mov	r2, r25
    127a:	38 2e       	mov	r3, r24
    127c:	20 e0       	ldi	r18, 0x00	; 0
    127e:	30 e0       	ldi	r19, 0x00	; 0
    1280:	a2 01       	movw	r20, r4
    1282:	4e 19       	sub	r20, r14
    1284:	51 09       	sbc	r21, r1
    1286:	5d 87       	std	Y+13, r21	; 0x0d
    1288:	4c 87       	std	Y+12, r20	; 0x0c
    128a:	a2 01       	movw	r20, r4
    128c:	42 19       	sub	r20, r2
    128e:	53 09       	sbc	r21, r3
    1290:	5f 87       	std	Y+15, r21	; 0x0f
    1292:	4e 87       	std	Y+14, r20	; 0x0e
    1294:	61 2f       	mov	r22, r17
    1296:	70 e0       	ldi	r23, 0x00	; 0
    1298:	44 27       	eor	r20, r20
    129a:	55 27       	eor	r21, r21
    129c:	46 1b       	sub	r20, r22
    129e:	57 0b       	sbc	r21, r23
    12a0:	59 8b       	std	Y+17, r21	; 0x11
    12a2:	48 8b       	std	Y+16, r20	; 0x10
    12a4:	5f ef       	ldi	r21, 0xFF	; 255
    12a6:	25 16       	cp	r2, r21
    12a8:	35 06       	cpc	r3, r21
    12aa:	41 f4       	brne	.+16     	; 0x12bc <vfprintf+0x2ce>
    12ac:	b6 01       	movw	r22, r12
    12ae:	8e e2       	ldi	r24, 0x2E	; 46
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	2a 8b       	std	Y+18, r18	; 0x12
    12b4:	3b 8b       	std	Y+19, r19	; 0x13
    12b6:	c2 d6       	rcall	.+3460   	; 0x203c <fputc>
    12b8:	3b 89       	ldd	r19, Y+19	; 0x13
    12ba:	2a 89       	ldd	r18, Y+18	; 0x12
    12bc:	42 14       	cp	r4, r2
    12be:	53 04       	cpc	r5, r3
    12c0:	6c f0       	brlt	.+26     	; 0x12dc <vfprintf+0x2ee>
    12c2:	4c 85       	ldd	r20, Y+12	; 0x0c
    12c4:	5d 85       	ldd	r21, Y+13	; 0x0d
    12c6:	42 15       	cp	r20, r2
    12c8:	53 05       	cpc	r21, r3
    12ca:	44 f4       	brge	.+16     	; 0x12dc <vfprintf+0x2ee>
    12cc:	ee 85       	ldd	r30, Y+14	; 0x0e
    12ce:	ff 85       	ldd	r31, Y+15	; 0x0f
    12d0:	e2 0f       	add	r30, r18
    12d2:	f3 1f       	adc	r31, r19
    12d4:	e6 0d       	add	r30, r6
    12d6:	f7 1d       	adc	r31, r7
    12d8:	81 81       	ldd	r24, Z+1	; 0x01
    12da:	01 c0       	rjmp	.+2      	; 0x12de <vfprintf+0x2f0>
    12dc:	80 e3       	ldi	r24, 0x30	; 48
    12de:	51 e0       	ldi	r21, 0x01	; 1
    12e0:	25 1a       	sub	r2, r21
    12e2:	31 08       	sbc	r3, r1
    12e4:	2f 5f       	subi	r18, 0xFF	; 255
    12e6:	3f 4f       	sbci	r19, 0xFF	; 255
    12e8:	48 89       	ldd	r20, Y+16	; 0x10
    12ea:	59 89       	ldd	r21, Y+17	; 0x11
    12ec:	24 16       	cp	r2, r20
    12ee:	35 06       	cpc	r3, r21
    12f0:	44 f0       	brlt	.+16     	; 0x1302 <vfprintf+0x314>
    12f2:	b6 01       	movw	r22, r12
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	2a 8b       	std	Y+18, r18	; 0x12
    12f8:	3b 8b       	std	Y+19, r19	; 0x13
    12fa:	a0 d6       	rcall	.+3392   	; 0x203c <fputc>
    12fc:	2a 89       	ldd	r18, Y+18	; 0x12
    12fe:	3b 89       	ldd	r19, Y+19	; 0x13
    1300:	d1 cf       	rjmp	.-94     	; 0x12a4 <vfprintf+0x2b6>
    1302:	24 14       	cp	r2, r4
    1304:	35 04       	cpc	r3, r5
    1306:	39 f4       	brne	.+14     	; 0x1316 <vfprintf+0x328>
    1308:	9a 81       	ldd	r25, Y+2	; 0x02
    130a:	96 33       	cpi	r25, 0x36	; 54
    130c:	18 f4       	brcc	.+6      	; 0x1314 <vfprintf+0x326>
    130e:	95 33       	cpi	r25, 0x35	; 53
    1310:	11 f4       	brne	.+4      	; 0x1316 <vfprintf+0x328>
    1312:	04 ff       	sbrs	r16, 4
    1314:	81 e3       	ldi	r24, 0x31	; 49
    1316:	b6 01       	movw	r22, r12
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	45 c0       	rjmp	.+138    	; 0x13a6 <vfprintf+0x3b8>
    131c:	8a 81       	ldd	r24, Y+2	; 0x02
    131e:	81 33       	cpi	r24, 0x31	; 49
    1320:	09 f0       	breq	.+2      	; 0x1324 <vfprintf+0x336>
    1322:	0f 7e       	andi	r16, 0xEF	; 239
    1324:	b6 01       	movw	r22, r12
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	89 d6       	rcall	.+3346   	; 0x203c <fputc>
    132a:	11 11       	cpse	r17, r1
    132c:	05 c0       	rjmp	.+10     	; 0x1338 <vfprintf+0x34a>
    132e:	34 fc       	sbrc	r3, 4
    1330:	16 c0       	rjmp	.+44     	; 0x135e <vfprintf+0x370>
    1332:	85 e6       	ldi	r24, 0x65	; 101
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	15 c0       	rjmp	.+42     	; 0x1362 <vfprintf+0x374>
    1338:	b6 01       	movw	r22, r12
    133a:	8e e2       	ldi	r24, 0x2E	; 46
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	7e d6       	rcall	.+3324   	; 0x203c <fputc>
    1340:	82 e0       	ldi	r24, 0x02	; 2
    1342:	ee 24       	eor	r14, r14
    1344:	e3 94       	inc	r14
    1346:	e8 0e       	add	r14, r24
    1348:	f3 01       	movw	r30, r6
    134a:	e8 0f       	add	r30, r24
    134c:	f1 1d       	adc	r31, r1
    134e:	80 81       	ld	r24, Z
    1350:	b6 01       	movw	r22, r12
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	73 d6       	rcall	.+3302   	; 0x203c <fputc>
    1356:	11 50       	subi	r17, 0x01	; 1
    1358:	8e 2d       	mov	r24, r14
    135a:	99 f7       	brne	.-26     	; 0x1342 <vfprintf+0x354>
    135c:	e8 cf       	rjmp	.-48     	; 0x132e <vfprintf+0x340>
    135e:	85 e4       	ldi	r24, 0x45	; 69
    1360:	90 e0       	ldi	r25, 0x00	; 0
    1362:	b6 01       	movw	r22, r12
    1364:	6b d6       	rcall	.+3286   	; 0x203c <fputc>
    1366:	57 fc       	sbrc	r5, 7
    1368:	05 c0       	rjmp	.+10     	; 0x1374 <vfprintf+0x386>
    136a:	41 14       	cp	r4, r1
    136c:	51 04       	cpc	r5, r1
    136e:	39 f4       	brne	.+14     	; 0x137e <vfprintf+0x390>
    1370:	04 ff       	sbrs	r16, 4
    1372:	05 c0       	rjmp	.+10     	; 0x137e <vfprintf+0x390>
    1374:	51 94       	neg	r5
    1376:	41 94       	neg	r4
    1378:	51 08       	sbc	r5, r1
    137a:	8d e2       	ldi	r24, 0x2D	; 45
    137c:	01 c0       	rjmp	.+2      	; 0x1380 <vfprintf+0x392>
    137e:	8b e2       	ldi	r24, 0x2B	; 43
    1380:	b6 01       	movw	r22, r12
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	5b d6       	rcall	.+3254   	; 0x203c <fputc>
    1386:	80 e3       	ldi	r24, 0x30	; 48
    1388:	9a e0       	ldi	r25, 0x0A	; 10
    138a:	49 16       	cp	r4, r25
    138c:	51 04       	cpc	r5, r1
    138e:	2c f0       	brlt	.+10     	; 0x139a <vfprintf+0x3ac>
    1390:	8f 5f       	subi	r24, 0xFF	; 255
    1392:	5a e0       	ldi	r21, 0x0A	; 10
    1394:	45 1a       	sub	r4, r21
    1396:	51 08       	sbc	r5, r1
    1398:	f7 cf       	rjmp	.-18     	; 0x1388 <vfprintf+0x39a>
    139a:	b6 01       	movw	r22, r12
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	4e d6       	rcall	.+3228   	; 0x203c <fputc>
    13a0:	b6 01       	movw	r22, r12
    13a2:	c2 01       	movw	r24, r4
    13a4:	c0 96       	adiw	r24, 0x30	; 48
    13a6:	4a d6       	rcall	.+3220   	; 0x203c <fputc>
    13a8:	4c c1       	rjmp	.+664    	; 0x1642 <vfprintf+0x654>
    13aa:	83 36       	cpi	r24, 0x63	; 99
    13ac:	31 f0       	breq	.+12     	; 0x13ba <vfprintf+0x3cc>
    13ae:	83 37       	cpi	r24, 0x73	; 115
    13b0:	79 f0       	breq	.+30     	; 0x13d0 <vfprintf+0x3e2>
    13b2:	83 35       	cpi	r24, 0x53	; 83
    13b4:	09 f0       	breq	.+2      	; 0x13b8 <vfprintf+0x3ca>
    13b6:	54 c0       	rjmp	.+168    	; 0x1460 <vfprintf+0x472>
    13b8:	20 c0       	rjmp	.+64     	; 0x13fa <vfprintf+0x40c>
    13ba:	52 01       	movw	r10, r4
    13bc:	e2 e0       	ldi	r30, 0x02	; 2
    13be:	ae 0e       	add	r10, r30
    13c0:	b1 1c       	adc	r11, r1
    13c2:	f2 01       	movw	r30, r4
    13c4:	80 81       	ld	r24, Z
    13c6:	89 83       	std	Y+1, r24	; 0x01
    13c8:	01 e0       	ldi	r16, 0x01	; 1
    13ca:	10 e0       	ldi	r17, 0x00	; 0
    13cc:	23 01       	movw	r4, r6
    13ce:	13 c0       	rjmp	.+38     	; 0x13f6 <vfprintf+0x408>
    13d0:	52 01       	movw	r10, r4
    13d2:	f2 e0       	ldi	r31, 0x02	; 2
    13d4:	af 0e       	add	r10, r31
    13d6:	b1 1c       	adc	r11, r1
    13d8:	f2 01       	movw	r30, r4
    13da:	40 80       	ld	r4, Z
    13dc:	51 80       	ldd	r5, Z+1	; 0x01
    13de:	26 ff       	sbrs	r18, 6
    13e0:	03 c0       	rjmp	.+6      	; 0x13e8 <vfprintf+0x3fa>
    13e2:	61 2f       	mov	r22, r17
    13e4:	70 e0       	ldi	r23, 0x00	; 0
    13e6:	02 c0       	rjmp	.+4      	; 0x13ec <vfprintf+0x3fe>
    13e8:	6f ef       	ldi	r22, 0xFF	; 255
    13ea:	7f ef       	ldi	r23, 0xFF	; 255
    13ec:	c2 01       	movw	r24, r4
    13ee:	2a 8b       	std	Y+18, r18	; 0x12
    13f0:	1a d6       	rcall	.+3124   	; 0x2026 <strnlen>
    13f2:	8c 01       	movw	r16, r24
    13f4:	2a 89       	ldd	r18, Y+18	; 0x12
    13f6:	2f 77       	andi	r18, 0x7F	; 127
    13f8:	14 c0       	rjmp	.+40     	; 0x1422 <vfprintf+0x434>
    13fa:	52 01       	movw	r10, r4
    13fc:	f2 e0       	ldi	r31, 0x02	; 2
    13fe:	af 0e       	add	r10, r31
    1400:	b1 1c       	adc	r11, r1
    1402:	f2 01       	movw	r30, r4
    1404:	40 80       	ld	r4, Z
    1406:	51 80       	ldd	r5, Z+1	; 0x01
    1408:	26 ff       	sbrs	r18, 6
    140a:	03 c0       	rjmp	.+6      	; 0x1412 <vfprintf+0x424>
    140c:	61 2f       	mov	r22, r17
    140e:	70 e0       	ldi	r23, 0x00	; 0
    1410:	02 c0       	rjmp	.+4      	; 0x1416 <vfprintf+0x428>
    1412:	6f ef       	ldi	r22, 0xFF	; 255
    1414:	7f ef       	ldi	r23, 0xFF	; 255
    1416:	c2 01       	movw	r24, r4
    1418:	2a 8b       	std	Y+18, r18	; 0x12
    141a:	f1 d5       	rcall	.+3042   	; 0x1ffe <strnlen_P>
    141c:	8c 01       	movw	r16, r24
    141e:	2a 89       	ldd	r18, Y+18	; 0x12
    1420:	20 68       	ori	r18, 0x80	; 128
    1422:	32 2e       	mov	r3, r18
    1424:	23 fd       	sbrc	r18, 3
    1426:	18 c0       	rjmp	.+48     	; 0x1458 <vfprintf+0x46a>
    1428:	8f 2d       	mov	r24, r15
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	08 17       	cp	r16, r24
    142e:	19 07       	cpc	r17, r25
    1430:	98 f4       	brcc	.+38     	; 0x1458 <vfprintf+0x46a>
    1432:	b6 01       	movw	r22, r12
    1434:	80 e2       	ldi	r24, 0x20	; 32
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	01 d6       	rcall	.+3074   	; 0x203c <fputc>
    143a:	fa 94       	dec	r15
    143c:	f5 cf       	rjmp	.-22     	; 0x1428 <vfprintf+0x43a>
    143e:	f2 01       	movw	r30, r4
    1440:	37 fc       	sbrc	r3, 7
    1442:	85 91       	lpm	r24, Z+
    1444:	37 fe       	sbrs	r3, 7
    1446:	81 91       	ld	r24, Z+
    1448:	2f 01       	movw	r4, r30
    144a:	b6 01       	movw	r22, r12
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	f6 d5       	rcall	.+3052   	; 0x203c <fputc>
    1450:	f1 10       	cpse	r15, r1
    1452:	fa 94       	dec	r15
    1454:	01 50       	subi	r16, 0x01	; 1
    1456:	11 09       	sbc	r17, r1
    1458:	01 15       	cp	r16, r1
    145a:	11 05       	cpc	r17, r1
    145c:	81 f7       	brne	.-32     	; 0x143e <vfprintf+0x450>
    145e:	f1 c0       	rjmp	.+482    	; 0x1642 <vfprintf+0x654>
    1460:	84 36       	cpi	r24, 0x64	; 100
    1462:	11 f0       	breq	.+4      	; 0x1468 <vfprintf+0x47a>
    1464:	89 36       	cpi	r24, 0x69	; 105
    1466:	51 f5       	brne	.+84     	; 0x14bc <vfprintf+0x4ce>
    1468:	52 01       	movw	r10, r4
    146a:	27 ff       	sbrs	r18, 7
    146c:	09 c0       	rjmp	.+18     	; 0x1480 <vfprintf+0x492>
    146e:	f4 e0       	ldi	r31, 0x04	; 4
    1470:	af 0e       	add	r10, r31
    1472:	b1 1c       	adc	r11, r1
    1474:	f2 01       	movw	r30, r4
    1476:	60 81       	ld	r22, Z
    1478:	71 81       	ldd	r23, Z+1	; 0x01
    147a:	82 81       	ldd	r24, Z+2	; 0x02
    147c:	93 81       	ldd	r25, Z+3	; 0x03
    147e:	0a c0       	rjmp	.+20     	; 0x1494 <vfprintf+0x4a6>
    1480:	f2 e0       	ldi	r31, 0x02	; 2
    1482:	af 0e       	add	r10, r31
    1484:	b1 1c       	adc	r11, r1
    1486:	f2 01       	movw	r30, r4
    1488:	60 81       	ld	r22, Z
    148a:	71 81       	ldd	r23, Z+1	; 0x01
    148c:	07 2e       	mov	r0, r23
    148e:	00 0c       	add	r0, r0
    1490:	88 0b       	sbc	r24, r24
    1492:	99 0b       	sbc	r25, r25
    1494:	2f 76       	andi	r18, 0x6F	; 111
    1496:	32 2e       	mov	r3, r18
    1498:	97 ff       	sbrs	r25, 7
    149a:	09 c0       	rjmp	.+18     	; 0x14ae <vfprintf+0x4c0>
    149c:	90 95       	com	r25
    149e:	80 95       	com	r24
    14a0:	70 95       	com	r23
    14a2:	61 95       	neg	r22
    14a4:	7f 4f       	sbci	r23, 0xFF	; 255
    14a6:	8f 4f       	sbci	r24, 0xFF	; 255
    14a8:	9f 4f       	sbci	r25, 0xFF	; 255
    14aa:	20 68       	ori	r18, 0x80	; 128
    14ac:	32 2e       	mov	r3, r18
    14ae:	2a e0       	ldi	r18, 0x0A	; 10
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	a3 01       	movw	r20, r6
    14b4:	1c d6       	rcall	.+3128   	; 0x20ee <__ultoa_invert>
    14b6:	e8 2e       	mov	r14, r24
    14b8:	e6 18       	sub	r14, r6
    14ba:	3e c0       	rjmp	.+124    	; 0x1538 <vfprintf+0x54a>
    14bc:	02 2f       	mov	r16, r18
    14be:	85 37       	cpi	r24, 0x75	; 117
    14c0:	21 f4       	brne	.+8      	; 0x14ca <vfprintf+0x4dc>
    14c2:	0f 7e       	andi	r16, 0xEF	; 239
    14c4:	2a e0       	ldi	r18, 0x0A	; 10
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	1d c0       	rjmp	.+58     	; 0x1504 <vfprintf+0x516>
    14ca:	09 7f       	andi	r16, 0xF9	; 249
    14cc:	8f 36       	cpi	r24, 0x6F	; 111
    14ce:	91 f0       	breq	.+36     	; 0x14f4 <vfprintf+0x506>
    14d0:	18 f4       	brcc	.+6      	; 0x14d8 <vfprintf+0x4ea>
    14d2:	88 35       	cpi	r24, 0x58	; 88
    14d4:	59 f0       	breq	.+22     	; 0x14ec <vfprintf+0x4fe>
    14d6:	be c0       	rjmp	.+380    	; 0x1654 <vfprintf+0x666>
    14d8:	80 37       	cpi	r24, 0x70	; 112
    14da:	19 f0       	breq	.+6      	; 0x14e2 <vfprintf+0x4f4>
    14dc:	88 37       	cpi	r24, 0x78	; 120
    14de:	11 f0       	breq	.+4      	; 0x14e4 <vfprintf+0x4f6>
    14e0:	b9 c0       	rjmp	.+370    	; 0x1654 <vfprintf+0x666>
    14e2:	00 61       	ori	r16, 0x10	; 16
    14e4:	04 ff       	sbrs	r16, 4
    14e6:	09 c0       	rjmp	.+18     	; 0x14fa <vfprintf+0x50c>
    14e8:	04 60       	ori	r16, 0x04	; 4
    14ea:	07 c0       	rjmp	.+14     	; 0x14fa <vfprintf+0x50c>
    14ec:	24 ff       	sbrs	r18, 4
    14ee:	08 c0       	rjmp	.+16     	; 0x1500 <vfprintf+0x512>
    14f0:	06 60       	ori	r16, 0x06	; 6
    14f2:	06 c0       	rjmp	.+12     	; 0x1500 <vfprintf+0x512>
    14f4:	28 e0       	ldi	r18, 0x08	; 8
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	05 c0       	rjmp	.+10     	; 0x1504 <vfprintf+0x516>
    14fa:	20 e1       	ldi	r18, 0x10	; 16
    14fc:	30 e0       	ldi	r19, 0x00	; 0
    14fe:	02 c0       	rjmp	.+4      	; 0x1504 <vfprintf+0x516>
    1500:	20 e1       	ldi	r18, 0x10	; 16
    1502:	32 e0       	ldi	r19, 0x02	; 2
    1504:	52 01       	movw	r10, r4
    1506:	07 ff       	sbrs	r16, 7
    1508:	09 c0       	rjmp	.+18     	; 0x151c <vfprintf+0x52e>
    150a:	f4 e0       	ldi	r31, 0x04	; 4
    150c:	af 0e       	add	r10, r31
    150e:	b1 1c       	adc	r11, r1
    1510:	f2 01       	movw	r30, r4
    1512:	60 81       	ld	r22, Z
    1514:	71 81       	ldd	r23, Z+1	; 0x01
    1516:	82 81       	ldd	r24, Z+2	; 0x02
    1518:	93 81       	ldd	r25, Z+3	; 0x03
    151a:	08 c0       	rjmp	.+16     	; 0x152c <vfprintf+0x53e>
    151c:	f2 e0       	ldi	r31, 0x02	; 2
    151e:	af 0e       	add	r10, r31
    1520:	b1 1c       	adc	r11, r1
    1522:	f2 01       	movw	r30, r4
    1524:	60 81       	ld	r22, Z
    1526:	71 81       	ldd	r23, Z+1	; 0x01
    1528:	80 e0       	ldi	r24, 0x00	; 0
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	a3 01       	movw	r20, r6
    152e:	df d5       	rcall	.+3006   	; 0x20ee <__ultoa_invert>
    1530:	e8 2e       	mov	r14, r24
    1532:	e6 18       	sub	r14, r6
    1534:	0f 77       	andi	r16, 0x7F	; 127
    1536:	30 2e       	mov	r3, r16
    1538:	36 fe       	sbrs	r3, 6
    153a:	0b c0       	rjmp	.+22     	; 0x1552 <vfprintf+0x564>
    153c:	33 2d       	mov	r19, r3
    153e:	3e 7f       	andi	r19, 0xFE	; 254
    1540:	e1 16       	cp	r14, r17
    1542:	50 f4       	brcc	.+20     	; 0x1558 <vfprintf+0x56a>
    1544:	34 fe       	sbrs	r3, 4
    1546:	0a c0       	rjmp	.+20     	; 0x155c <vfprintf+0x56e>
    1548:	32 fc       	sbrc	r3, 2
    154a:	08 c0       	rjmp	.+16     	; 0x155c <vfprintf+0x56e>
    154c:	33 2d       	mov	r19, r3
    154e:	3e 7e       	andi	r19, 0xEE	; 238
    1550:	05 c0       	rjmp	.+10     	; 0x155c <vfprintf+0x56e>
    1552:	0e 2d       	mov	r16, r14
    1554:	33 2d       	mov	r19, r3
    1556:	03 c0       	rjmp	.+6      	; 0x155e <vfprintf+0x570>
    1558:	0e 2d       	mov	r16, r14
    155a:	01 c0       	rjmp	.+2      	; 0x155e <vfprintf+0x570>
    155c:	01 2f       	mov	r16, r17
    155e:	34 ff       	sbrs	r19, 4
    1560:	0c c0       	rjmp	.+24     	; 0x157a <vfprintf+0x58c>
    1562:	fe 01       	movw	r30, r28
    1564:	ee 0d       	add	r30, r14
    1566:	f1 1d       	adc	r31, r1
    1568:	80 81       	ld	r24, Z
    156a:	80 33       	cpi	r24, 0x30	; 48
    156c:	11 f4       	brne	.+4      	; 0x1572 <vfprintf+0x584>
    156e:	39 7e       	andi	r19, 0xE9	; 233
    1570:	08 c0       	rjmp	.+16     	; 0x1582 <vfprintf+0x594>
    1572:	32 ff       	sbrs	r19, 2
    1574:	05 c0       	rjmp	.+10     	; 0x1580 <vfprintf+0x592>
    1576:	0e 5f       	subi	r16, 0xFE	; 254
    1578:	04 c0       	rjmp	.+8      	; 0x1582 <vfprintf+0x594>
    157a:	83 2f       	mov	r24, r19
    157c:	86 78       	andi	r24, 0x86	; 134
    157e:	09 f0       	breq	.+2      	; 0x1582 <vfprintf+0x594>
    1580:	0f 5f       	subi	r16, 0xFF	; 255
    1582:	33 fd       	sbrc	r19, 3
    1584:	12 c0       	rjmp	.+36     	; 0x15aa <vfprintf+0x5bc>
    1586:	30 ff       	sbrs	r19, 0
    1588:	06 c0       	rjmp	.+12     	; 0x1596 <vfprintf+0x5a8>
    158a:	1e 2d       	mov	r17, r14
    158c:	0f 15       	cp	r16, r15
    158e:	18 f4       	brcc	.+6      	; 0x1596 <vfprintf+0x5a8>
    1590:	1f 0d       	add	r17, r15
    1592:	10 1b       	sub	r17, r16
    1594:	0f 2d       	mov	r16, r15
    1596:	0f 15       	cp	r16, r15
    1598:	60 f4       	brcc	.+24     	; 0x15b2 <vfprintf+0x5c4>
    159a:	b6 01       	movw	r22, r12
    159c:	80 e2       	ldi	r24, 0x20	; 32
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	3b 8b       	std	Y+19, r19	; 0x13
    15a2:	4c d5       	rcall	.+2712   	; 0x203c <fputc>
    15a4:	0f 5f       	subi	r16, 0xFF	; 255
    15a6:	3b 89       	ldd	r19, Y+19	; 0x13
    15a8:	f6 cf       	rjmp	.-20     	; 0x1596 <vfprintf+0x5a8>
    15aa:	0f 15       	cp	r16, r15
    15ac:	10 f4       	brcc	.+4      	; 0x15b2 <vfprintf+0x5c4>
    15ae:	f0 1a       	sub	r15, r16
    15b0:	01 c0       	rjmp	.+2      	; 0x15b4 <vfprintf+0x5c6>
    15b2:	f1 2c       	mov	r15, r1
    15b4:	34 ff       	sbrs	r19, 4
    15b6:	11 c0       	rjmp	.+34     	; 0x15da <vfprintf+0x5ec>
    15b8:	b6 01       	movw	r22, r12
    15ba:	80 e3       	ldi	r24, 0x30	; 48
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	3b 8b       	std	Y+19, r19	; 0x13
    15c0:	3d d5       	rcall	.+2682   	; 0x203c <fputc>
    15c2:	3b 89       	ldd	r19, Y+19	; 0x13
    15c4:	32 ff       	sbrs	r19, 2
    15c6:	16 c0       	rjmp	.+44     	; 0x15f4 <vfprintf+0x606>
    15c8:	31 fd       	sbrc	r19, 1
    15ca:	03 c0       	rjmp	.+6      	; 0x15d2 <vfprintf+0x5e4>
    15cc:	88 e7       	ldi	r24, 0x78	; 120
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	02 c0       	rjmp	.+4      	; 0x15d6 <vfprintf+0x5e8>
    15d2:	88 e5       	ldi	r24, 0x58	; 88
    15d4:	90 e0       	ldi	r25, 0x00	; 0
    15d6:	b6 01       	movw	r22, r12
    15d8:	0c c0       	rjmp	.+24     	; 0x15f2 <vfprintf+0x604>
    15da:	83 2f       	mov	r24, r19
    15dc:	86 78       	andi	r24, 0x86	; 134
    15de:	51 f0       	breq	.+20     	; 0x15f4 <vfprintf+0x606>
    15e0:	31 ff       	sbrs	r19, 1
    15e2:	02 c0       	rjmp	.+4      	; 0x15e8 <vfprintf+0x5fa>
    15e4:	8b e2       	ldi	r24, 0x2B	; 43
    15e6:	01 c0       	rjmp	.+2      	; 0x15ea <vfprintf+0x5fc>
    15e8:	80 e2       	ldi	r24, 0x20	; 32
    15ea:	37 fd       	sbrc	r19, 7
    15ec:	8d e2       	ldi	r24, 0x2D	; 45
    15ee:	b6 01       	movw	r22, r12
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	24 d5       	rcall	.+2632   	; 0x203c <fputc>
    15f4:	e1 16       	cp	r14, r17
    15f6:	30 f4       	brcc	.+12     	; 0x1604 <vfprintf+0x616>
    15f8:	b6 01       	movw	r22, r12
    15fa:	80 e3       	ldi	r24, 0x30	; 48
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	1e d5       	rcall	.+2620   	; 0x203c <fputc>
    1600:	11 50       	subi	r17, 0x01	; 1
    1602:	f8 cf       	rjmp	.-16     	; 0x15f4 <vfprintf+0x606>
    1604:	ea 94       	dec	r14
    1606:	f3 01       	movw	r30, r6
    1608:	ee 0d       	add	r30, r14
    160a:	f1 1d       	adc	r31, r1
    160c:	80 81       	ld	r24, Z
    160e:	b6 01       	movw	r22, r12
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	14 d5       	rcall	.+2600   	; 0x203c <fputc>
    1614:	e1 10       	cpse	r14, r1
    1616:	f6 cf       	rjmp	.-20     	; 0x1604 <vfprintf+0x616>
    1618:	14 c0       	rjmp	.+40     	; 0x1642 <vfprintf+0x654>
    161a:	f4 e0       	ldi	r31, 0x04	; 4
    161c:	ff 15       	cp	r31, r15
    161e:	48 f5       	brcc	.+82     	; 0x1672 <vfprintf+0x684>
    1620:	84 e0       	ldi	r24, 0x04	; 4
    1622:	f8 1a       	sub	r15, r24
    1624:	33 fe       	sbrs	r3, 3
    1626:	1d c0       	rjmp	.+58     	; 0x1662 <vfprintf+0x674>
    1628:	21 10       	cpse	r2, r1
    162a:	24 c0       	rjmp	.+72     	; 0x1674 <vfprintf+0x686>
    162c:	03 ff       	sbrs	r16, 3
    162e:	27 c0       	rjmp	.+78     	; 0x167e <vfprintf+0x690>
    1630:	0e ef       	ldi	r16, 0xFE	; 254
    1632:	10 e0       	ldi	r17, 0x00	; 0
    1634:	f3 2d       	mov	r31, r3
    1636:	f0 71       	andi	r31, 0x10	; 16
    1638:	3f 2e       	mov	r3, r31
    163a:	f8 01       	movw	r30, r16
    163c:	84 91       	lpm	r24, Z
    163e:	81 11       	cpse	r24, r1
    1640:	21 c0       	rjmp	.+66     	; 0x1684 <vfprintf+0x696>
    1642:	ff 20       	and	r15, r15
    1644:	09 f4       	brne	.+2      	; 0x1648 <vfprintf+0x65a>
    1646:	fd cc       	rjmp	.-1542   	; 0x1042 <vfprintf+0x54>
    1648:	b6 01       	movw	r22, r12
    164a:	80 e2       	ldi	r24, 0x20	; 32
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	f6 d4       	rcall	.+2540   	; 0x203c <fputc>
    1650:	fa 94       	dec	r15
    1652:	f7 cf       	rjmp	.-18     	; 0x1642 <vfprintf+0x654>
    1654:	f6 01       	movw	r30, r12
    1656:	86 81       	ldd	r24, Z+6	; 0x06
    1658:	97 81       	ldd	r25, Z+7	; 0x07
    165a:	23 c0       	rjmp	.+70     	; 0x16a2 <vfprintf+0x6b4>
    165c:	8f ef       	ldi	r24, 0xFF	; 255
    165e:	9f ef       	ldi	r25, 0xFF	; 255
    1660:	20 c0       	rjmp	.+64     	; 0x16a2 <vfprintf+0x6b4>
    1662:	b6 01       	movw	r22, r12
    1664:	80 e2       	ldi	r24, 0x20	; 32
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	e9 d4       	rcall	.+2514   	; 0x203c <fputc>
    166a:	fa 94       	dec	r15
    166c:	f1 10       	cpse	r15, r1
    166e:	f9 cf       	rjmp	.-14     	; 0x1662 <vfprintf+0x674>
    1670:	db cf       	rjmp	.-74     	; 0x1628 <vfprintf+0x63a>
    1672:	f1 2c       	mov	r15, r1
    1674:	b6 01       	movw	r22, r12
    1676:	82 2d       	mov	r24, r2
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	e0 d4       	rcall	.+2496   	; 0x203c <fputc>
    167c:	d7 cf       	rjmp	.-82     	; 0x162c <vfprintf+0x63e>
    167e:	02 e0       	ldi	r16, 0x02	; 2
    1680:	11 e0       	ldi	r17, 0x01	; 1
    1682:	d8 cf       	rjmp	.-80     	; 0x1634 <vfprintf+0x646>
    1684:	31 10       	cpse	r3, r1
    1686:	80 52       	subi	r24, 0x20	; 32
    1688:	b6 01       	movw	r22, r12
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	d7 d4       	rcall	.+2478   	; 0x203c <fputc>
    168e:	0f 5f       	subi	r16, 0xFF	; 255
    1690:	1f 4f       	sbci	r17, 0xFF	; 255
    1692:	d3 cf       	rjmp	.-90     	; 0x163a <vfprintf+0x64c>
    1694:	23 e0       	ldi	r18, 0x03	; 3
    1696:	2f 15       	cp	r18, r15
    1698:	10 f4       	brcc	.+4      	; 0x169e <vfprintf+0x6b0>
    169a:	83 e0       	ldi	r24, 0x03	; 3
    169c:	c2 cf       	rjmp	.-124    	; 0x1622 <vfprintf+0x634>
    169e:	f1 2c       	mov	r15, r1
    16a0:	c5 cf       	rjmp	.-118    	; 0x162c <vfprintf+0x63e>
    16a2:	63 96       	adiw	r28, 0x13	; 19
    16a4:	e2 e1       	ldi	r30, 0x12	; 18
    16a6:	b5 c3       	rjmp	.+1898   	; 0x1e12 <__epilogue_restores__>

000016a8 <__subsf3>:
    16a8:	50 58       	subi	r21, 0x80	; 128

000016aa <__addsf3>:
    16aa:	bb 27       	eor	r27, r27
    16ac:	aa 27       	eor	r26, r26
    16ae:	0e d0       	rcall	.+28     	; 0x16cc <__addsf3x>
    16b0:	75 c1       	rjmp	.+746    	; 0x199c <__fp_round>
    16b2:	66 d1       	rcall	.+716    	; 0x1980 <__fp_pscA>
    16b4:	30 f0       	brcs	.+12     	; 0x16c2 <__addsf3+0x18>
    16b6:	6b d1       	rcall	.+726    	; 0x198e <__fp_pscB>
    16b8:	20 f0       	brcs	.+8      	; 0x16c2 <__addsf3+0x18>
    16ba:	31 f4       	brne	.+12     	; 0x16c8 <__addsf3+0x1e>
    16bc:	9f 3f       	cpi	r25, 0xFF	; 255
    16be:	11 f4       	brne	.+4      	; 0x16c4 <__addsf3+0x1a>
    16c0:	1e f4       	brtc	.+6      	; 0x16c8 <__addsf3+0x1e>
    16c2:	5b c1       	rjmp	.+694    	; 0x197a <__fp_nan>
    16c4:	0e f4       	brtc	.+2      	; 0x16c8 <__addsf3+0x1e>
    16c6:	e0 95       	com	r30
    16c8:	e7 fb       	bst	r30, 7
    16ca:	51 c1       	rjmp	.+674    	; 0x196e <__fp_inf>

000016cc <__addsf3x>:
    16cc:	e9 2f       	mov	r30, r25
    16ce:	77 d1       	rcall	.+750    	; 0x19be <__fp_split3>
    16d0:	80 f3       	brcs	.-32     	; 0x16b2 <__addsf3+0x8>
    16d2:	ba 17       	cp	r27, r26
    16d4:	62 07       	cpc	r22, r18
    16d6:	73 07       	cpc	r23, r19
    16d8:	84 07       	cpc	r24, r20
    16da:	95 07       	cpc	r25, r21
    16dc:	18 f0       	brcs	.+6      	; 0x16e4 <__addsf3x+0x18>
    16de:	71 f4       	brne	.+28     	; 0x16fc <__addsf3x+0x30>
    16e0:	9e f5       	brtc	.+102    	; 0x1748 <__addsf3x+0x7c>
    16e2:	8f c1       	rjmp	.+798    	; 0x1a02 <__fp_zero>
    16e4:	0e f4       	brtc	.+2      	; 0x16e8 <__addsf3x+0x1c>
    16e6:	e0 95       	com	r30
    16e8:	0b 2e       	mov	r0, r27
    16ea:	ba 2f       	mov	r27, r26
    16ec:	a0 2d       	mov	r26, r0
    16ee:	0b 01       	movw	r0, r22
    16f0:	b9 01       	movw	r22, r18
    16f2:	90 01       	movw	r18, r0
    16f4:	0c 01       	movw	r0, r24
    16f6:	ca 01       	movw	r24, r20
    16f8:	a0 01       	movw	r20, r0
    16fa:	11 24       	eor	r1, r1
    16fc:	ff 27       	eor	r31, r31
    16fe:	59 1b       	sub	r21, r25
    1700:	99 f0       	breq	.+38     	; 0x1728 <__addsf3x+0x5c>
    1702:	59 3f       	cpi	r21, 0xF9	; 249
    1704:	50 f4       	brcc	.+20     	; 0x171a <__addsf3x+0x4e>
    1706:	50 3e       	cpi	r21, 0xE0	; 224
    1708:	68 f1       	brcs	.+90     	; 0x1764 <__addsf3x+0x98>
    170a:	1a 16       	cp	r1, r26
    170c:	f0 40       	sbci	r31, 0x00	; 0
    170e:	a2 2f       	mov	r26, r18
    1710:	23 2f       	mov	r18, r19
    1712:	34 2f       	mov	r19, r20
    1714:	44 27       	eor	r20, r20
    1716:	58 5f       	subi	r21, 0xF8	; 248
    1718:	f3 cf       	rjmp	.-26     	; 0x1700 <__addsf3x+0x34>
    171a:	46 95       	lsr	r20
    171c:	37 95       	ror	r19
    171e:	27 95       	ror	r18
    1720:	a7 95       	ror	r26
    1722:	f0 40       	sbci	r31, 0x00	; 0
    1724:	53 95       	inc	r21
    1726:	c9 f7       	brne	.-14     	; 0x171a <__addsf3x+0x4e>
    1728:	7e f4       	brtc	.+30     	; 0x1748 <__addsf3x+0x7c>
    172a:	1f 16       	cp	r1, r31
    172c:	ba 0b       	sbc	r27, r26
    172e:	62 0b       	sbc	r22, r18
    1730:	73 0b       	sbc	r23, r19
    1732:	84 0b       	sbc	r24, r20
    1734:	ba f0       	brmi	.+46     	; 0x1764 <__addsf3x+0x98>
    1736:	91 50       	subi	r25, 0x01	; 1
    1738:	a1 f0       	breq	.+40     	; 0x1762 <__addsf3x+0x96>
    173a:	ff 0f       	add	r31, r31
    173c:	bb 1f       	adc	r27, r27
    173e:	66 1f       	adc	r22, r22
    1740:	77 1f       	adc	r23, r23
    1742:	88 1f       	adc	r24, r24
    1744:	c2 f7       	brpl	.-16     	; 0x1736 <__addsf3x+0x6a>
    1746:	0e c0       	rjmp	.+28     	; 0x1764 <__addsf3x+0x98>
    1748:	ba 0f       	add	r27, r26
    174a:	62 1f       	adc	r22, r18
    174c:	73 1f       	adc	r23, r19
    174e:	84 1f       	adc	r24, r20
    1750:	48 f4       	brcc	.+18     	; 0x1764 <__addsf3x+0x98>
    1752:	87 95       	ror	r24
    1754:	77 95       	ror	r23
    1756:	67 95       	ror	r22
    1758:	b7 95       	ror	r27
    175a:	f7 95       	ror	r31
    175c:	9e 3f       	cpi	r25, 0xFE	; 254
    175e:	08 f0       	brcs	.+2      	; 0x1762 <__addsf3x+0x96>
    1760:	b3 cf       	rjmp	.-154    	; 0x16c8 <__addsf3+0x1e>
    1762:	93 95       	inc	r25
    1764:	88 0f       	add	r24, r24
    1766:	08 f0       	brcs	.+2      	; 0x176a <__addsf3x+0x9e>
    1768:	99 27       	eor	r25, r25
    176a:	ee 0f       	add	r30, r30
    176c:	97 95       	ror	r25
    176e:	87 95       	ror	r24
    1770:	08 95       	ret

00001772 <__cmpsf2>:
    1772:	d9 d0       	rcall	.+434    	; 0x1926 <__fp_cmp>
    1774:	08 f4       	brcc	.+2      	; 0x1778 <__cmpsf2+0x6>
    1776:	81 e0       	ldi	r24, 0x01	; 1
    1778:	08 95       	ret

0000177a <__divsf3>:
    177a:	0c d0       	rcall	.+24     	; 0x1794 <__divsf3x>
    177c:	0f c1       	rjmp	.+542    	; 0x199c <__fp_round>
    177e:	07 d1       	rcall	.+526    	; 0x198e <__fp_pscB>
    1780:	40 f0       	brcs	.+16     	; 0x1792 <__divsf3+0x18>
    1782:	fe d0       	rcall	.+508    	; 0x1980 <__fp_pscA>
    1784:	30 f0       	brcs	.+12     	; 0x1792 <__divsf3+0x18>
    1786:	21 f4       	brne	.+8      	; 0x1790 <__divsf3+0x16>
    1788:	5f 3f       	cpi	r21, 0xFF	; 255
    178a:	19 f0       	breq	.+6      	; 0x1792 <__divsf3+0x18>
    178c:	f0 c0       	rjmp	.+480    	; 0x196e <__fp_inf>
    178e:	51 11       	cpse	r21, r1
    1790:	39 c1       	rjmp	.+626    	; 0x1a04 <__fp_szero>
    1792:	f3 c0       	rjmp	.+486    	; 0x197a <__fp_nan>

00001794 <__divsf3x>:
    1794:	14 d1       	rcall	.+552    	; 0x19be <__fp_split3>
    1796:	98 f3       	brcs	.-26     	; 0x177e <__divsf3+0x4>

00001798 <__divsf3_pse>:
    1798:	99 23       	and	r25, r25
    179a:	c9 f3       	breq	.-14     	; 0x178e <__divsf3+0x14>
    179c:	55 23       	and	r21, r21
    179e:	b1 f3       	breq	.-20     	; 0x178c <__divsf3+0x12>
    17a0:	95 1b       	sub	r25, r21
    17a2:	55 0b       	sbc	r21, r21
    17a4:	bb 27       	eor	r27, r27
    17a6:	aa 27       	eor	r26, r26
    17a8:	62 17       	cp	r22, r18
    17aa:	73 07       	cpc	r23, r19
    17ac:	84 07       	cpc	r24, r20
    17ae:	38 f0       	brcs	.+14     	; 0x17be <__divsf3_pse+0x26>
    17b0:	9f 5f       	subi	r25, 0xFF	; 255
    17b2:	5f 4f       	sbci	r21, 0xFF	; 255
    17b4:	22 0f       	add	r18, r18
    17b6:	33 1f       	adc	r19, r19
    17b8:	44 1f       	adc	r20, r20
    17ba:	aa 1f       	adc	r26, r26
    17bc:	a9 f3       	breq	.-22     	; 0x17a8 <__divsf3_pse+0x10>
    17be:	33 d0       	rcall	.+102    	; 0x1826 <__divsf3_pse+0x8e>
    17c0:	0e 2e       	mov	r0, r30
    17c2:	3a f0       	brmi	.+14     	; 0x17d2 <__divsf3_pse+0x3a>
    17c4:	e0 e8       	ldi	r30, 0x80	; 128
    17c6:	30 d0       	rcall	.+96     	; 0x1828 <__divsf3_pse+0x90>
    17c8:	91 50       	subi	r25, 0x01	; 1
    17ca:	50 40       	sbci	r21, 0x00	; 0
    17cc:	e6 95       	lsr	r30
    17ce:	00 1c       	adc	r0, r0
    17d0:	ca f7       	brpl	.-14     	; 0x17c4 <__divsf3_pse+0x2c>
    17d2:	29 d0       	rcall	.+82     	; 0x1826 <__divsf3_pse+0x8e>
    17d4:	fe 2f       	mov	r31, r30
    17d6:	27 d0       	rcall	.+78     	; 0x1826 <__divsf3_pse+0x8e>
    17d8:	66 0f       	add	r22, r22
    17da:	77 1f       	adc	r23, r23
    17dc:	88 1f       	adc	r24, r24
    17de:	bb 1f       	adc	r27, r27
    17e0:	26 17       	cp	r18, r22
    17e2:	37 07       	cpc	r19, r23
    17e4:	48 07       	cpc	r20, r24
    17e6:	ab 07       	cpc	r26, r27
    17e8:	b0 e8       	ldi	r27, 0x80	; 128
    17ea:	09 f0       	breq	.+2      	; 0x17ee <__divsf3_pse+0x56>
    17ec:	bb 0b       	sbc	r27, r27
    17ee:	80 2d       	mov	r24, r0
    17f0:	bf 01       	movw	r22, r30
    17f2:	ff 27       	eor	r31, r31
    17f4:	93 58       	subi	r25, 0x83	; 131
    17f6:	5f 4f       	sbci	r21, 0xFF	; 255
    17f8:	2a f0       	brmi	.+10     	; 0x1804 <__divsf3_pse+0x6c>
    17fa:	9e 3f       	cpi	r25, 0xFE	; 254
    17fc:	51 05       	cpc	r21, r1
    17fe:	68 f0       	brcs	.+26     	; 0x181a <__divsf3_pse+0x82>
    1800:	b6 c0       	rjmp	.+364    	; 0x196e <__fp_inf>
    1802:	00 c1       	rjmp	.+512    	; 0x1a04 <__fp_szero>
    1804:	5f 3f       	cpi	r21, 0xFF	; 255
    1806:	ec f3       	brlt	.-6      	; 0x1802 <__divsf3_pse+0x6a>
    1808:	98 3e       	cpi	r25, 0xE8	; 232
    180a:	dc f3       	brlt	.-10     	; 0x1802 <__divsf3_pse+0x6a>
    180c:	86 95       	lsr	r24
    180e:	77 95       	ror	r23
    1810:	67 95       	ror	r22
    1812:	b7 95       	ror	r27
    1814:	f7 95       	ror	r31
    1816:	9f 5f       	subi	r25, 0xFF	; 255
    1818:	c9 f7       	brne	.-14     	; 0x180c <__divsf3_pse+0x74>
    181a:	88 0f       	add	r24, r24
    181c:	91 1d       	adc	r25, r1
    181e:	96 95       	lsr	r25
    1820:	87 95       	ror	r24
    1822:	97 f9       	bld	r25, 7
    1824:	08 95       	ret
    1826:	e1 e0       	ldi	r30, 0x01	; 1
    1828:	66 0f       	add	r22, r22
    182a:	77 1f       	adc	r23, r23
    182c:	88 1f       	adc	r24, r24
    182e:	bb 1f       	adc	r27, r27
    1830:	62 17       	cp	r22, r18
    1832:	73 07       	cpc	r23, r19
    1834:	84 07       	cpc	r24, r20
    1836:	ba 07       	cpc	r27, r26
    1838:	20 f0       	brcs	.+8      	; 0x1842 <__divsf3_pse+0xaa>
    183a:	62 1b       	sub	r22, r18
    183c:	73 0b       	sbc	r23, r19
    183e:	84 0b       	sbc	r24, r20
    1840:	ba 0b       	sbc	r27, r26
    1842:	ee 1f       	adc	r30, r30
    1844:	88 f7       	brcc	.-30     	; 0x1828 <__divsf3_pse+0x90>
    1846:	e0 95       	com	r30
    1848:	08 95       	ret

0000184a <__fixsfsi>:
    184a:	04 d0       	rcall	.+8      	; 0x1854 <__fixunssfsi>
    184c:	68 94       	set
    184e:	b1 11       	cpse	r27, r1
    1850:	d9 c0       	rjmp	.+434    	; 0x1a04 <__fp_szero>
    1852:	08 95       	ret

00001854 <__fixunssfsi>:
    1854:	bc d0       	rcall	.+376    	; 0x19ce <__fp_splitA>
    1856:	88 f0       	brcs	.+34     	; 0x187a <__fixunssfsi+0x26>
    1858:	9f 57       	subi	r25, 0x7F	; 127
    185a:	90 f0       	brcs	.+36     	; 0x1880 <__fixunssfsi+0x2c>
    185c:	b9 2f       	mov	r27, r25
    185e:	99 27       	eor	r25, r25
    1860:	b7 51       	subi	r27, 0x17	; 23
    1862:	a0 f0       	brcs	.+40     	; 0x188c <__fixunssfsi+0x38>
    1864:	d1 f0       	breq	.+52     	; 0x189a <__fixunssfsi+0x46>
    1866:	66 0f       	add	r22, r22
    1868:	77 1f       	adc	r23, r23
    186a:	88 1f       	adc	r24, r24
    186c:	99 1f       	adc	r25, r25
    186e:	1a f0       	brmi	.+6      	; 0x1876 <__fixunssfsi+0x22>
    1870:	ba 95       	dec	r27
    1872:	c9 f7       	brne	.-14     	; 0x1866 <__fixunssfsi+0x12>
    1874:	12 c0       	rjmp	.+36     	; 0x189a <__fixunssfsi+0x46>
    1876:	b1 30       	cpi	r27, 0x01	; 1
    1878:	81 f0       	breq	.+32     	; 0x189a <__fixunssfsi+0x46>
    187a:	c3 d0       	rcall	.+390    	; 0x1a02 <__fp_zero>
    187c:	b1 e0       	ldi	r27, 0x01	; 1
    187e:	08 95       	ret
    1880:	c0 c0       	rjmp	.+384    	; 0x1a02 <__fp_zero>
    1882:	67 2f       	mov	r22, r23
    1884:	78 2f       	mov	r23, r24
    1886:	88 27       	eor	r24, r24
    1888:	b8 5f       	subi	r27, 0xF8	; 248
    188a:	39 f0       	breq	.+14     	; 0x189a <__fixunssfsi+0x46>
    188c:	b9 3f       	cpi	r27, 0xF9	; 249
    188e:	cc f3       	brlt	.-14     	; 0x1882 <__fixunssfsi+0x2e>
    1890:	86 95       	lsr	r24
    1892:	77 95       	ror	r23
    1894:	67 95       	ror	r22
    1896:	b3 95       	inc	r27
    1898:	d9 f7       	brne	.-10     	; 0x1890 <__fixunssfsi+0x3c>
    189a:	3e f4       	brtc	.+14     	; 0x18aa <__fixunssfsi+0x56>
    189c:	90 95       	com	r25
    189e:	80 95       	com	r24
    18a0:	70 95       	com	r23
    18a2:	61 95       	neg	r22
    18a4:	7f 4f       	sbci	r23, 0xFF	; 255
    18a6:	8f 4f       	sbci	r24, 0xFF	; 255
    18a8:	9f 4f       	sbci	r25, 0xFF	; 255
    18aa:	08 95       	ret

000018ac <__floatunsisf>:
    18ac:	e8 94       	clt
    18ae:	09 c0       	rjmp	.+18     	; 0x18c2 <__floatsisf+0x12>

000018b0 <__floatsisf>:
    18b0:	97 fb       	bst	r25, 7
    18b2:	3e f4       	brtc	.+14     	; 0x18c2 <__floatsisf+0x12>
    18b4:	90 95       	com	r25
    18b6:	80 95       	com	r24
    18b8:	70 95       	com	r23
    18ba:	61 95       	neg	r22
    18bc:	7f 4f       	sbci	r23, 0xFF	; 255
    18be:	8f 4f       	sbci	r24, 0xFF	; 255
    18c0:	9f 4f       	sbci	r25, 0xFF	; 255
    18c2:	99 23       	and	r25, r25
    18c4:	a9 f0       	breq	.+42     	; 0x18f0 <__floatsisf+0x40>
    18c6:	f9 2f       	mov	r31, r25
    18c8:	96 e9       	ldi	r25, 0x96	; 150
    18ca:	bb 27       	eor	r27, r27
    18cc:	93 95       	inc	r25
    18ce:	f6 95       	lsr	r31
    18d0:	87 95       	ror	r24
    18d2:	77 95       	ror	r23
    18d4:	67 95       	ror	r22
    18d6:	b7 95       	ror	r27
    18d8:	f1 11       	cpse	r31, r1
    18da:	f8 cf       	rjmp	.-16     	; 0x18cc <__floatsisf+0x1c>
    18dc:	fa f4       	brpl	.+62     	; 0x191c <__floatsisf+0x6c>
    18de:	bb 0f       	add	r27, r27
    18e0:	11 f4       	brne	.+4      	; 0x18e6 <__floatsisf+0x36>
    18e2:	60 ff       	sbrs	r22, 0
    18e4:	1b c0       	rjmp	.+54     	; 0x191c <__floatsisf+0x6c>
    18e6:	6f 5f       	subi	r22, 0xFF	; 255
    18e8:	7f 4f       	sbci	r23, 0xFF	; 255
    18ea:	8f 4f       	sbci	r24, 0xFF	; 255
    18ec:	9f 4f       	sbci	r25, 0xFF	; 255
    18ee:	16 c0       	rjmp	.+44     	; 0x191c <__floatsisf+0x6c>
    18f0:	88 23       	and	r24, r24
    18f2:	11 f0       	breq	.+4      	; 0x18f8 <__floatsisf+0x48>
    18f4:	96 e9       	ldi	r25, 0x96	; 150
    18f6:	11 c0       	rjmp	.+34     	; 0x191a <__floatsisf+0x6a>
    18f8:	77 23       	and	r23, r23
    18fa:	21 f0       	breq	.+8      	; 0x1904 <__floatsisf+0x54>
    18fc:	9e e8       	ldi	r25, 0x8E	; 142
    18fe:	87 2f       	mov	r24, r23
    1900:	76 2f       	mov	r23, r22
    1902:	05 c0       	rjmp	.+10     	; 0x190e <__floatsisf+0x5e>
    1904:	66 23       	and	r22, r22
    1906:	71 f0       	breq	.+28     	; 0x1924 <__floatsisf+0x74>
    1908:	96 e8       	ldi	r25, 0x86	; 134
    190a:	86 2f       	mov	r24, r22
    190c:	70 e0       	ldi	r23, 0x00	; 0
    190e:	60 e0       	ldi	r22, 0x00	; 0
    1910:	2a f0       	brmi	.+10     	; 0x191c <__floatsisf+0x6c>
    1912:	9a 95       	dec	r25
    1914:	66 0f       	add	r22, r22
    1916:	77 1f       	adc	r23, r23
    1918:	88 1f       	adc	r24, r24
    191a:	da f7       	brpl	.-10     	; 0x1912 <__floatsisf+0x62>
    191c:	88 0f       	add	r24, r24
    191e:	96 95       	lsr	r25
    1920:	87 95       	ror	r24
    1922:	97 f9       	bld	r25, 7
    1924:	08 95       	ret

00001926 <__fp_cmp>:
    1926:	99 0f       	add	r25, r25
    1928:	00 08       	sbc	r0, r0
    192a:	55 0f       	add	r21, r21
    192c:	aa 0b       	sbc	r26, r26
    192e:	e0 e8       	ldi	r30, 0x80	; 128
    1930:	fe ef       	ldi	r31, 0xFE	; 254
    1932:	16 16       	cp	r1, r22
    1934:	17 06       	cpc	r1, r23
    1936:	e8 07       	cpc	r30, r24
    1938:	f9 07       	cpc	r31, r25
    193a:	c0 f0       	brcs	.+48     	; 0x196c <__fp_cmp+0x46>
    193c:	12 16       	cp	r1, r18
    193e:	13 06       	cpc	r1, r19
    1940:	e4 07       	cpc	r30, r20
    1942:	f5 07       	cpc	r31, r21
    1944:	98 f0       	brcs	.+38     	; 0x196c <__fp_cmp+0x46>
    1946:	62 1b       	sub	r22, r18
    1948:	73 0b       	sbc	r23, r19
    194a:	84 0b       	sbc	r24, r20
    194c:	95 0b       	sbc	r25, r21
    194e:	39 f4       	brne	.+14     	; 0x195e <__fp_cmp+0x38>
    1950:	0a 26       	eor	r0, r26
    1952:	61 f0       	breq	.+24     	; 0x196c <__fp_cmp+0x46>
    1954:	23 2b       	or	r18, r19
    1956:	24 2b       	or	r18, r20
    1958:	25 2b       	or	r18, r21
    195a:	21 f4       	brne	.+8      	; 0x1964 <__fp_cmp+0x3e>
    195c:	08 95       	ret
    195e:	0a 26       	eor	r0, r26
    1960:	09 f4       	brne	.+2      	; 0x1964 <__fp_cmp+0x3e>
    1962:	a1 40       	sbci	r26, 0x01	; 1
    1964:	a6 95       	lsr	r26
    1966:	8f ef       	ldi	r24, 0xFF	; 255
    1968:	81 1d       	adc	r24, r1
    196a:	81 1d       	adc	r24, r1
    196c:	08 95       	ret

0000196e <__fp_inf>:
    196e:	97 f9       	bld	r25, 7
    1970:	9f 67       	ori	r25, 0x7F	; 127
    1972:	80 e8       	ldi	r24, 0x80	; 128
    1974:	70 e0       	ldi	r23, 0x00	; 0
    1976:	60 e0       	ldi	r22, 0x00	; 0
    1978:	08 95       	ret

0000197a <__fp_nan>:
    197a:	9f ef       	ldi	r25, 0xFF	; 255
    197c:	80 ec       	ldi	r24, 0xC0	; 192
    197e:	08 95       	ret

00001980 <__fp_pscA>:
    1980:	00 24       	eor	r0, r0
    1982:	0a 94       	dec	r0
    1984:	16 16       	cp	r1, r22
    1986:	17 06       	cpc	r1, r23
    1988:	18 06       	cpc	r1, r24
    198a:	09 06       	cpc	r0, r25
    198c:	08 95       	ret

0000198e <__fp_pscB>:
    198e:	00 24       	eor	r0, r0
    1990:	0a 94       	dec	r0
    1992:	12 16       	cp	r1, r18
    1994:	13 06       	cpc	r1, r19
    1996:	14 06       	cpc	r1, r20
    1998:	05 06       	cpc	r0, r21
    199a:	08 95       	ret

0000199c <__fp_round>:
    199c:	09 2e       	mov	r0, r25
    199e:	03 94       	inc	r0
    19a0:	00 0c       	add	r0, r0
    19a2:	11 f4       	brne	.+4      	; 0x19a8 <__fp_round+0xc>
    19a4:	88 23       	and	r24, r24
    19a6:	52 f0       	brmi	.+20     	; 0x19bc <__fp_round+0x20>
    19a8:	bb 0f       	add	r27, r27
    19aa:	40 f4       	brcc	.+16     	; 0x19bc <__fp_round+0x20>
    19ac:	bf 2b       	or	r27, r31
    19ae:	11 f4       	brne	.+4      	; 0x19b4 <__fp_round+0x18>
    19b0:	60 ff       	sbrs	r22, 0
    19b2:	04 c0       	rjmp	.+8      	; 0x19bc <__fp_round+0x20>
    19b4:	6f 5f       	subi	r22, 0xFF	; 255
    19b6:	7f 4f       	sbci	r23, 0xFF	; 255
    19b8:	8f 4f       	sbci	r24, 0xFF	; 255
    19ba:	9f 4f       	sbci	r25, 0xFF	; 255
    19bc:	08 95       	ret

000019be <__fp_split3>:
    19be:	57 fd       	sbrc	r21, 7
    19c0:	90 58       	subi	r25, 0x80	; 128
    19c2:	44 0f       	add	r20, r20
    19c4:	55 1f       	adc	r21, r21
    19c6:	59 f0       	breq	.+22     	; 0x19de <__fp_splitA+0x10>
    19c8:	5f 3f       	cpi	r21, 0xFF	; 255
    19ca:	71 f0       	breq	.+28     	; 0x19e8 <__fp_splitA+0x1a>
    19cc:	47 95       	ror	r20

000019ce <__fp_splitA>:
    19ce:	88 0f       	add	r24, r24
    19d0:	97 fb       	bst	r25, 7
    19d2:	99 1f       	adc	r25, r25
    19d4:	61 f0       	breq	.+24     	; 0x19ee <__fp_splitA+0x20>
    19d6:	9f 3f       	cpi	r25, 0xFF	; 255
    19d8:	79 f0       	breq	.+30     	; 0x19f8 <__fp_splitA+0x2a>
    19da:	87 95       	ror	r24
    19dc:	08 95       	ret
    19de:	12 16       	cp	r1, r18
    19e0:	13 06       	cpc	r1, r19
    19e2:	14 06       	cpc	r1, r20
    19e4:	55 1f       	adc	r21, r21
    19e6:	f2 cf       	rjmp	.-28     	; 0x19cc <__fp_split3+0xe>
    19e8:	46 95       	lsr	r20
    19ea:	f1 df       	rcall	.-30     	; 0x19ce <__fp_splitA>
    19ec:	08 c0       	rjmp	.+16     	; 0x19fe <__fp_splitA+0x30>
    19ee:	16 16       	cp	r1, r22
    19f0:	17 06       	cpc	r1, r23
    19f2:	18 06       	cpc	r1, r24
    19f4:	99 1f       	adc	r25, r25
    19f6:	f1 cf       	rjmp	.-30     	; 0x19da <__fp_splitA+0xc>
    19f8:	86 95       	lsr	r24
    19fa:	71 05       	cpc	r23, r1
    19fc:	61 05       	cpc	r22, r1
    19fe:	08 94       	sec
    1a00:	08 95       	ret

00001a02 <__fp_zero>:
    1a02:	e8 94       	clt

00001a04 <__fp_szero>:
    1a04:	bb 27       	eor	r27, r27
    1a06:	66 27       	eor	r22, r22
    1a08:	77 27       	eor	r23, r23
    1a0a:	cb 01       	movw	r24, r22
    1a0c:	97 f9       	bld	r25, 7
    1a0e:	08 95       	ret

00001a10 <__gesf2>:
    1a10:	8a df       	rcall	.-236    	; 0x1926 <__fp_cmp>
    1a12:	08 f4       	brcc	.+2      	; 0x1a16 <__gesf2+0x6>
    1a14:	8f ef       	ldi	r24, 0xFF	; 255
    1a16:	08 95       	ret

00001a18 <__mulsf3>:
    1a18:	0b d0       	rcall	.+22     	; 0x1a30 <__mulsf3x>
    1a1a:	c0 cf       	rjmp	.-128    	; 0x199c <__fp_round>
    1a1c:	b1 df       	rcall	.-158    	; 0x1980 <__fp_pscA>
    1a1e:	28 f0       	brcs	.+10     	; 0x1a2a <__mulsf3+0x12>
    1a20:	b6 df       	rcall	.-148    	; 0x198e <__fp_pscB>
    1a22:	18 f0       	brcs	.+6      	; 0x1a2a <__mulsf3+0x12>
    1a24:	95 23       	and	r25, r21
    1a26:	09 f0       	breq	.+2      	; 0x1a2a <__mulsf3+0x12>
    1a28:	a2 cf       	rjmp	.-188    	; 0x196e <__fp_inf>
    1a2a:	a7 cf       	rjmp	.-178    	; 0x197a <__fp_nan>
    1a2c:	11 24       	eor	r1, r1
    1a2e:	ea cf       	rjmp	.-44     	; 0x1a04 <__fp_szero>

00001a30 <__mulsf3x>:
    1a30:	c6 df       	rcall	.-116    	; 0x19be <__fp_split3>
    1a32:	a0 f3       	brcs	.-24     	; 0x1a1c <__mulsf3+0x4>

00001a34 <__mulsf3_pse>:
    1a34:	95 9f       	mul	r25, r21
    1a36:	d1 f3       	breq	.-12     	; 0x1a2c <__mulsf3+0x14>
    1a38:	95 0f       	add	r25, r21
    1a3a:	50 e0       	ldi	r21, 0x00	; 0
    1a3c:	55 1f       	adc	r21, r21
    1a3e:	62 9f       	mul	r22, r18
    1a40:	f0 01       	movw	r30, r0
    1a42:	72 9f       	mul	r23, r18
    1a44:	bb 27       	eor	r27, r27
    1a46:	f0 0d       	add	r31, r0
    1a48:	b1 1d       	adc	r27, r1
    1a4a:	63 9f       	mul	r22, r19
    1a4c:	aa 27       	eor	r26, r26
    1a4e:	f0 0d       	add	r31, r0
    1a50:	b1 1d       	adc	r27, r1
    1a52:	aa 1f       	adc	r26, r26
    1a54:	64 9f       	mul	r22, r20
    1a56:	66 27       	eor	r22, r22
    1a58:	b0 0d       	add	r27, r0
    1a5a:	a1 1d       	adc	r26, r1
    1a5c:	66 1f       	adc	r22, r22
    1a5e:	82 9f       	mul	r24, r18
    1a60:	22 27       	eor	r18, r18
    1a62:	b0 0d       	add	r27, r0
    1a64:	a1 1d       	adc	r26, r1
    1a66:	62 1f       	adc	r22, r18
    1a68:	73 9f       	mul	r23, r19
    1a6a:	b0 0d       	add	r27, r0
    1a6c:	a1 1d       	adc	r26, r1
    1a6e:	62 1f       	adc	r22, r18
    1a70:	83 9f       	mul	r24, r19
    1a72:	a0 0d       	add	r26, r0
    1a74:	61 1d       	adc	r22, r1
    1a76:	22 1f       	adc	r18, r18
    1a78:	74 9f       	mul	r23, r20
    1a7a:	33 27       	eor	r19, r19
    1a7c:	a0 0d       	add	r26, r0
    1a7e:	61 1d       	adc	r22, r1
    1a80:	23 1f       	adc	r18, r19
    1a82:	84 9f       	mul	r24, r20
    1a84:	60 0d       	add	r22, r0
    1a86:	21 1d       	adc	r18, r1
    1a88:	82 2f       	mov	r24, r18
    1a8a:	76 2f       	mov	r23, r22
    1a8c:	6a 2f       	mov	r22, r26
    1a8e:	11 24       	eor	r1, r1
    1a90:	9f 57       	subi	r25, 0x7F	; 127
    1a92:	50 40       	sbci	r21, 0x00	; 0
    1a94:	8a f0       	brmi	.+34     	; 0x1ab8 <__mulsf3_pse+0x84>
    1a96:	e1 f0       	breq	.+56     	; 0x1ad0 <__mulsf3_pse+0x9c>
    1a98:	88 23       	and	r24, r24
    1a9a:	4a f0       	brmi	.+18     	; 0x1aae <__mulsf3_pse+0x7a>
    1a9c:	ee 0f       	add	r30, r30
    1a9e:	ff 1f       	adc	r31, r31
    1aa0:	bb 1f       	adc	r27, r27
    1aa2:	66 1f       	adc	r22, r22
    1aa4:	77 1f       	adc	r23, r23
    1aa6:	88 1f       	adc	r24, r24
    1aa8:	91 50       	subi	r25, 0x01	; 1
    1aaa:	50 40       	sbci	r21, 0x00	; 0
    1aac:	a9 f7       	brne	.-22     	; 0x1a98 <__mulsf3_pse+0x64>
    1aae:	9e 3f       	cpi	r25, 0xFE	; 254
    1ab0:	51 05       	cpc	r21, r1
    1ab2:	70 f0       	brcs	.+28     	; 0x1ad0 <__mulsf3_pse+0x9c>
    1ab4:	5c cf       	rjmp	.-328    	; 0x196e <__fp_inf>
    1ab6:	a6 cf       	rjmp	.-180    	; 0x1a04 <__fp_szero>
    1ab8:	5f 3f       	cpi	r21, 0xFF	; 255
    1aba:	ec f3       	brlt	.-6      	; 0x1ab6 <__mulsf3_pse+0x82>
    1abc:	98 3e       	cpi	r25, 0xE8	; 232
    1abe:	dc f3       	brlt	.-10     	; 0x1ab6 <__mulsf3_pse+0x82>
    1ac0:	86 95       	lsr	r24
    1ac2:	77 95       	ror	r23
    1ac4:	67 95       	ror	r22
    1ac6:	b7 95       	ror	r27
    1ac8:	f7 95       	ror	r31
    1aca:	e7 95       	ror	r30
    1acc:	9f 5f       	subi	r25, 0xFF	; 255
    1ace:	c1 f7       	brne	.-16     	; 0x1ac0 <__mulsf3_pse+0x8c>
    1ad0:	fe 2b       	or	r31, r30
    1ad2:	88 0f       	add	r24, r24
    1ad4:	91 1d       	adc	r25, r1
    1ad6:	96 95       	lsr	r25
    1ad8:	87 95       	ror	r24
    1ada:	97 f9       	bld	r25, 7
    1adc:	08 95       	ret

00001ade <pow>:
    1ade:	fa 01       	movw	r30, r20
    1ae0:	ee 0f       	add	r30, r30
    1ae2:	ff 1f       	adc	r31, r31
    1ae4:	30 96       	adiw	r30, 0x00	; 0
    1ae6:	21 05       	cpc	r18, r1
    1ae8:	31 05       	cpc	r19, r1
    1aea:	99 f1       	breq	.+102    	; 0x1b52 <pow+0x74>
    1aec:	61 15       	cp	r22, r1
    1aee:	71 05       	cpc	r23, r1
    1af0:	61 f4       	brne	.+24     	; 0x1b0a <pow+0x2c>
    1af2:	80 38       	cpi	r24, 0x80	; 128
    1af4:	bf e3       	ldi	r27, 0x3F	; 63
    1af6:	9b 07       	cpc	r25, r27
    1af8:	49 f1       	breq	.+82     	; 0x1b4c <pow+0x6e>
    1afa:	68 94       	set
    1afc:	90 38       	cpi	r25, 0x80	; 128
    1afe:	81 05       	cpc	r24, r1
    1b00:	61 f0       	breq	.+24     	; 0x1b1a <pow+0x3c>
    1b02:	80 38       	cpi	r24, 0x80	; 128
    1b04:	bf ef       	ldi	r27, 0xFF	; 255
    1b06:	9b 07       	cpc	r25, r27
    1b08:	41 f0       	breq	.+16     	; 0x1b1a <pow+0x3c>
    1b0a:	99 23       	and	r25, r25
    1b0c:	42 f5       	brpl	.+80     	; 0x1b5e <pow+0x80>
    1b0e:	ff 3f       	cpi	r31, 0xFF	; 255
    1b10:	e1 05       	cpc	r30, r1
    1b12:	31 05       	cpc	r19, r1
    1b14:	21 05       	cpc	r18, r1
    1b16:	11 f1       	breq	.+68     	; 0x1b5c <pow+0x7e>
    1b18:	e8 94       	clt
    1b1a:	08 94       	sec
    1b1c:	e7 95       	ror	r30
    1b1e:	d9 01       	movw	r26, r18
    1b20:	aa 23       	and	r26, r26
    1b22:	29 f4       	brne	.+10     	; 0x1b2e <pow+0x50>
    1b24:	ab 2f       	mov	r26, r27
    1b26:	be 2f       	mov	r27, r30
    1b28:	f8 5f       	subi	r31, 0xF8	; 248
    1b2a:	d0 f3       	brcs	.-12     	; 0x1b20 <pow+0x42>
    1b2c:	10 c0       	rjmp	.+32     	; 0x1b4e <pow+0x70>
    1b2e:	ff 5f       	subi	r31, 0xFF	; 255
    1b30:	70 f4       	brcc	.+28     	; 0x1b4e <pow+0x70>
    1b32:	a6 95       	lsr	r26
    1b34:	e0 f7       	brcc	.-8      	; 0x1b2e <pow+0x50>
    1b36:	f7 39       	cpi	r31, 0x97	; 151
    1b38:	50 f0       	brcs	.+20     	; 0x1b4e <pow+0x70>
    1b3a:	19 f0       	breq	.+6      	; 0x1b42 <pow+0x64>
    1b3c:	ff 3a       	cpi	r31, 0xAF	; 175
    1b3e:	38 f4       	brcc	.+14     	; 0x1b4e <pow+0x70>
    1b40:	9f 77       	andi	r25, 0x7F	; 127
    1b42:	9f 93       	push	r25
    1b44:	0c d0       	rcall	.+24     	; 0x1b5e <pow+0x80>
    1b46:	0f 90       	pop	r0
    1b48:	07 fc       	sbrc	r0, 7
    1b4a:	90 58       	subi	r25, 0x80	; 128
    1b4c:	08 95       	ret
    1b4e:	3e f0       	brts	.+14     	; 0x1b5e <pow+0x80>
    1b50:	14 cf       	rjmp	.-472    	; 0x197a <__fp_nan>
    1b52:	60 e0       	ldi	r22, 0x00	; 0
    1b54:	70 e0       	ldi	r23, 0x00	; 0
    1b56:	80 e8       	ldi	r24, 0x80	; 128
    1b58:	9f e3       	ldi	r25, 0x3F	; 63
    1b5a:	08 95       	ret
    1b5c:	4f e7       	ldi	r20, 0x7F	; 127
    1b5e:	9f 77       	andi	r25, 0x7F	; 127
    1b60:	5f 93       	push	r21
    1b62:	4f 93       	push	r20
    1b64:	3f 93       	push	r19
    1b66:	2f 93       	push	r18
    1b68:	9e d0       	rcall	.+316    	; 0x1ca6 <log>
    1b6a:	2f 91       	pop	r18
    1b6c:	3f 91       	pop	r19
    1b6e:	4f 91       	pop	r20
    1b70:	5f 91       	pop	r21
    1b72:	52 df       	rcall	.-348    	; 0x1a18 <__mulsf3>
    1b74:	05 c0       	rjmp	.+10     	; 0x1b80 <exp>
    1b76:	19 f4       	brne	.+6      	; 0x1b7e <pow+0xa0>
    1b78:	0e f0       	brts	.+2      	; 0x1b7c <pow+0x9e>
    1b7a:	f9 ce       	rjmp	.-526    	; 0x196e <__fp_inf>
    1b7c:	42 cf       	rjmp	.-380    	; 0x1a02 <__fp_zero>
    1b7e:	fd ce       	rjmp	.-518    	; 0x197a <__fp_nan>

00001b80 <exp>:
    1b80:	26 df       	rcall	.-436    	; 0x19ce <__fp_splitA>
    1b82:	c8 f3       	brcs	.-14     	; 0x1b76 <pow+0x98>
    1b84:	96 38       	cpi	r25, 0x86	; 134
    1b86:	c0 f7       	brcc	.-16     	; 0x1b78 <pow+0x9a>
    1b88:	07 f8       	bld	r0, 7
    1b8a:	0f 92       	push	r0
    1b8c:	e8 94       	clt
    1b8e:	2b e3       	ldi	r18, 0x3B	; 59
    1b90:	3a ea       	ldi	r19, 0xAA	; 170
    1b92:	48 eb       	ldi	r20, 0xB8	; 184
    1b94:	5f e7       	ldi	r21, 0x7F	; 127
    1b96:	4e df       	rcall	.-356    	; 0x1a34 <__mulsf3_pse>
    1b98:	0f 92       	push	r0
    1b9a:	0f 92       	push	r0
    1b9c:	0f 92       	push	r0
    1b9e:	4d b7       	in	r20, 0x3d	; 61
    1ba0:	5e b7       	in	r21, 0x3e	; 62
    1ba2:	0f 92       	push	r0
    1ba4:	c0 d0       	rcall	.+384    	; 0x1d26 <modf>
    1ba6:	ec e7       	ldi	r30, 0x7C	; 124
    1ba8:	f0 e0       	ldi	r31, 0x00	; 0
    1baa:	16 d0       	rcall	.+44     	; 0x1bd8 <__fp_powser>
    1bac:	4f 91       	pop	r20
    1bae:	5f 91       	pop	r21
    1bb0:	ef 91       	pop	r30
    1bb2:	ff 91       	pop	r31
    1bb4:	e5 95       	asr	r30
    1bb6:	ee 1f       	adc	r30, r30
    1bb8:	ff 1f       	adc	r31, r31
    1bba:	49 f0       	breq	.+18     	; 0x1bce <exp+0x4e>
    1bbc:	fe 57       	subi	r31, 0x7E	; 126
    1bbe:	e0 68       	ori	r30, 0x80	; 128
    1bc0:	44 27       	eor	r20, r20
    1bc2:	ee 0f       	add	r30, r30
    1bc4:	44 1f       	adc	r20, r20
    1bc6:	fa 95       	dec	r31
    1bc8:	e1 f7       	brne	.-8      	; 0x1bc2 <exp+0x42>
    1bca:	41 95       	neg	r20
    1bcc:	55 0b       	sbc	r21, r21
    1bce:	32 d0       	rcall	.+100    	; 0x1c34 <ldexp>
    1bd0:	0f 90       	pop	r0
    1bd2:	07 fe       	sbrs	r0, 7
    1bd4:	26 c0       	rjmp	.+76     	; 0x1c22 <inverse>
    1bd6:	08 95       	ret

00001bd8 <__fp_powser>:
    1bd8:	df 93       	push	r29
    1bda:	cf 93       	push	r28
    1bdc:	1f 93       	push	r17
    1bde:	0f 93       	push	r16
    1be0:	ff 92       	push	r15
    1be2:	ef 92       	push	r14
    1be4:	df 92       	push	r13
    1be6:	7b 01       	movw	r14, r22
    1be8:	8c 01       	movw	r16, r24
    1bea:	68 94       	set
    1bec:	05 c0       	rjmp	.+10     	; 0x1bf8 <__fp_powser+0x20>
    1bee:	da 2e       	mov	r13, r26
    1bf0:	ef 01       	movw	r28, r30
    1bf2:	1e df       	rcall	.-452    	; 0x1a30 <__mulsf3x>
    1bf4:	fe 01       	movw	r30, r28
    1bf6:	e8 94       	clt
    1bf8:	a5 91       	lpm	r26, Z+
    1bfa:	25 91       	lpm	r18, Z+
    1bfc:	35 91       	lpm	r19, Z+
    1bfe:	45 91       	lpm	r20, Z+
    1c00:	55 91       	lpm	r21, Z+
    1c02:	ae f3       	brts	.-22     	; 0x1bee <__fp_powser+0x16>
    1c04:	ef 01       	movw	r28, r30
    1c06:	62 dd       	rcall	.-1340   	; 0x16cc <__addsf3x>
    1c08:	fe 01       	movw	r30, r28
    1c0a:	97 01       	movw	r18, r14
    1c0c:	a8 01       	movw	r20, r16
    1c0e:	da 94       	dec	r13
    1c10:	79 f7       	brne	.-34     	; 0x1bf0 <__fp_powser+0x18>
    1c12:	df 90       	pop	r13
    1c14:	ef 90       	pop	r14
    1c16:	ff 90       	pop	r15
    1c18:	0f 91       	pop	r16
    1c1a:	1f 91       	pop	r17
    1c1c:	cf 91       	pop	r28
    1c1e:	df 91       	pop	r29
    1c20:	08 95       	ret

00001c22 <inverse>:
    1c22:	9b 01       	movw	r18, r22
    1c24:	ac 01       	movw	r20, r24
    1c26:	60 e0       	ldi	r22, 0x00	; 0
    1c28:	70 e0       	ldi	r23, 0x00	; 0
    1c2a:	80 e8       	ldi	r24, 0x80	; 128
    1c2c:	9f e3       	ldi	r25, 0x3F	; 63
    1c2e:	a5 cd       	rjmp	.-1206   	; 0x177a <__divsf3>
    1c30:	9e ce       	rjmp	.-708    	; 0x196e <__fp_inf>
    1c32:	ac c0       	rjmp	.+344    	; 0x1d8c <__fp_mpack>

00001c34 <ldexp>:
    1c34:	cc de       	rcall	.-616    	; 0x19ce <__fp_splitA>
    1c36:	e8 f3       	brcs	.-6      	; 0x1c32 <inverse+0x10>
    1c38:	99 23       	and	r25, r25
    1c3a:	d9 f3       	breq	.-10     	; 0x1c32 <inverse+0x10>
    1c3c:	94 0f       	add	r25, r20
    1c3e:	51 1d       	adc	r21, r1
    1c40:	bb f3       	brvs	.-18     	; 0x1c30 <inverse+0xe>
    1c42:	91 50       	subi	r25, 0x01	; 1
    1c44:	50 40       	sbci	r21, 0x00	; 0
    1c46:	94 f0       	brlt	.+36     	; 0x1c6c <ldexp+0x38>
    1c48:	59 f0       	breq	.+22     	; 0x1c60 <ldexp+0x2c>
    1c4a:	88 23       	and	r24, r24
    1c4c:	32 f0       	brmi	.+12     	; 0x1c5a <ldexp+0x26>
    1c4e:	66 0f       	add	r22, r22
    1c50:	77 1f       	adc	r23, r23
    1c52:	88 1f       	adc	r24, r24
    1c54:	91 50       	subi	r25, 0x01	; 1
    1c56:	50 40       	sbci	r21, 0x00	; 0
    1c58:	c1 f7       	brne	.-16     	; 0x1c4a <ldexp+0x16>
    1c5a:	9e 3f       	cpi	r25, 0xFE	; 254
    1c5c:	51 05       	cpc	r21, r1
    1c5e:	44 f7       	brge	.-48     	; 0x1c30 <inverse+0xe>
    1c60:	88 0f       	add	r24, r24
    1c62:	91 1d       	adc	r25, r1
    1c64:	96 95       	lsr	r25
    1c66:	87 95       	ror	r24
    1c68:	97 f9       	bld	r25, 7
    1c6a:	08 95       	ret
    1c6c:	5f 3f       	cpi	r21, 0xFF	; 255
    1c6e:	ac f0       	brlt	.+42     	; 0x1c9a <ldexp+0x66>
    1c70:	98 3e       	cpi	r25, 0xE8	; 232
    1c72:	9c f0       	brlt	.+38     	; 0x1c9a <ldexp+0x66>
    1c74:	bb 27       	eor	r27, r27
    1c76:	86 95       	lsr	r24
    1c78:	77 95       	ror	r23
    1c7a:	67 95       	ror	r22
    1c7c:	b7 95       	ror	r27
    1c7e:	08 f4       	brcc	.+2      	; 0x1c82 <ldexp+0x4e>
    1c80:	b1 60       	ori	r27, 0x01	; 1
    1c82:	93 95       	inc	r25
    1c84:	c1 f7       	brne	.-16     	; 0x1c76 <ldexp+0x42>
    1c86:	bb 0f       	add	r27, r27
    1c88:	58 f7       	brcc	.-42     	; 0x1c60 <ldexp+0x2c>
    1c8a:	11 f4       	brne	.+4      	; 0x1c90 <ldexp+0x5c>
    1c8c:	60 ff       	sbrs	r22, 0
    1c8e:	e8 cf       	rjmp	.-48     	; 0x1c60 <ldexp+0x2c>
    1c90:	6f 5f       	subi	r22, 0xFF	; 255
    1c92:	7f 4f       	sbci	r23, 0xFF	; 255
    1c94:	8f 4f       	sbci	r24, 0xFF	; 255
    1c96:	9f 4f       	sbci	r25, 0xFF	; 255
    1c98:	e3 cf       	rjmp	.-58     	; 0x1c60 <ldexp+0x2c>
    1c9a:	b4 ce       	rjmp	.-664    	; 0x1a04 <__fp_szero>
    1c9c:	0e f0       	brts	.+2      	; 0x1ca0 <ldexp+0x6c>
    1c9e:	76 c0       	rjmp	.+236    	; 0x1d8c <__fp_mpack>
    1ca0:	6c ce       	rjmp	.-808    	; 0x197a <__fp_nan>
    1ca2:	68 94       	set
    1ca4:	64 ce       	rjmp	.-824    	; 0x196e <__fp_inf>

00001ca6 <log>:
    1ca6:	93 de       	rcall	.-730    	; 0x19ce <__fp_splitA>
    1ca8:	c8 f3       	brcs	.-14     	; 0x1c9c <ldexp+0x68>
    1caa:	99 23       	and	r25, r25
    1cac:	d1 f3       	breq	.-12     	; 0x1ca2 <ldexp+0x6e>
    1cae:	c6 f3       	brts	.-16     	; 0x1ca0 <ldexp+0x6c>
    1cb0:	df 93       	push	r29
    1cb2:	cf 93       	push	r28
    1cb4:	1f 93       	push	r17
    1cb6:	0f 93       	push	r16
    1cb8:	ff 92       	push	r15
    1cba:	c9 2f       	mov	r28, r25
    1cbc:	dd 27       	eor	r29, r29
    1cbe:	88 23       	and	r24, r24
    1cc0:	2a f0       	brmi	.+10     	; 0x1ccc <log+0x26>
    1cc2:	21 97       	sbiw	r28, 0x01	; 1
    1cc4:	66 0f       	add	r22, r22
    1cc6:	77 1f       	adc	r23, r23
    1cc8:	88 1f       	adc	r24, r24
    1cca:	da f7       	brpl	.-10     	; 0x1cc2 <log+0x1c>
    1ccc:	20 e0       	ldi	r18, 0x00	; 0
    1cce:	30 e0       	ldi	r19, 0x00	; 0
    1cd0:	40 e8       	ldi	r20, 0x80	; 128
    1cd2:	5f eb       	ldi	r21, 0xBF	; 191
    1cd4:	9f e3       	ldi	r25, 0x3F	; 63
    1cd6:	88 39       	cpi	r24, 0x98	; 152
    1cd8:	20 f0       	brcs	.+8      	; 0x1ce2 <log+0x3c>
    1cda:	80 3e       	cpi	r24, 0xE0	; 224
    1cdc:	30 f0       	brcs	.+12     	; 0x1cea <log+0x44>
    1cde:	21 96       	adiw	r28, 0x01	; 1
    1ce0:	8f 77       	andi	r24, 0x7F	; 127
    1ce2:	e3 dc       	rcall	.-1594   	; 0x16aa <__addsf3>
    1ce4:	e4 ea       	ldi	r30, 0xA4	; 164
    1ce6:	f0 e0       	ldi	r31, 0x00	; 0
    1ce8:	03 c0       	rjmp	.+6      	; 0x1cf0 <log+0x4a>
    1cea:	df dc       	rcall	.-1602   	; 0x16aa <__addsf3>
    1cec:	e1 ed       	ldi	r30, 0xD1	; 209
    1cee:	f0 e0       	ldi	r31, 0x00	; 0
    1cf0:	73 df       	rcall	.-282    	; 0x1bd8 <__fp_powser>
    1cf2:	8b 01       	movw	r16, r22
    1cf4:	be 01       	movw	r22, r28
    1cf6:	ec 01       	movw	r28, r24
    1cf8:	fb 2e       	mov	r15, r27
    1cfa:	6f 57       	subi	r22, 0x7F	; 127
    1cfc:	71 09       	sbc	r23, r1
    1cfe:	75 95       	asr	r23
    1d00:	77 1f       	adc	r23, r23
    1d02:	88 0b       	sbc	r24, r24
    1d04:	99 0b       	sbc	r25, r25
    1d06:	d4 dd       	rcall	.-1112   	; 0x18b0 <__floatsisf>
    1d08:	28 e1       	ldi	r18, 0x18	; 24
    1d0a:	32 e7       	ldi	r19, 0x72	; 114
    1d0c:	41 e3       	ldi	r20, 0x31	; 49
    1d0e:	5f e3       	ldi	r21, 0x3F	; 63
    1d10:	8f de       	rcall	.-738    	; 0x1a30 <__mulsf3x>
    1d12:	af 2d       	mov	r26, r15
    1d14:	98 01       	movw	r18, r16
    1d16:	ae 01       	movw	r20, r28
    1d18:	ff 90       	pop	r15
    1d1a:	0f 91       	pop	r16
    1d1c:	1f 91       	pop	r17
    1d1e:	cf 91       	pop	r28
    1d20:	df 91       	pop	r29
    1d22:	d4 dc       	rcall	.-1624   	; 0x16cc <__addsf3x>
    1d24:	3b ce       	rjmp	.-906    	; 0x199c <__fp_round>

00001d26 <modf>:
    1d26:	fa 01       	movw	r30, r20
    1d28:	dc 01       	movw	r26, r24
    1d2a:	aa 0f       	add	r26, r26
    1d2c:	bb 1f       	adc	r27, r27
    1d2e:	9b 01       	movw	r18, r22
    1d30:	ac 01       	movw	r20, r24
    1d32:	bf 57       	subi	r27, 0x7F	; 127
    1d34:	28 f4       	brcc	.+10     	; 0x1d40 <modf+0x1a>
    1d36:	22 27       	eor	r18, r18
    1d38:	33 27       	eor	r19, r19
    1d3a:	44 27       	eor	r20, r20
    1d3c:	50 78       	andi	r21, 0x80	; 128
    1d3e:	1f c0       	rjmp	.+62     	; 0x1d7e <modf+0x58>
    1d40:	b7 51       	subi	r27, 0x17	; 23
    1d42:	88 f4       	brcc	.+34     	; 0x1d66 <modf+0x40>
    1d44:	ab 2f       	mov	r26, r27
    1d46:	00 24       	eor	r0, r0
    1d48:	46 95       	lsr	r20
    1d4a:	37 95       	ror	r19
    1d4c:	27 95       	ror	r18
    1d4e:	01 1c       	adc	r0, r1
    1d50:	a3 95       	inc	r26
    1d52:	d2 f3       	brmi	.-12     	; 0x1d48 <modf+0x22>
    1d54:	00 20       	and	r0, r0
    1d56:	69 f0       	breq	.+26     	; 0x1d72 <modf+0x4c>
    1d58:	22 0f       	add	r18, r18
    1d5a:	33 1f       	adc	r19, r19
    1d5c:	44 1f       	adc	r20, r20
    1d5e:	b3 95       	inc	r27
    1d60:	da f3       	brmi	.-10     	; 0x1d58 <modf+0x32>
    1d62:	0d d0       	rcall	.+26     	; 0x1d7e <modf+0x58>
    1d64:	a1 cc       	rjmp	.-1726   	; 0x16a8 <__subsf3>
    1d66:	61 30       	cpi	r22, 0x01	; 1
    1d68:	71 05       	cpc	r23, r1
    1d6a:	a0 e8       	ldi	r26, 0x80	; 128
    1d6c:	8a 07       	cpc	r24, r26
    1d6e:	b9 46       	sbci	r27, 0x69	; 105
    1d70:	30 f4       	brcc	.+12     	; 0x1d7e <modf+0x58>
    1d72:	9b 01       	movw	r18, r22
    1d74:	ac 01       	movw	r20, r24
    1d76:	66 27       	eor	r22, r22
    1d78:	77 27       	eor	r23, r23
    1d7a:	88 27       	eor	r24, r24
    1d7c:	90 78       	andi	r25, 0x80	; 128
    1d7e:	30 96       	adiw	r30, 0x00	; 0
    1d80:	21 f0       	breq	.+8      	; 0x1d8a <modf+0x64>
    1d82:	20 83       	st	Z, r18
    1d84:	31 83       	std	Z+1, r19	; 0x01
    1d86:	42 83       	std	Z+2, r20	; 0x02
    1d88:	53 83       	std	Z+3, r21	; 0x03
    1d8a:	08 95       	ret

00001d8c <__fp_mpack>:
    1d8c:	9f 3f       	cpi	r25, 0xFF	; 255
    1d8e:	31 f0       	breq	.+12     	; 0x1d9c <__fp_mpack_finite+0xc>

00001d90 <__fp_mpack_finite>:
    1d90:	91 50       	subi	r25, 0x01	; 1
    1d92:	20 f4       	brcc	.+8      	; 0x1d9c <__fp_mpack_finite+0xc>
    1d94:	87 95       	ror	r24
    1d96:	77 95       	ror	r23
    1d98:	67 95       	ror	r22
    1d9a:	b7 95       	ror	r27
    1d9c:	88 0f       	add	r24, r24
    1d9e:	91 1d       	adc	r25, r1
    1da0:	96 95       	lsr	r25
    1da2:	87 95       	ror	r24
    1da4:	97 f9       	bld	r25, 7
    1da6:	08 95       	ret

00001da8 <__umulhisi3>:
    1da8:	a2 9f       	mul	r26, r18
    1daa:	b0 01       	movw	r22, r0
    1dac:	b3 9f       	mul	r27, r19
    1dae:	c0 01       	movw	r24, r0
    1db0:	a3 9f       	mul	r26, r19
    1db2:	70 0d       	add	r23, r0
    1db4:	81 1d       	adc	r24, r1
    1db6:	11 24       	eor	r1, r1
    1db8:	91 1d       	adc	r25, r1
    1dba:	b2 9f       	mul	r27, r18
    1dbc:	70 0d       	add	r23, r0
    1dbe:	81 1d       	adc	r24, r1
    1dc0:	11 24       	eor	r1, r1
    1dc2:	91 1d       	adc	r25, r1
    1dc4:	08 95       	ret

00001dc6 <__muluhisi3>:
    1dc6:	f0 df       	rcall	.-32     	; 0x1da8 <__umulhisi3>
    1dc8:	a5 9f       	mul	r26, r21
    1dca:	90 0d       	add	r25, r0
    1dcc:	b4 9f       	mul	r27, r20
    1dce:	90 0d       	add	r25, r0
    1dd0:	a4 9f       	mul	r26, r20
    1dd2:	80 0d       	add	r24, r0
    1dd4:	91 1d       	adc	r25, r1
    1dd6:	11 24       	eor	r1, r1
    1dd8:	08 95       	ret

00001dda <__prologue_saves__>:
    1dda:	2f 92       	push	r2
    1ddc:	3f 92       	push	r3
    1dde:	4f 92       	push	r4
    1de0:	5f 92       	push	r5
    1de2:	6f 92       	push	r6
    1de4:	7f 92       	push	r7
    1de6:	8f 92       	push	r8
    1de8:	9f 92       	push	r9
    1dea:	af 92       	push	r10
    1dec:	bf 92       	push	r11
    1dee:	cf 92       	push	r12
    1df0:	df 92       	push	r13
    1df2:	ef 92       	push	r14
    1df4:	ff 92       	push	r15
    1df6:	0f 93       	push	r16
    1df8:	1f 93       	push	r17
    1dfa:	cf 93       	push	r28
    1dfc:	df 93       	push	r29
    1dfe:	cd b7       	in	r28, 0x3d	; 61
    1e00:	de b7       	in	r29, 0x3e	; 62
    1e02:	ca 1b       	sub	r28, r26
    1e04:	db 0b       	sbc	r29, r27
    1e06:	0f b6       	in	r0, 0x3f	; 63
    1e08:	f8 94       	cli
    1e0a:	de bf       	out	0x3e, r29	; 62
    1e0c:	0f be       	out	0x3f, r0	; 63
    1e0e:	cd bf       	out	0x3d, r28	; 61
    1e10:	09 94       	ijmp

00001e12 <__epilogue_restores__>:
    1e12:	2a 88       	ldd	r2, Y+18	; 0x12
    1e14:	39 88       	ldd	r3, Y+17	; 0x11
    1e16:	48 88       	ldd	r4, Y+16	; 0x10
    1e18:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e1a:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e1c:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e1e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e20:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e22:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e24:	b9 84       	ldd	r11, Y+9	; 0x09
    1e26:	c8 84       	ldd	r12, Y+8	; 0x08
    1e28:	df 80       	ldd	r13, Y+7	; 0x07
    1e2a:	ee 80       	ldd	r14, Y+6	; 0x06
    1e2c:	fd 80       	ldd	r15, Y+5	; 0x05
    1e2e:	0c 81       	ldd	r16, Y+4	; 0x04
    1e30:	1b 81       	ldd	r17, Y+3	; 0x03
    1e32:	aa 81       	ldd	r26, Y+2	; 0x02
    1e34:	b9 81       	ldd	r27, Y+1	; 0x01
    1e36:	ce 0f       	add	r28, r30
    1e38:	d1 1d       	adc	r29, r1
    1e3a:	0f b6       	in	r0, 0x3f	; 63
    1e3c:	f8 94       	cli
    1e3e:	de bf       	out	0x3e, r29	; 62
    1e40:	0f be       	out	0x3f, r0	; 63
    1e42:	cd bf       	out	0x3d, r28	; 61
    1e44:	ed 01       	movw	r28, r26
    1e46:	08 95       	ret

00001e48 <atof>:
    1e48:	66 27       	eor	r22, r22
    1e4a:	77 27       	eor	r23, r23
    1e4c:	ae c1       	rjmp	.+860    	; 0x21aa <strtod>

00001e4e <__ftoa_engine>:
    1e4e:	28 30       	cpi	r18, 0x08	; 8
    1e50:	08 f0       	brcs	.+2      	; 0x1e54 <__ftoa_engine+0x6>
    1e52:	27 e0       	ldi	r18, 0x07	; 7
    1e54:	33 27       	eor	r19, r19
    1e56:	da 01       	movw	r26, r20
    1e58:	99 0f       	add	r25, r25
    1e5a:	31 1d       	adc	r19, r1
    1e5c:	87 fd       	sbrc	r24, 7
    1e5e:	91 60       	ori	r25, 0x01	; 1
    1e60:	00 96       	adiw	r24, 0x00	; 0
    1e62:	61 05       	cpc	r22, r1
    1e64:	71 05       	cpc	r23, r1
    1e66:	39 f4       	brne	.+14     	; 0x1e76 <__ftoa_engine+0x28>
    1e68:	32 60       	ori	r19, 0x02	; 2
    1e6a:	2e 5f       	subi	r18, 0xFE	; 254
    1e6c:	3d 93       	st	X+, r19
    1e6e:	30 e3       	ldi	r19, 0x30	; 48
    1e70:	2a 95       	dec	r18
    1e72:	e1 f7       	brne	.-8      	; 0x1e6c <__ftoa_engine+0x1e>
    1e74:	08 95       	ret
    1e76:	9f 3f       	cpi	r25, 0xFF	; 255
    1e78:	30 f0       	brcs	.+12     	; 0x1e86 <__ftoa_engine+0x38>
    1e7a:	80 38       	cpi	r24, 0x80	; 128
    1e7c:	71 05       	cpc	r23, r1
    1e7e:	61 05       	cpc	r22, r1
    1e80:	09 f0       	breq	.+2      	; 0x1e84 <__ftoa_engine+0x36>
    1e82:	3c 5f       	subi	r19, 0xFC	; 252
    1e84:	3c 5f       	subi	r19, 0xFC	; 252
    1e86:	3d 93       	st	X+, r19
    1e88:	91 30       	cpi	r25, 0x01	; 1
    1e8a:	08 f0       	brcs	.+2      	; 0x1e8e <__ftoa_engine+0x40>
    1e8c:	80 68       	ori	r24, 0x80	; 128
    1e8e:	91 1d       	adc	r25, r1
    1e90:	df 93       	push	r29
    1e92:	cf 93       	push	r28
    1e94:	1f 93       	push	r17
    1e96:	0f 93       	push	r16
    1e98:	ff 92       	push	r15
    1e9a:	ef 92       	push	r14
    1e9c:	19 2f       	mov	r17, r25
    1e9e:	98 7f       	andi	r25, 0xF8	; 248
    1ea0:	96 95       	lsr	r25
    1ea2:	e9 2f       	mov	r30, r25
    1ea4:	96 95       	lsr	r25
    1ea6:	96 95       	lsr	r25
    1ea8:	e9 0f       	add	r30, r25
    1eaa:	ff 27       	eor	r31, r31
    1eac:	e0 5a       	subi	r30, 0xA0	; 160
    1eae:	fe 4f       	sbci	r31, 0xFE	; 254
    1eb0:	99 27       	eor	r25, r25
    1eb2:	33 27       	eor	r19, r19
    1eb4:	ee 24       	eor	r14, r14
    1eb6:	ff 24       	eor	r15, r15
    1eb8:	a7 01       	movw	r20, r14
    1eba:	e7 01       	movw	r28, r14
    1ebc:	05 90       	lpm	r0, Z+
    1ebe:	08 94       	sec
    1ec0:	07 94       	ror	r0
    1ec2:	28 f4       	brcc	.+10     	; 0x1ece <__ftoa_engine+0x80>
    1ec4:	36 0f       	add	r19, r22
    1ec6:	e7 1e       	adc	r14, r23
    1ec8:	f8 1e       	adc	r15, r24
    1eca:	49 1f       	adc	r20, r25
    1ecc:	51 1d       	adc	r21, r1
    1ece:	66 0f       	add	r22, r22
    1ed0:	77 1f       	adc	r23, r23
    1ed2:	88 1f       	adc	r24, r24
    1ed4:	99 1f       	adc	r25, r25
    1ed6:	06 94       	lsr	r0
    1ed8:	a1 f7       	brne	.-24     	; 0x1ec2 <__ftoa_engine+0x74>
    1eda:	05 90       	lpm	r0, Z+
    1edc:	07 94       	ror	r0
    1ede:	28 f4       	brcc	.+10     	; 0x1eea <__ftoa_engine+0x9c>
    1ee0:	e7 0e       	add	r14, r23
    1ee2:	f8 1e       	adc	r15, r24
    1ee4:	49 1f       	adc	r20, r25
    1ee6:	56 1f       	adc	r21, r22
    1ee8:	c1 1d       	adc	r28, r1
    1eea:	77 0f       	add	r23, r23
    1eec:	88 1f       	adc	r24, r24
    1eee:	99 1f       	adc	r25, r25
    1ef0:	66 1f       	adc	r22, r22
    1ef2:	06 94       	lsr	r0
    1ef4:	a1 f7       	brne	.-24     	; 0x1ede <__ftoa_engine+0x90>
    1ef6:	05 90       	lpm	r0, Z+
    1ef8:	07 94       	ror	r0
    1efa:	28 f4       	brcc	.+10     	; 0x1f06 <__ftoa_engine+0xb8>
    1efc:	f8 0e       	add	r15, r24
    1efe:	49 1f       	adc	r20, r25
    1f00:	56 1f       	adc	r21, r22
    1f02:	c7 1f       	adc	r28, r23
    1f04:	d1 1d       	adc	r29, r1
    1f06:	88 0f       	add	r24, r24
    1f08:	99 1f       	adc	r25, r25
    1f0a:	66 1f       	adc	r22, r22
    1f0c:	77 1f       	adc	r23, r23
    1f0e:	06 94       	lsr	r0
    1f10:	a1 f7       	brne	.-24     	; 0x1efa <__ftoa_engine+0xac>
    1f12:	05 90       	lpm	r0, Z+
    1f14:	07 94       	ror	r0
    1f16:	20 f4       	brcc	.+8      	; 0x1f20 <__ftoa_engine+0xd2>
    1f18:	49 0f       	add	r20, r25
    1f1a:	56 1f       	adc	r21, r22
    1f1c:	c7 1f       	adc	r28, r23
    1f1e:	d8 1f       	adc	r29, r24
    1f20:	99 0f       	add	r25, r25
    1f22:	66 1f       	adc	r22, r22
    1f24:	77 1f       	adc	r23, r23
    1f26:	88 1f       	adc	r24, r24
    1f28:	06 94       	lsr	r0
    1f2a:	a9 f7       	brne	.-22     	; 0x1f16 <__ftoa_engine+0xc8>
    1f2c:	84 91       	lpm	r24, Z
    1f2e:	10 95       	com	r17
    1f30:	17 70       	andi	r17, 0x07	; 7
    1f32:	41 f0       	breq	.+16     	; 0x1f44 <__ftoa_engine+0xf6>
    1f34:	d6 95       	lsr	r29
    1f36:	c7 95       	ror	r28
    1f38:	57 95       	ror	r21
    1f3a:	47 95       	ror	r20
    1f3c:	f7 94       	ror	r15
    1f3e:	e7 94       	ror	r14
    1f40:	1a 95       	dec	r17
    1f42:	c1 f7       	brne	.-16     	; 0x1f34 <__ftoa_engine+0xe6>
    1f44:	e6 e0       	ldi	r30, 0x06	; 6
    1f46:	f1 e0       	ldi	r31, 0x01	; 1
    1f48:	68 94       	set
    1f4a:	15 90       	lpm	r1, Z+
    1f4c:	15 91       	lpm	r17, Z+
    1f4e:	35 91       	lpm	r19, Z+
    1f50:	65 91       	lpm	r22, Z+
    1f52:	95 91       	lpm	r25, Z+
    1f54:	05 90       	lpm	r0, Z+
    1f56:	7f e2       	ldi	r23, 0x2F	; 47
    1f58:	73 95       	inc	r23
    1f5a:	e1 18       	sub	r14, r1
    1f5c:	f1 0a       	sbc	r15, r17
    1f5e:	43 0b       	sbc	r20, r19
    1f60:	56 0b       	sbc	r21, r22
    1f62:	c9 0b       	sbc	r28, r25
    1f64:	d0 09       	sbc	r29, r0
    1f66:	c0 f7       	brcc	.-16     	; 0x1f58 <__ftoa_engine+0x10a>
    1f68:	e1 0c       	add	r14, r1
    1f6a:	f1 1e       	adc	r15, r17
    1f6c:	43 1f       	adc	r20, r19
    1f6e:	56 1f       	adc	r21, r22
    1f70:	c9 1f       	adc	r28, r25
    1f72:	d0 1d       	adc	r29, r0
    1f74:	7e f4       	brtc	.+30     	; 0x1f94 <__ftoa_engine+0x146>
    1f76:	70 33       	cpi	r23, 0x30	; 48
    1f78:	11 f4       	brne	.+4      	; 0x1f7e <__ftoa_engine+0x130>
    1f7a:	8a 95       	dec	r24
    1f7c:	e6 cf       	rjmp	.-52     	; 0x1f4a <__ftoa_engine+0xfc>
    1f7e:	e8 94       	clt
    1f80:	01 50       	subi	r16, 0x01	; 1
    1f82:	30 f0       	brcs	.+12     	; 0x1f90 <__ftoa_engine+0x142>
    1f84:	08 0f       	add	r16, r24
    1f86:	0a f4       	brpl	.+2      	; 0x1f8a <__ftoa_engine+0x13c>
    1f88:	00 27       	eor	r16, r16
    1f8a:	02 17       	cp	r16, r18
    1f8c:	08 f4       	brcc	.+2      	; 0x1f90 <__ftoa_engine+0x142>
    1f8e:	20 2f       	mov	r18, r16
    1f90:	23 95       	inc	r18
    1f92:	02 2f       	mov	r16, r18
    1f94:	7a 33       	cpi	r23, 0x3A	; 58
    1f96:	28 f0       	brcs	.+10     	; 0x1fa2 <__ftoa_engine+0x154>
    1f98:	79 e3       	ldi	r23, 0x39	; 57
    1f9a:	7d 93       	st	X+, r23
    1f9c:	2a 95       	dec	r18
    1f9e:	e9 f7       	brne	.-6      	; 0x1f9a <__ftoa_engine+0x14c>
    1fa0:	10 c0       	rjmp	.+32     	; 0x1fc2 <__ftoa_engine+0x174>
    1fa2:	7d 93       	st	X+, r23
    1fa4:	2a 95       	dec	r18
    1fa6:	89 f6       	brne	.-94     	; 0x1f4a <__ftoa_engine+0xfc>
    1fa8:	06 94       	lsr	r0
    1faa:	97 95       	ror	r25
    1fac:	67 95       	ror	r22
    1fae:	37 95       	ror	r19
    1fb0:	17 95       	ror	r17
    1fb2:	17 94       	ror	r1
    1fb4:	e1 18       	sub	r14, r1
    1fb6:	f1 0a       	sbc	r15, r17
    1fb8:	43 0b       	sbc	r20, r19
    1fba:	56 0b       	sbc	r21, r22
    1fbc:	c9 0b       	sbc	r28, r25
    1fbe:	d0 09       	sbc	r29, r0
    1fc0:	98 f0       	brcs	.+38     	; 0x1fe8 <__ftoa_engine+0x19a>
    1fc2:	23 95       	inc	r18
    1fc4:	7e 91       	ld	r23, -X
    1fc6:	73 95       	inc	r23
    1fc8:	7a 33       	cpi	r23, 0x3A	; 58
    1fca:	08 f0       	brcs	.+2      	; 0x1fce <__ftoa_engine+0x180>
    1fcc:	70 e3       	ldi	r23, 0x30	; 48
    1fce:	7c 93       	st	X, r23
    1fd0:	20 13       	cpse	r18, r16
    1fd2:	b8 f7       	brcc	.-18     	; 0x1fc2 <__ftoa_engine+0x174>
    1fd4:	7e 91       	ld	r23, -X
    1fd6:	70 61       	ori	r23, 0x10	; 16
    1fd8:	7d 93       	st	X+, r23
    1fda:	30 f0       	brcs	.+12     	; 0x1fe8 <__ftoa_engine+0x19a>
    1fdc:	83 95       	inc	r24
    1fde:	71 e3       	ldi	r23, 0x31	; 49
    1fe0:	7d 93       	st	X+, r23
    1fe2:	70 e3       	ldi	r23, 0x30	; 48
    1fe4:	2a 95       	dec	r18
    1fe6:	e1 f7       	brne	.-8      	; 0x1fe0 <__ftoa_engine+0x192>
    1fe8:	11 24       	eor	r1, r1
    1fea:	ef 90       	pop	r14
    1fec:	ff 90       	pop	r15
    1fee:	0f 91       	pop	r16
    1ff0:	1f 91       	pop	r17
    1ff2:	cf 91       	pop	r28
    1ff4:	df 91       	pop	r29
    1ff6:	99 27       	eor	r25, r25
    1ff8:	87 fd       	sbrc	r24, 7
    1ffa:	90 95       	com	r25
    1ffc:	08 95       	ret

00001ffe <strnlen_P>:
    1ffe:	fc 01       	movw	r30, r24
    2000:	05 90       	lpm	r0, Z+
    2002:	61 50       	subi	r22, 0x01	; 1
    2004:	70 40       	sbci	r23, 0x00	; 0
    2006:	01 10       	cpse	r0, r1
    2008:	d8 f7       	brcc	.-10     	; 0x2000 <strnlen_P+0x2>
    200a:	80 95       	com	r24
    200c:	90 95       	com	r25
    200e:	8e 0f       	add	r24, r30
    2010:	9f 1f       	adc	r25, r31
    2012:	08 95       	ret

00002014 <strcmp>:
    2014:	fb 01       	movw	r30, r22
    2016:	dc 01       	movw	r26, r24
    2018:	8d 91       	ld	r24, X+
    201a:	01 90       	ld	r0, Z+
    201c:	80 19       	sub	r24, r0
    201e:	01 10       	cpse	r0, r1
    2020:	d9 f3       	breq	.-10     	; 0x2018 <strcmp+0x4>
    2022:	99 0b       	sbc	r25, r25
    2024:	08 95       	ret

00002026 <strnlen>:
    2026:	fc 01       	movw	r30, r24
    2028:	61 50       	subi	r22, 0x01	; 1
    202a:	70 40       	sbci	r23, 0x00	; 0
    202c:	01 90       	ld	r0, Z+
    202e:	01 10       	cpse	r0, r1
    2030:	d8 f7       	brcc	.-10     	; 0x2028 <strnlen+0x2>
    2032:	80 95       	com	r24
    2034:	90 95       	com	r25
    2036:	8e 0f       	add	r24, r30
    2038:	9f 1f       	adc	r25, r31
    203a:	08 95       	ret

0000203c <fputc>:
    203c:	0f 93       	push	r16
    203e:	1f 93       	push	r17
    2040:	cf 93       	push	r28
    2042:	df 93       	push	r29
    2044:	fb 01       	movw	r30, r22
    2046:	23 81       	ldd	r18, Z+3	; 0x03
    2048:	21 fd       	sbrc	r18, 1
    204a:	03 c0       	rjmp	.+6      	; 0x2052 <fputc+0x16>
    204c:	8f ef       	ldi	r24, 0xFF	; 255
    204e:	9f ef       	ldi	r25, 0xFF	; 255
    2050:	28 c0       	rjmp	.+80     	; 0x20a2 <fputc+0x66>
    2052:	22 ff       	sbrs	r18, 2
    2054:	16 c0       	rjmp	.+44     	; 0x2082 <fputc+0x46>
    2056:	46 81       	ldd	r20, Z+6	; 0x06
    2058:	57 81       	ldd	r21, Z+7	; 0x07
    205a:	24 81       	ldd	r18, Z+4	; 0x04
    205c:	35 81       	ldd	r19, Z+5	; 0x05
    205e:	42 17       	cp	r20, r18
    2060:	53 07       	cpc	r21, r19
    2062:	44 f4       	brge	.+16     	; 0x2074 <fputc+0x38>
    2064:	a0 81       	ld	r26, Z
    2066:	b1 81       	ldd	r27, Z+1	; 0x01
    2068:	9d 01       	movw	r18, r26
    206a:	2f 5f       	subi	r18, 0xFF	; 255
    206c:	3f 4f       	sbci	r19, 0xFF	; 255
    206e:	31 83       	std	Z+1, r19	; 0x01
    2070:	20 83       	st	Z, r18
    2072:	8c 93       	st	X, r24
    2074:	26 81       	ldd	r18, Z+6	; 0x06
    2076:	37 81       	ldd	r19, Z+7	; 0x07
    2078:	2f 5f       	subi	r18, 0xFF	; 255
    207a:	3f 4f       	sbci	r19, 0xFF	; 255
    207c:	37 83       	std	Z+7, r19	; 0x07
    207e:	26 83       	std	Z+6, r18	; 0x06
    2080:	10 c0       	rjmp	.+32     	; 0x20a2 <fputc+0x66>
    2082:	eb 01       	movw	r28, r22
    2084:	09 2f       	mov	r16, r25
    2086:	18 2f       	mov	r17, r24
    2088:	00 84       	ldd	r0, Z+8	; 0x08
    208a:	f1 85       	ldd	r31, Z+9	; 0x09
    208c:	e0 2d       	mov	r30, r0
    208e:	09 95       	icall
    2090:	89 2b       	or	r24, r25
    2092:	e1 f6       	brne	.-72     	; 0x204c <fputc+0x10>
    2094:	8e 81       	ldd	r24, Y+6	; 0x06
    2096:	9f 81       	ldd	r25, Y+7	; 0x07
    2098:	01 96       	adiw	r24, 0x01	; 1
    209a:	9f 83       	std	Y+7, r25	; 0x07
    209c:	8e 83       	std	Y+6, r24	; 0x06
    209e:	81 2f       	mov	r24, r17
    20a0:	90 2f       	mov	r25, r16
    20a2:	df 91       	pop	r29
    20a4:	cf 91       	pop	r28
    20a6:	1f 91       	pop	r17
    20a8:	0f 91       	pop	r16
    20aa:	08 95       	ret

000020ac <sprintf>:
    20ac:	ae e0       	ldi	r26, 0x0E	; 14
    20ae:	b0 e0       	ldi	r27, 0x00	; 0
    20b0:	eb e5       	ldi	r30, 0x5B	; 91
    20b2:	f0 e1       	ldi	r31, 0x10	; 16
    20b4:	a0 ce       	rjmp	.-704    	; 0x1df6 <__prologue_saves__+0x1c>
    20b6:	0d 89       	ldd	r16, Y+21	; 0x15
    20b8:	1e 89       	ldd	r17, Y+22	; 0x16
    20ba:	86 e0       	ldi	r24, 0x06	; 6
    20bc:	8c 83       	std	Y+4, r24	; 0x04
    20be:	1a 83       	std	Y+2, r17	; 0x02
    20c0:	09 83       	std	Y+1, r16	; 0x01
    20c2:	8f ef       	ldi	r24, 0xFF	; 255
    20c4:	9f e7       	ldi	r25, 0x7F	; 127
    20c6:	9e 83       	std	Y+6, r25	; 0x06
    20c8:	8d 83       	std	Y+5, r24	; 0x05
    20ca:	ae 01       	movw	r20, r28
    20cc:	47 5e       	subi	r20, 0xE7	; 231
    20ce:	5f 4f       	sbci	r21, 0xFF	; 255
    20d0:	6f 89       	ldd	r22, Y+23	; 0x17
    20d2:	78 8d       	ldd	r23, Y+24	; 0x18
    20d4:	ce 01       	movw	r24, r28
    20d6:	01 96       	adiw	r24, 0x01	; 1
    20d8:	0e 94 f7 07 	call	0xfee	; 0xfee <vfprintf>
    20dc:	2f 81       	ldd	r18, Y+7	; 0x07
    20de:	38 85       	ldd	r19, Y+8	; 0x08
    20e0:	f8 01       	movw	r30, r16
    20e2:	e2 0f       	add	r30, r18
    20e4:	f3 1f       	adc	r31, r19
    20e6:	10 82       	st	Z, r1
    20e8:	2e 96       	adiw	r28, 0x0e	; 14
    20ea:	e4 e0       	ldi	r30, 0x04	; 4
    20ec:	a0 ce       	rjmp	.-704    	; 0x1e2e <__epilogue_restores__+0x1c>

000020ee <__ultoa_invert>:
    20ee:	fa 01       	movw	r30, r20
    20f0:	aa 27       	eor	r26, r26
    20f2:	28 30       	cpi	r18, 0x08	; 8
    20f4:	51 f1       	breq	.+84     	; 0x214a <__ultoa_invert+0x5c>
    20f6:	20 31       	cpi	r18, 0x10	; 16
    20f8:	81 f1       	breq	.+96     	; 0x215a <__ultoa_invert+0x6c>
    20fa:	e8 94       	clt
    20fc:	6f 93       	push	r22
    20fe:	6e 7f       	andi	r22, 0xFE	; 254
    2100:	6e 5f       	subi	r22, 0xFE	; 254
    2102:	7f 4f       	sbci	r23, 0xFF	; 255
    2104:	8f 4f       	sbci	r24, 0xFF	; 255
    2106:	9f 4f       	sbci	r25, 0xFF	; 255
    2108:	af 4f       	sbci	r26, 0xFF	; 255
    210a:	b1 e0       	ldi	r27, 0x01	; 1
    210c:	3e d0       	rcall	.+124    	; 0x218a <__ultoa_invert+0x9c>
    210e:	b4 e0       	ldi	r27, 0x04	; 4
    2110:	3c d0       	rcall	.+120    	; 0x218a <__ultoa_invert+0x9c>
    2112:	67 0f       	add	r22, r23
    2114:	78 1f       	adc	r23, r24
    2116:	89 1f       	adc	r24, r25
    2118:	9a 1f       	adc	r25, r26
    211a:	a1 1d       	adc	r26, r1
    211c:	68 0f       	add	r22, r24
    211e:	79 1f       	adc	r23, r25
    2120:	8a 1f       	adc	r24, r26
    2122:	91 1d       	adc	r25, r1
    2124:	a1 1d       	adc	r26, r1
    2126:	6a 0f       	add	r22, r26
    2128:	71 1d       	adc	r23, r1
    212a:	81 1d       	adc	r24, r1
    212c:	91 1d       	adc	r25, r1
    212e:	a1 1d       	adc	r26, r1
    2130:	20 d0       	rcall	.+64     	; 0x2172 <__ultoa_invert+0x84>
    2132:	09 f4       	brne	.+2      	; 0x2136 <__ultoa_invert+0x48>
    2134:	68 94       	set
    2136:	3f 91       	pop	r19
    2138:	2a e0       	ldi	r18, 0x0A	; 10
    213a:	26 9f       	mul	r18, r22
    213c:	11 24       	eor	r1, r1
    213e:	30 19       	sub	r19, r0
    2140:	30 5d       	subi	r19, 0xD0	; 208
    2142:	31 93       	st	Z+, r19
    2144:	de f6       	brtc	.-74     	; 0x20fc <__ultoa_invert+0xe>
    2146:	cf 01       	movw	r24, r30
    2148:	08 95       	ret
    214a:	46 2f       	mov	r20, r22
    214c:	47 70       	andi	r20, 0x07	; 7
    214e:	40 5d       	subi	r20, 0xD0	; 208
    2150:	41 93       	st	Z+, r20
    2152:	b3 e0       	ldi	r27, 0x03	; 3
    2154:	0f d0       	rcall	.+30     	; 0x2174 <__ultoa_invert+0x86>
    2156:	c9 f7       	brne	.-14     	; 0x214a <__ultoa_invert+0x5c>
    2158:	f6 cf       	rjmp	.-20     	; 0x2146 <__ultoa_invert+0x58>
    215a:	46 2f       	mov	r20, r22
    215c:	4f 70       	andi	r20, 0x0F	; 15
    215e:	40 5d       	subi	r20, 0xD0	; 208
    2160:	4a 33       	cpi	r20, 0x3A	; 58
    2162:	18 f0       	brcs	.+6      	; 0x216a <__ultoa_invert+0x7c>
    2164:	49 5d       	subi	r20, 0xD9	; 217
    2166:	31 fd       	sbrc	r19, 1
    2168:	40 52       	subi	r20, 0x20	; 32
    216a:	41 93       	st	Z+, r20
    216c:	02 d0       	rcall	.+4      	; 0x2172 <__ultoa_invert+0x84>
    216e:	a9 f7       	brne	.-22     	; 0x215a <__ultoa_invert+0x6c>
    2170:	ea cf       	rjmp	.-44     	; 0x2146 <__ultoa_invert+0x58>
    2172:	b4 e0       	ldi	r27, 0x04	; 4
    2174:	a6 95       	lsr	r26
    2176:	97 95       	ror	r25
    2178:	87 95       	ror	r24
    217a:	77 95       	ror	r23
    217c:	67 95       	ror	r22
    217e:	ba 95       	dec	r27
    2180:	c9 f7       	brne	.-14     	; 0x2174 <__ultoa_invert+0x86>
    2182:	00 97       	sbiw	r24, 0x00	; 0
    2184:	61 05       	cpc	r22, r1
    2186:	71 05       	cpc	r23, r1
    2188:	08 95       	ret
    218a:	9b 01       	movw	r18, r22
    218c:	ac 01       	movw	r20, r24
    218e:	0a 2e       	mov	r0, r26
    2190:	06 94       	lsr	r0
    2192:	57 95       	ror	r21
    2194:	47 95       	ror	r20
    2196:	37 95       	ror	r19
    2198:	27 95       	ror	r18
    219a:	ba 95       	dec	r27
    219c:	c9 f7       	brne	.-14     	; 0x2190 <__ultoa_invert+0xa2>
    219e:	62 0f       	add	r22, r18
    21a0:	73 1f       	adc	r23, r19
    21a2:	84 1f       	adc	r24, r20
    21a4:	95 1f       	adc	r25, r21
    21a6:	a0 1d       	adc	r26, r0
    21a8:	08 95       	ret

000021aa <strtod>:
    21aa:	a0 e0       	ldi	r26, 0x00	; 0
    21ac:	b0 e0       	ldi	r27, 0x00	; 0
    21ae:	ea ed       	ldi	r30, 0xDA	; 218
    21b0:	f0 e1       	ldi	r31, 0x10	; 16
    21b2:	17 ce       	rjmp	.-978    	; 0x1de2 <__prologue_saves__+0x8>
    21b4:	ec 01       	movw	r28, r24
    21b6:	7b 01       	movw	r14, r22
    21b8:	61 15       	cp	r22, r1
    21ba:	71 05       	cpc	r23, r1
    21bc:	19 f0       	breq	.+6      	; 0x21c4 <strtod+0x1a>
    21be:	db 01       	movw	r26, r22
    21c0:	8d 93       	st	X+, r24
    21c2:	9c 93       	st	X, r25
    21c4:	8e 01       	movw	r16, r28
    21c6:	0f 5f       	subi	r16, 0xFF	; 255
    21c8:	1f 4f       	sbci	r17, 0xFF	; 255
    21ca:	78 80       	ld	r7, Y
    21cc:	87 2d       	mov	r24, r7
    21ce:	90 e0       	ldi	r25, 0x00	; 0
    21d0:	3e d1       	rcall	.+636    	; 0x244e <isspace>
    21d2:	89 2b       	or	r24, r25
    21d4:	11 f0       	breq	.+4      	; 0x21da <strtod+0x30>
    21d6:	e8 01       	movw	r28, r16
    21d8:	f5 cf       	rjmp	.-22     	; 0x21c4 <strtod+0x1a>
    21da:	bd e2       	ldi	r27, 0x2D	; 45
    21dc:	7b 12       	cpse	r7, r27
    21de:	05 c0       	rjmp	.+10     	; 0x21ea <strtod+0x40>
    21e0:	0f 5f       	subi	r16, 0xFF	; 255
    21e2:	1f 4f       	sbci	r17, 0xFF	; 255
    21e4:	79 80       	ldd	r7, Y+1	; 0x01
    21e6:	c1 e0       	ldi	r28, 0x01	; 1
    21e8:	08 c0       	rjmp	.+16     	; 0x21fa <strtod+0x50>
    21ea:	eb e2       	ldi	r30, 0x2B	; 43
    21ec:	7e 12       	cpse	r7, r30
    21ee:	04 c0       	rjmp	.+8      	; 0x21f8 <strtod+0x4e>
    21f0:	8e 01       	movw	r16, r28
    21f2:	0e 5f       	subi	r16, 0xFE	; 254
    21f4:	1f 4f       	sbci	r17, 0xFF	; 255
    21f6:	79 80       	ldd	r7, Y+1	; 0x01
    21f8:	c0 e0       	ldi	r28, 0x00	; 0
    21fa:	68 01       	movw	r12, r16
    21fc:	f1 e0       	ldi	r31, 0x01	; 1
    21fe:	cf 1a       	sub	r12, r31
    2200:	d1 08       	sbc	r13, r1
    2202:	43 e0       	ldi	r20, 0x03	; 3
    2204:	50 e0       	ldi	r21, 0x00	; 0
    2206:	68 e0       	ldi	r22, 0x08	; 8
    2208:	72 e0       	ldi	r23, 0x02	; 2
    220a:	c6 01       	movw	r24, r12
    220c:	28 d1       	rcall	.+592    	; 0x245e <strncasecmp_P>
    220e:	89 2b       	or	r24, r25
    2210:	e9 f4       	brne	.+58     	; 0x224c <strtod+0xa2>
    2212:	68 01       	movw	r12, r16
    2214:	22 e0       	ldi	r18, 0x02	; 2
    2216:	c2 0e       	add	r12, r18
    2218:	d1 1c       	adc	r13, r1
    221a:	45 e0       	ldi	r20, 0x05	; 5
    221c:	50 e0       	ldi	r21, 0x00	; 0
    221e:	63 e0       	ldi	r22, 0x03	; 3
    2220:	72 e0       	ldi	r23, 0x02	; 2
    2222:	c6 01       	movw	r24, r12
    2224:	1c d1       	rcall	.+568    	; 0x245e <strncasecmp_P>
    2226:	89 2b       	or	r24, r25
    2228:	21 f4       	brne	.+8      	; 0x2232 <strtod+0x88>
    222a:	68 01       	movw	r12, r16
    222c:	87 e0       	ldi	r24, 0x07	; 7
    222e:	c8 0e       	add	r12, r24
    2230:	d1 1c       	adc	r13, r1
    2232:	e1 14       	cp	r14, r1
    2234:	f1 04       	cpc	r15, r1
    2236:	19 f0       	breq	.+6      	; 0x223e <strtod+0x94>
    2238:	d7 01       	movw	r26, r14
    223a:	cd 92       	st	X+, r12
    223c:	dc 92       	st	X, r13
    223e:	c1 11       	cpse	r28, r1
    2240:	f9 c0       	rjmp	.+498    	; 0x2434 <strtod+0x28a>
    2242:	60 e0       	ldi	r22, 0x00	; 0
    2244:	70 e0       	ldi	r23, 0x00	; 0
    2246:	80 e8       	ldi	r24, 0x80	; 128
    2248:	9f e7       	ldi	r25, 0x7F	; 127
    224a:	fd c0       	rjmp	.+506    	; 0x2446 <strtod+0x29c>
    224c:	43 e0       	ldi	r20, 0x03	; 3
    224e:	50 e0       	ldi	r21, 0x00	; 0
    2250:	60 e0       	ldi	r22, 0x00	; 0
    2252:	72 e0       	ldi	r23, 0x02	; 2
    2254:	c6 01       	movw	r24, r12
    2256:	03 d1       	rcall	.+518    	; 0x245e <strncasecmp_P>
    2258:	89 2b       	or	r24, r25
    225a:	51 f4       	brne	.+20     	; 0x2270 <strtod+0xc6>
    225c:	e1 14       	cp	r14, r1
    225e:	f1 04       	cpc	r15, r1
    2260:	09 f4       	brne	.+2      	; 0x2264 <strtod+0xba>
    2262:	ed c0       	rjmp	.+474    	; 0x243e <strtod+0x294>
    2264:	0e 5f       	subi	r16, 0xFE	; 254
    2266:	1f 4f       	sbci	r17, 0xFF	; 255
    2268:	f7 01       	movw	r30, r14
    226a:	11 83       	std	Z+1, r17	; 0x01
    226c:	00 83       	st	Z, r16
    226e:	e7 c0       	rjmp	.+462    	; 0x243e <strtod+0x294>
    2270:	68 01       	movw	r12, r16
    2272:	60 e0       	ldi	r22, 0x00	; 0
    2274:	70 e0       	ldi	r23, 0x00	; 0
    2276:	cb 01       	movw	r24, r22
    2278:	00 e0       	ldi	r16, 0x00	; 0
    227a:	10 e0       	ldi	r17, 0x00	; 0
    227c:	f6 01       	movw	r30, r12
    227e:	d0 ed       	ldi	r29, 0xD0	; 208
    2280:	d7 0d       	add	r29, r7
    2282:	da 30       	cpi	r29, 0x0A	; 10
    2284:	50 f5       	brcc	.+84     	; 0x22da <strtod+0x130>
    2286:	2c 2f       	mov	r18, r28
    2288:	22 60       	ori	r18, 0x02	; 2
    228a:	62 2e       	mov	r6, r18
    228c:	2c 2f       	mov	r18, r28
    228e:	28 70       	andi	r18, 0x08	; 8
    2290:	c2 ff       	sbrs	r28, 2
    2292:	05 c0       	rjmp	.+10     	; 0x229e <strtod+0xf4>
    2294:	21 11       	cpse	r18, r1
    2296:	27 c0       	rjmp	.+78     	; 0x22e6 <strtod+0x13c>
    2298:	0f 5f       	subi	r16, 0xFF	; 255
    229a:	1f 4f       	sbci	r17, 0xFF	; 255
    229c:	24 c0       	rjmp	.+72     	; 0x22e6 <strtod+0x13c>
    229e:	22 23       	and	r18, r18
    22a0:	11 f0       	breq	.+4      	; 0x22a6 <strtod+0xfc>
    22a2:	01 50       	subi	r16, 0x01	; 1
    22a4:	11 09       	sbc	r17, r1
    22a6:	a5 e0       	ldi	r26, 0x05	; 5
    22a8:	b0 e0       	ldi	r27, 0x00	; 0
    22aa:	9b 01       	movw	r18, r22
    22ac:	ac 01       	movw	r20, r24
    22ae:	8b dd       	rcall	.-1258   	; 0x1dc6 <__muluhisi3>
    22b0:	4b 01       	movw	r8, r22
    22b2:	5c 01       	movw	r10, r24
    22b4:	88 0c       	add	r8, r8
    22b6:	99 1c       	adc	r9, r9
    22b8:	aa 1c       	adc	r10, r10
    22ba:	bb 1c       	adc	r11, r11
    22bc:	c5 01       	movw	r24, r10
    22be:	b4 01       	movw	r22, r8
    22c0:	6d 0f       	add	r22, r29
    22c2:	71 1d       	adc	r23, r1
    22c4:	81 1d       	adc	r24, r1
    22c6:	91 1d       	adc	r25, r1
    22c8:	68 39       	cpi	r22, 0x98	; 152
    22ca:	a9 e9       	ldi	r26, 0x99	; 153
    22cc:	7a 07       	cpc	r23, r26
    22ce:	8a 07       	cpc	r24, r26
    22d0:	a9 e1       	ldi	r26, 0x19	; 25
    22d2:	9a 07       	cpc	r25, r26
    22d4:	40 f0       	brcs	.+16     	; 0x22e6 <strtod+0x13c>
    22d6:	c6 60       	ori	r28, 0x06	; 6
    22d8:	05 c0       	rjmp	.+10     	; 0x22e4 <strtod+0x13a>
    22da:	de 3f       	cpi	r29, 0xFE	; 254
    22dc:	51 f4       	brne	.+20     	; 0x22f2 <strtod+0x148>
    22de:	c3 fd       	sbrc	r28, 3
    22e0:	44 c0       	rjmp	.+136    	; 0x236a <strtod+0x1c0>
    22e2:	c8 60       	ori	r28, 0x08	; 8
    22e4:	6c 2e       	mov	r6, r28
    22e6:	bf ef       	ldi	r27, 0xFF	; 255
    22e8:	cb 1a       	sub	r12, r27
    22ea:	db 0a       	sbc	r13, r27
    22ec:	70 80       	ld	r7, Z
    22ee:	c6 2d       	mov	r28, r6
    22f0:	c5 cf       	rjmp	.-118    	; 0x227c <strtod+0xd2>
    22f2:	2d 2f       	mov	r18, r29
    22f4:	2f 7d       	andi	r18, 0xDF	; 223
    22f6:	25 31       	cpi	r18, 0x15	; 21
    22f8:	c1 f5       	brne	.+112    	; 0x236a <strtod+0x1c0>
    22fa:	40 81       	ld	r20, Z
    22fc:	4d 32       	cpi	r20, 0x2D	; 45
    22fe:	11 f4       	brne	.+4      	; 0x2304 <strtod+0x15a>
    2300:	c0 61       	ori	r28, 0x10	; 16
    2302:	06 c0       	rjmp	.+12     	; 0x2310 <strtod+0x166>
    2304:	4b 32       	cpi	r20, 0x2B	; 43
    2306:	21 f0       	breq	.+8      	; 0x2310 <strtod+0x166>
    2308:	31 96       	adiw	r30, 0x01	; 1
    230a:	21 e0       	ldi	r18, 0x01	; 1
    230c:	30 e0       	ldi	r19, 0x00	; 0
    230e:	06 c0       	rjmp	.+12     	; 0x231c <strtod+0x172>
    2310:	32 96       	adiw	r30, 0x02	; 2
    2312:	d6 01       	movw	r26, r12
    2314:	11 96       	adiw	r26, 0x01	; 1
    2316:	4c 91       	ld	r20, X
    2318:	22 e0       	ldi	r18, 0x02	; 2
    231a:	30 e0       	ldi	r19, 0x00	; 0
    231c:	a0 ed       	ldi	r26, 0xD0	; 208
    231e:	a4 0f       	add	r26, r20
    2320:	aa 30       	cpi	r26, 0x0A	; 10
    2322:	18 f0       	brcs	.+6      	; 0x232a <strtod+0x180>
    2324:	e2 1b       	sub	r30, r18
    2326:	f3 0b       	sbc	r31, r19
    2328:	20 c0       	rjmp	.+64     	; 0x236a <strtod+0x1c0>
    232a:	40 e0       	ldi	r20, 0x00	; 0
    232c:	50 e0       	ldi	r21, 0x00	; 0
    232e:	40 38       	cpi	r20, 0x80	; 128
    2330:	bc e0       	ldi	r27, 0x0C	; 12
    2332:	5b 07       	cpc	r21, r27
    2334:	5c f4       	brge	.+22     	; 0x234c <strtod+0x1a2>
    2336:	9a 01       	movw	r18, r20
    2338:	22 0f       	add	r18, r18
    233a:	33 1f       	adc	r19, r19
    233c:	22 0f       	add	r18, r18
    233e:	33 1f       	adc	r19, r19
    2340:	42 0f       	add	r20, r18
    2342:	53 1f       	adc	r21, r19
    2344:	44 0f       	add	r20, r20
    2346:	55 1f       	adc	r21, r21
    2348:	4a 0f       	add	r20, r26
    234a:	51 1d       	adc	r21, r1
    234c:	31 96       	adiw	r30, 0x01	; 1
    234e:	df 01       	movw	r26, r30
    2350:	11 97       	sbiw	r26, 0x01	; 1
    2352:	2c 91       	ld	r18, X
    2354:	a0 ed       	ldi	r26, 0xD0	; 208
    2356:	a2 0f       	add	r26, r18
    2358:	aa 30       	cpi	r26, 0x0A	; 10
    235a:	48 f3       	brcs	.-46     	; 0x232e <strtod+0x184>
    235c:	c4 ff       	sbrs	r28, 4
    235e:	03 c0       	rjmp	.+6      	; 0x2366 <strtod+0x1bc>
    2360:	51 95       	neg	r21
    2362:	41 95       	neg	r20
    2364:	51 09       	sbc	r21, r1
    2366:	04 0f       	add	r16, r20
    2368:	15 1f       	adc	r17, r21
    236a:	c1 ff       	sbrs	r28, 1
    236c:	07 c0       	rjmp	.+14     	; 0x237c <strtod+0x1d2>
    236e:	e1 14       	cp	r14, r1
    2370:	f1 04       	cpc	r15, r1
    2372:	21 f0       	breq	.+8      	; 0x237c <strtod+0x1d2>
    2374:	31 97       	sbiw	r30, 0x01	; 1
    2376:	d7 01       	movw	r26, r14
    2378:	ed 93       	st	X+, r30
    237a:	fc 93       	st	X, r31
    237c:	97 da       	rcall	.-2770   	; 0x18ac <__floatunsisf>
    237e:	c3 70       	andi	r28, 0x03	; 3
    2380:	c3 30       	cpi	r28, 0x03	; 3
    2382:	19 f0       	breq	.+6      	; 0x238a <strtod+0x1e0>
    2384:	6b 01       	movw	r12, r22
    2386:	7c 01       	movw	r14, r24
    2388:	06 c0       	rjmp	.+12     	; 0x2396 <strtod+0x1ec>
    238a:	6b 01       	movw	r12, r22
    238c:	7c 01       	movw	r14, r24
    238e:	f7 fa       	bst	r15, 7
    2390:	f0 94       	com	r15
    2392:	f7 f8       	bld	r15, 7
    2394:	f0 94       	com	r15
    2396:	20 e0       	ldi	r18, 0x00	; 0
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	a9 01       	movw	r20, r18
    239c:	c7 01       	movw	r24, r14
    239e:	b6 01       	movw	r22, r12
    23a0:	e8 d9       	rcall	.-3120   	; 0x1772 <__cmpsf2>
    23a2:	88 23       	and	r24, r24
    23a4:	09 f4       	brne	.+2      	; 0x23a8 <strtod+0x1fe>
    23a6:	43 c0       	rjmp	.+134    	; 0x242e <strtod+0x284>
    23a8:	17 ff       	sbrs	r17, 7
    23aa:	06 c0       	rjmp	.+12     	; 0x23b8 <strtod+0x20e>
    23ac:	11 95       	neg	r17
    23ae:	01 95       	neg	r16
    23b0:	11 09       	sbc	r17, r1
    23b2:	cf e1       	ldi	r28, 0x1F	; 31
    23b4:	d2 e0       	ldi	r29, 0x02	; 2
    23b6:	02 c0       	rjmp	.+4      	; 0x23bc <strtod+0x212>
    23b8:	c7 e3       	ldi	r28, 0x37	; 55
    23ba:	d2 e0       	ldi	r29, 0x02	; 2
    23bc:	5e 01       	movw	r10, r28
    23be:	b8 e1       	ldi	r27, 0x18	; 24
    23c0:	ab 1a       	sub	r10, r27
    23c2:	b1 08       	sbc	r11, r1
    23c4:	46 01       	movw	r8, r12
    23c6:	be 2d       	mov	r27, r14
    23c8:	af 2d       	mov	r26, r15
    23ca:	90 e2       	ldi	r25, 0x20	; 32
    23cc:	e9 2e       	mov	r14, r25
    23ce:	f1 2c       	mov	r15, r1
    23d0:	0e 15       	cp	r16, r14
    23d2:	1f 05       	cpc	r17, r15
    23d4:	7c f0       	brlt	.+30     	; 0x23f4 <strtod+0x24a>
    23d6:	fe 01       	movw	r30, r28
    23d8:	25 91       	lpm	r18, Z+
    23da:	35 91       	lpm	r19, Z+
    23dc:	45 91       	lpm	r20, Z+
    23de:	54 91       	lpm	r21, Z
    23e0:	b4 01       	movw	r22, r8
    23e2:	8b 2f       	mov	r24, r27
    23e4:	9a 2f       	mov	r25, r26
    23e6:	18 db       	rcall	.-2512   	; 0x1a18 <__mulsf3>
    23e8:	4b 01       	movw	r8, r22
    23ea:	b8 2f       	mov	r27, r24
    23ec:	a9 2f       	mov	r26, r25
    23ee:	0e 19       	sub	r16, r14
    23f0:	1f 09       	sbc	r17, r15
    23f2:	ee cf       	rjmp	.-36     	; 0x23d0 <strtod+0x226>
    23f4:	24 97       	sbiw	r28, 0x04	; 4
    23f6:	f5 94       	asr	r15
    23f8:	e7 94       	ror	r14
    23fa:	ca 15       	cp	r28, r10
    23fc:	db 05       	cpc	r29, r11
    23fe:	41 f7       	brne	.-48     	; 0x23d0 <strtod+0x226>
    2400:	64 01       	movw	r12, r8
    2402:	eb 2e       	mov	r14, r27
    2404:	fa 2e       	mov	r15, r26
    2406:	8e 2d       	mov	r24, r14
    2408:	88 0f       	add	r24, r24
    240a:	8f 2d       	mov	r24, r15
    240c:	88 1f       	adc	r24, r24
    240e:	8f 3f       	cpi	r24, 0xFF	; 255
    2410:	41 f0       	breq	.+16     	; 0x2422 <strtod+0x278>
    2412:	20 e0       	ldi	r18, 0x00	; 0
    2414:	30 e0       	ldi	r19, 0x00	; 0
    2416:	a9 01       	movw	r20, r18
    2418:	c7 01       	movw	r24, r14
    241a:	b6 01       	movw	r22, r12
    241c:	aa d9       	rcall	.-3244   	; 0x1772 <__cmpsf2>
    241e:	81 11       	cpse	r24, r1
    2420:	06 c0       	rjmp	.+12     	; 0x242e <strtod+0x284>
    2422:	82 e2       	ldi	r24, 0x22	; 34
    2424:	90 e0       	ldi	r25, 0x00	; 0
    2426:	90 93 69 04 	sts	0x0469, r25
    242a:	80 93 68 04 	sts	0x0468, r24
    242e:	c7 01       	movw	r24, r14
    2430:	b6 01       	movw	r22, r12
    2432:	09 c0       	rjmp	.+18     	; 0x2446 <strtod+0x29c>
    2434:	60 e0       	ldi	r22, 0x00	; 0
    2436:	70 e0       	ldi	r23, 0x00	; 0
    2438:	80 e8       	ldi	r24, 0x80	; 128
    243a:	9f ef       	ldi	r25, 0xFF	; 255
    243c:	04 c0       	rjmp	.+8      	; 0x2446 <strtod+0x29c>
    243e:	60 e0       	ldi	r22, 0x00	; 0
    2440:	70 e0       	ldi	r23, 0x00	; 0
    2442:	80 ec       	ldi	r24, 0xC0	; 192
    2444:	9f e7       	ldi	r25, 0x7F	; 127
    2446:	cd b7       	in	r28, 0x3d	; 61
    2448:	de b7       	in	r29, 0x3e	; 62
    244a:	ee e0       	ldi	r30, 0x0E	; 14
    244c:	e6 cc       	rjmp	.-1588   	; 0x1e1a <__epilogue_restores__+0x8>

0000244e <isspace>:
    244e:	91 11       	cpse	r25, r1
    2450:	1e c0       	rjmp	.+60     	; 0x248e <__ctype_isfalse>
    2452:	80 32       	cpi	r24, 0x20	; 32
    2454:	19 f0       	breq	.+6      	; 0x245c <isspace+0xe>
    2456:	89 50       	subi	r24, 0x09	; 9
    2458:	85 50       	subi	r24, 0x05	; 5
    245a:	d0 f7       	brcc	.-12     	; 0x2450 <isspace+0x2>
    245c:	08 95       	ret

0000245e <strncasecmp_P>:
    245e:	fb 01       	movw	r30, r22
    2460:	dc 01       	movw	r26, r24
    2462:	41 50       	subi	r20, 0x01	; 1
    2464:	50 40       	sbci	r21, 0x00	; 0
    2466:	88 f0       	brcs	.+34     	; 0x248a <strncasecmp_P+0x2c>
    2468:	8d 91       	ld	r24, X+
    246a:	81 34       	cpi	r24, 0x41	; 65
    246c:	1c f0       	brlt	.+6      	; 0x2474 <strncasecmp_P+0x16>
    246e:	8b 35       	cpi	r24, 0x5B	; 91
    2470:	0c f4       	brge	.+2      	; 0x2474 <strncasecmp_P+0x16>
    2472:	80 5e       	subi	r24, 0xE0	; 224
    2474:	65 91       	lpm	r22, Z+
    2476:	61 34       	cpi	r22, 0x41	; 65
    2478:	1c f0       	brlt	.+6      	; 0x2480 <strncasecmp_P+0x22>
    247a:	6b 35       	cpi	r22, 0x5B	; 91
    247c:	0c f4       	brge	.+2      	; 0x2480 <strncasecmp_P+0x22>
    247e:	60 5e       	subi	r22, 0xE0	; 224
    2480:	86 1b       	sub	r24, r22
    2482:	61 11       	cpse	r22, r1
    2484:	71 f3       	breq	.-36     	; 0x2462 <strncasecmp_P+0x4>
    2486:	99 0b       	sbc	r25, r25
    2488:	08 95       	ret
    248a:	88 1b       	sub	r24, r24
    248c:	fc cf       	rjmp	.-8      	; 0x2486 <strncasecmp_P+0x28>

0000248e <__ctype_isfalse>:
    248e:	99 27       	eor	r25, r25
    2490:	88 27       	eor	r24, r24

00002492 <__ctype_istrue>:
    2492:	08 95       	ret

00002494 <eeprom_read_block>:
    2494:	dc 01       	movw	r26, r24
    2496:	cb 01       	movw	r24, r22

00002498 <eeprom_read_blraw>:
    2498:	fc 01       	movw	r30, r24
    249a:	f9 99       	sbic	0x1f, 1	; 31
    249c:	fe cf       	rjmp	.-4      	; 0x249a <eeprom_read_blraw+0x2>
    249e:	06 c0       	rjmp	.+12     	; 0x24ac <eeprom_read_blraw+0x14>
    24a0:	f2 bd       	out	0x22, r31	; 34
    24a2:	e1 bd       	out	0x21, r30	; 33
    24a4:	f8 9a       	sbi	0x1f, 0	; 31
    24a6:	31 96       	adiw	r30, 0x01	; 1
    24a8:	00 b4       	in	r0, 0x20	; 32
    24aa:	0d 92       	st	X+, r0
    24ac:	41 50       	subi	r20, 0x01	; 1
    24ae:	50 40       	sbci	r21, 0x00	; 0
    24b0:	b8 f7       	brcc	.-18     	; 0x24a0 <eeprom_read_blraw+0x8>
    24b2:	08 95       	ret

000024b4 <eeprom_update_block>:
    24b4:	dc 01       	movw	r26, r24
    24b6:	a4 0f       	add	r26, r20
    24b8:	b5 1f       	adc	r27, r21
    24ba:	41 50       	subi	r20, 0x01	; 1
    24bc:	50 40       	sbci	r21, 0x00	; 0
    24be:	40 f0       	brcs	.+16     	; 0x24d0 <eeprom_update_block+0x1c>
    24c0:	cb 01       	movw	r24, r22
    24c2:	84 0f       	add	r24, r20
    24c4:	95 1f       	adc	r25, r21
    24c6:	2e 91       	ld	r18, -X
    24c8:	05 d0       	rcall	.+10     	; 0x24d4 <eeprom_update_r18>
    24ca:	41 50       	subi	r20, 0x01	; 1
    24cc:	50 40       	sbci	r21, 0x00	; 0
    24ce:	d8 f7       	brcc	.-10     	; 0x24c6 <eeprom_update_block+0x12>
    24d0:	08 95       	ret

000024d2 <eeprom_update_byte>:
    24d2:	26 2f       	mov	r18, r22

000024d4 <eeprom_update_r18>:
    24d4:	f9 99       	sbic	0x1f, 1	; 31
    24d6:	fe cf       	rjmp	.-4      	; 0x24d4 <eeprom_update_r18>
    24d8:	92 bd       	out	0x22, r25	; 34
    24da:	81 bd       	out	0x21, r24	; 33
    24dc:	f8 9a       	sbi	0x1f, 0	; 31
    24de:	01 97       	sbiw	r24, 0x01	; 1
    24e0:	00 b4       	in	r0, 0x20	; 32
    24e2:	02 16       	cp	r0, r18
    24e4:	39 f0       	breq	.+14     	; 0x24f4 <eeprom_update_r18+0x20>
    24e6:	1f ba       	out	0x1f, r1	; 31
    24e8:	20 bd       	out	0x20, r18	; 32
    24ea:	0f b6       	in	r0, 0x3f	; 63
    24ec:	f8 94       	cli
    24ee:	fa 9a       	sbi	0x1f, 2	; 31
    24f0:	f9 9a       	sbi	0x1f, 1	; 31
    24f2:	0f be       	out	0x3f, r0	; 63
    24f4:	08 95       	ret

000024f6 <eeprom_write_word>:
    24f6:	02 d0       	rcall	.+4      	; 0x24fc <eeprom_write_byte>
    24f8:	27 2f       	mov	r18, r23
    24fa:	01 c0       	rjmp	.+2      	; 0x24fe <eeprom_write_r18>

000024fc <eeprom_write_byte>:
    24fc:	26 2f       	mov	r18, r22

000024fe <eeprom_write_r18>:
    24fe:	f9 99       	sbic	0x1f, 1	; 31
    2500:	fe cf       	rjmp	.-4      	; 0x24fe <eeprom_write_r18>
    2502:	1f ba       	out	0x1f, r1	; 31
    2504:	92 bd       	out	0x22, r25	; 34
    2506:	81 bd       	out	0x21, r24	; 33
    2508:	20 bd       	out	0x20, r18	; 32
    250a:	0f b6       	in	r0, 0x3f	; 63
    250c:	f8 94       	cli
    250e:	fa 9a       	sbi	0x1f, 2	; 31
    2510:	f9 9a       	sbi	0x1f, 1	; 31
    2512:	0f be       	out	0x3f, r0	; 63
    2514:	01 96       	adiw	r24, 0x01	; 1
    2516:	08 95       	ret

00002518 <_exit>:
    2518:	f8 94       	cli

0000251a <__stop_program>:
    251a:	ff cf       	rjmp	.-2      	; 0x251a <__stop_program>
